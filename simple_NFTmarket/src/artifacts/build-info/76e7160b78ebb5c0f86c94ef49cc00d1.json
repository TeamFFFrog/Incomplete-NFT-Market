{
	"id": "76e7160b78ebb5c0f86c94ef49cc00d1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/NFTmarket.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract NFTmarket {\r\n    IERC20 public erc20;\r\n    IERC721 public erc721;\r\n\r\n    bytes4 internal constant MAGIC_ON_ERC721_RECEIVED = 0x150b7a02;\r\n\r\n    struct Order {\r\n        address seller;\r\n        uint256 tokenID;\r\n        uint256 price;\r\n    }\r\n    mapping (uint256 => Order) IDinOrder; // tokenid to order\r\n    Order[] public orders;\r\n    mapping (uint256 => uint256) IDofOrder;\r\n\r\n    event Deal(address seller, address buyer, uint256 tokenID, uint256 price);\r\n    event NewOrder(address seller, uint256 tokenID, uint256 price);\r\n    event PriceChanged(address seller, uint256 tokenID, uint256 previousprice, uint256 newprice);\r\n    event CancelOrder(address seller, uint256 tokenID);\r\n\r\n    constructor(address _erc20, address _erc721){\r\n        require(_erc20 != address(0), \"zero address\");\r\n        require(_erc721 != address(0), \"zero address\");\r\n        erc20 = IERC20(_erc20);\r\n        erc721 = IERC721(_erc721);\r\n    }\r\n\r\n    function buy(uint256 _tokenID) external{\r\n        address seller = IDinOrder[_tokenID].seller;\r\n        address buyer = msg.sender;\r\n        uint256 price = IDinOrder[_tokenID].price;\r\n\r\n        require(erc20.transferFrom(buyer, seller, price), \"transfer fail\");\r\n        erc721.safeTransferFrom(address(this), buyer, _tokenID);\r\n\r\n        removeOrder(_tokenID);\r\n\r\n        emit Deal(seller, buyer , _tokenID, price);\r\n    }\r\n\r\n    function cancel(uint256 _tokenID) external {\r\n        address seller = IDinOrder[_tokenID].seller;\r\n        require(msg.sender == seller, \"not seller\");\r\n\r\n        erc721.safeTransferFrom(address(this), seller, _tokenID);\r\n\r\n        removeOrder(_tokenID);\r\n\r\n        emit CancelOrder(seller, _tokenID);\r\n    }\r\n\r\n    function change(uint256 _tokenID, uint256 _price) external {\r\n        address seller = IDinOrder[_tokenID].seller;\r\n        require(msg.sender == seller, \"not seller\");\r\n\r\n        uint256 previousprice = IDinOrder[_tokenID].price;\r\n        IDinOrder[_tokenID].price = _price;\r\n\r\n        Order storage order = orders[IDofOrder[_tokenID]];\r\n        order.price = _price;\r\n\r\n        emit PriceChanged(seller, _tokenID, previousprice, _price);\r\n    }\r\n\r\n    function isListed(uint256 _tokenID) public view returns(bool) {\r\n        return IDinOrder[_tokenID].seller != address(0);\r\n    }\r\n\r\n    function onERC721Received(address operator, address from, uint256 tokenID, bytes calldata data) external returns (bytes4) {\r\n        uint256 price = toUint256(data, 0);\r\n        require(price > 0, \"price must be greater than 0\");\r\n\r\n        orders.push(Order(from, tokenID, price));\r\n        IDinOrder[tokenID] = Order(from, tokenID, price);\r\n        IDofOrder[tokenID] = orders.length - 1; \r\n\r\n        emit NewOrder(from, tokenID, price);\r\n\r\n        return MAGIC_ON_ERC721_RECEIVED;\r\n    }\r\n\r\n    function removeOrder(uint256 _tokenID) internal  {\r\n        uint256 index = IDofOrder[_tokenID];\r\n        uint256 lastIndex = orders.length - 1;\r\n\r\n        if (index != lastIndex){\r\n            Order storage lastOrder = orders[lastIndex];\r\n            orders[index] =  lastOrder;\r\n            IDofOrder[lastOrder.tokenID] = index; \r\n        }\r\n         \r\n        orders.pop();\r\n        delete IDinOrder[_tokenID];\r\n        delete IDofOrder[index];\r\n    }\r\n\r\n    function toUint256(bytes memory _bytes, uint256 _start) public pure returns (uint256) {\r\n        require(_start + 32 >= _start, \"Market:toUint256_overflow\");\r\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\r\n        uint256 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x20), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function getOrderLength() external view returns(uint256){\r\n        return orders.length;\r\n    }\r\n\r\n    function getAllNFTs() external view returns(Order[] memory) {\r\n        return orders;\r\n    }\r\n\r\n    function getMyNFTs() external view returns(Order[] memory){\r\n        Order[] memory myOrders = new Order[](orders.length);\r\n        uint256 count = 0;\r\n        for (uint256 i = 0; i < orders.length; i ++){\r\n            if(orders[i].seller == msg.sender){\r\n                myOrders[count] = orders[i];\r\n                count ++;\r\n            }\r\n        }\r\n        return myOrders;\r\n    }\r\n}\r\n\r\n\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 788,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 790,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 798,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 802,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 808,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/NFTmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/NFTmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/NFTmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/NFTmarket.sol": {
				"NFTmarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc20",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_erc721",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "CancelOrder",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Deal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NewOrder",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousprice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newprice",
									"type": "uint256"
								}
							],
							"name": "PriceChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "change",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc721",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllNFTs",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct NFTmarket.Order[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyNFTs",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct NFTmarket.Order[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOrderLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "isListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "orders",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_bytes",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								}
							],
							"name": "toUint256",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/NFTmarket.sol\":179:4408  contract NFTmarket {... */\n  mstore(0x40, 0x80)\n    /* \"src/NFTmarket.sol\":879:1113  constructor(address _erc20, address _erc721){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/NFTmarket.sol\":960:961  0 */\n  0x00\n    /* \"src/NFTmarket.sol\":942:962  _erc20 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/NFTmarket.sol\":942:948  _erc20 */\n  dup3\n    /* \"src/NFTmarket.sol\":942:962  _erc20 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/NFTmarket.sol\":934:979  require(_erc20 != address(0), \"zero address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"src/NFTmarket.sol\":1017:1018  0 */\n  0x00\n    /* \"src/NFTmarket.sol\":998:1019  _erc721 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/NFTmarket.sol\":998:1005  _erc721 */\n  dup2\n    /* \"src/NFTmarket.sol\":998:1019  _erc721 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/NFTmarket.sol\":990:1036  require(_erc721 != address(0), \"zero address\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_8\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"src/NFTmarket.sol\":1062:1068  _erc20 */\n  dup2\n    /* \"src/NFTmarket.sol\":1047:1052  erc20 */\n  0x00\n  dup1\n    /* \"src/NFTmarket.sol\":1047:1069  erc20 = IERC20(_erc20) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/NFTmarket.sol\":1097:1104  _erc721 */\n  dup1\n    /* \"src/NFTmarket.sol\":1080:1086  erc721 */\n  0x01\n  0x00\n    /* \"src/NFTmarket.sol\":1080:1105  erc721 = IERC721(_erc721) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/NFTmarket.sol\":879:1113  constructor(address _erc20, address _erc721){... */\n  pop\n  pop\n    /* \"src/NFTmarket.sol\":179:4408  contract NFTmarket {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_36\n  tag_13\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":949:1068   */\ntag_35:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_37\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_18\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_38\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1527   */\ntag_19:\n    /* \"#utility.yul\":1442:1453   */\n  0x00\n    /* \"#utility.yul\":1476:1482   */\n  dup3\n    /* \"#utility.yul\":1471:1474   */\n  dup3\n    /* \"#utility.yul\":1464:1483   */\n  mstore\n    /* \"#utility.yul\":1516:1520   */\n  0x20\n    /* \"#utility.yul\":1511:1514   */\n  dup3\n    /* \"#utility.yul\":1507:1521   */\n  add\n    /* \"#utility.yul\":1492:1521   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1527   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1695   */\ntag_20:\n    /* \"#utility.yul\":1673:1687   */\n  0x7a65726f20616464726573730000000000000000000000000000000000000000\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1661:1667   */\n  dup3\n    /* \"#utility.yul\":1657:1671   */\n  add\n    /* \"#utility.yul\":1650:1688   */\n  mstore\n    /* \"#utility.yul\":1533:1695   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1701:2067   */\ntag_21:\n    /* \"#utility.yul\":1843:1846   */\n  0x00\n    /* \"#utility.yul\":1864:1931   */\n  tag_42\n    /* \"#utility.yul\":1928:1930   */\n  0x0c\n    /* \"#utility.yul\":1923:1926   */\n  dup4\n    /* \"#utility.yul\":1864:1931   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1857:1931   */\n  swap2\n  pop\n    /* \"#utility.yul\":1940:2033   */\n  tag_43\n    /* \"#utility.yul\":2029:2032   */\n  dup3\n    /* \"#utility.yul\":1940:2033   */\n  tag_20\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2058:2060   */\n  0x20\n    /* \"#utility.yul\":2053:2056   */\n  dup3\n    /* \"#utility.yul\":2049:2061   */\n  add\n    /* \"#utility.yul\":2042:2061   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:2067   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2492   */\ntag_8:\n    /* \"#utility.yul\":2239:2243   */\n  0x00\n    /* \"#utility.yul\":2277:2279   */\n  0x20\n    /* \"#utility.yul\":2266:2275   */\n  dup3\n    /* \"#utility.yul\":2262:2280   */\n  add\n    /* \"#utility.yul\":2254:2280   */\n  swap1\n  pop\n    /* \"#utility.yul\":2326:2335   */\n  dup2\n    /* \"#utility.yul\":2320:2324   */\n  dup2\n    /* \"#utility.yul\":2316:2336   */\n  sub\n    /* \"#utility.yul\":2312:2313   */\n  0x00\n    /* \"#utility.yul\":2301:2310   */\n  dup4\n    /* \"#utility.yul\":2297:2314   */\n  add\n    /* \"#utility.yul\":2290:2337   */\n  mstore\n    /* \"#utility.yul\":2354:2485   */\n  tag_45\n    /* \"#utility.yul\":2480:2484   */\n  dup2\n    /* \"#utility.yul\":2354:2485   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2346:2485   */\n  swap1\n  pop\n    /* \"#utility.yul\":2073:2492   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"src/NFTmarket.sol\":179:4408  contract NFTmarket {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/NFTmarket.sol\":179:4408  contract NFTmarket {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa85c38ef\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa85c38ef\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb5cdf924\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbca6ce64\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe0391b09\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfcce4883\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3a52c7c2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40e58ee5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x629cb2e4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x785e9e86\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9d4971b7\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/NFTmarket.sol\":2460:2950  function onERC721Received(address operator, address from, uint256 tokenID, bytes calldata data) external returns (bytes4) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":1870:2316  function change(uint256 _tokenID, uint256 _price) external {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"src/NFTmarket.sol\":1553:1862  function cancel(uint256 _tokenID) external {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"src/NFTmarket.sol\":4019:4405  function getMyNFTs() external view returns(Order[] memory){... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":205:224  IERC20 public erc20 */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":3816:3911  function getOrderLength() external view returns(uint256){... */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":497:518  Order[] public orders */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":3420:3808  function toUint256(bytes memory _bytes, uint256 _start) public pure returns (uint256) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":231:252  IERC721 public erc721 */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":1121:1545  function buy(uint256 _tokenID) external{... */\n    tag_12:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"src/NFTmarket.sol\":3919:4011  function getAllNFTs() external view returns(Order[] memory) {... */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":2324:2452  function isListed(uint256 _tokenID) public view returns(bool) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NFTmarket.sol\":2460:2950  function onERC721Received(address operator, address from, uint256 tokenID, bytes calldata data) external returns (bytes4) {... */\n    tag_19:\n        /* \"src/NFTmarket.sol\":2574:2580  bytes4 */\n      0x00\n        /* \"src/NFTmarket.sol\":2593:2606  uint256 price */\n      dup1\n        /* \"src/NFTmarket.sol\":2609:2627  toUint256(data, 0) */\n      tag_68\n        /* \"src/NFTmarket.sol\":2619:2623  data */\n      dup5\n      dup5\n        /* \"src/NFTmarket.sol\":2609:2627  toUint256(data, 0) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":2625:2626  0 */\n      0x00\n        /* \"src/NFTmarket.sol\":2609:2618  toUint256 */\n      tag_50\n        /* \"src/NFTmarket.sol\":2609:2627  toUint256(data, 0) */\n      jump\t// in\n    tag_68:\n        /* \"src/NFTmarket.sol\":2593:2627  uint256 price = toUint256(data, 0) */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":2654:2655  0 */\n      0x00\n        /* \"src/NFTmarket.sol\":2646:2651  price */\n      dup2\n        /* \"src/NFTmarket.sol\":2646:2655  price > 0 */\n      gt\n        /* \"src/NFTmarket.sol\":2638:2688  require(price > 0, \"price must be greater than 0\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"src/NFTmarket.sol\":2701:2707  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":2713:2740  Order(from, tokenID, price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/NFTmarket.sol\":2719:2723  from */\n      dup9\n        /* \"src/NFTmarket.sol\":2713:2740  Order(from, tokenID, price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/NFTmarket.sol\":2725:2732  tokenID */\n      dup8\n        /* \"src/NFTmarket.sol\":2713:2740  Order(from, tokenID, price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/NFTmarket.sol\":2734:2739  price */\n      dup4\n        /* \"src/NFTmarket.sol\":2713:2740  Order(from, tokenID, price) */\n      dup2\n      mstore\n      pop\n        /* \"src/NFTmarket.sol\":2701:2741  orders.push(Order(from, tokenID, price)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":2773:2800  Order(from, tokenID, price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/NFTmarket.sol\":2779:2783  from */\n      dup8\n        /* \"src/NFTmarket.sol\":2773:2800  Order(from, tokenID, price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/NFTmarket.sol\":2785:2792  tokenID */\n      dup7\n        /* \"src/NFTmarket.sol\":2773:2800  Order(from, tokenID, price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/NFTmarket.sol\":2794:2799  price */\n      dup3\n        /* \"src/NFTmarket.sol\":2773:2800  Order(from, tokenID, price) */\n      dup2\n      mstore\n      pop\n        /* \"src/NFTmarket.sol\":2752:2761  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":2752:2770  IDinOrder[tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":2762:2769  tokenID */\n      dup8\n        /* \"src/NFTmarket.sol\":2752:2770  IDinOrder[tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":2752:2800  IDinOrder[tokenID] = Order(from, tokenID, price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":2848:2849  1 */\n      0x01\n        /* \"src/NFTmarket.sol\":2832:2838  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":2832:2845  orders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":2832:2849  orders.length - 1 */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"src/NFTmarket.sol\":2811:2820  IDofOrder */\n      0x04\n        /* \"src/NFTmarket.sol\":2811:2829  IDofOrder[tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":2821:2828  tokenID */\n      dup8\n        /* \"src/NFTmarket.sol\":2811:2829  IDofOrder[tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":2811:2849  IDofOrder[tokenID] = orders.length - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NFTmarket.sol\":2868:2898  NewOrder(from, tokenID, price) */\n      0xd5b509e657d5ec37ae4bdcab658b7340c0453bb630516d26623359a34c1cecf3\n        /* \"src/NFTmarket.sol\":2877:2881  from */\n      dup7\n        /* \"src/NFTmarket.sol\":2883:2890  tokenID */\n      dup7\n        /* \"src/NFTmarket.sol\":2892:2897  price */\n      dup4\n        /* \"src/NFTmarket.sol\":2868:2898  NewOrder(from, tokenID, price) */\n      mload(0x40)\n      tag_75\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/NFTmarket.sol\":313:323  0x150b7a02 */\n      0x150b7a02\n        /* \"src/NFTmarket.sol\":2918:2942  MAGIC_ON_ERC721_RECEIVED */\n      0xe0\n      shl\n        /* \"src/NFTmarket.sol\":2911:2942  return MAGIC_ON_ERC721_RECEIVED */\n      swap2\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":2460:2950  function onERC721Received(address operator, address from, uint256 tokenID, bytes calldata data) external returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/NFTmarket.sol\":1870:2316  function change(uint256 _tokenID, uint256 _price) external {... */\n    tag_25:\n        /* \"src/NFTmarket.sol\":1940:1954  address seller */\n      0x00\n        /* \"src/NFTmarket.sol\":1957:1966  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":1957:1976  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":1967:1975  _tokenID */\n      dup5\n        /* \"src/NFTmarket.sol\":1957:1976  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":1957:1983  IDinOrder[_tokenID].seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1940:1983  address seller = IDinOrder[_tokenID].seller */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":2016:2022  seller */\n      dup1\n        /* \"src/NFTmarket.sol\":2002:2022  msg.sender == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":2002:2012  msg.sender */\n      caller\n        /* \"src/NFTmarket.sol\":2002:2022  msg.sender == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/NFTmarket.sol\":1994:2037  require(msg.sender == seller, \"not seller\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"src/NFTmarket.sol\":2050:2071  uint256 previousprice */\n      0x00\n        /* \"src/NFTmarket.sol\":2074:2083  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":2074:2093  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":2084:2092  _tokenID */\n      dup6\n        /* \"src/NFTmarket.sol\":2074:2093  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":2074:2099  IDinOrder[_tokenID].price */\n      0x02\n      add\n      sload\n        /* \"src/NFTmarket.sol\":2050:2099  uint256 previousprice = IDinOrder[_tokenID].price */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":2138:2144  _price */\n      dup3\n        /* \"src/NFTmarket.sol\":2110:2119  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":2110:2129  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":2120:2128  _tokenID */\n      dup7\n        /* \"src/NFTmarket.sol\":2110:2129  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":2110:2135  IDinOrder[_tokenID].price */\n      0x02\n      add\n        /* \"src/NFTmarket.sol\":2110:2144  IDinOrder[_tokenID].price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NFTmarket.sol\":2157:2176  Order storage order */\n      0x00\n        /* \"src/NFTmarket.sol\":2179:2185  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":2186:2195  IDofOrder */\n      0x04\n        /* \"src/NFTmarket.sol\":2186:2205  IDofOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":2196:2204  _tokenID */\n      dup8\n        /* \"src/NFTmarket.sol\":2186:2205  IDofOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/NFTmarket.sol\":2179:2206  orders[IDofOrder[_tokenID]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_80\n      jumpi\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n    tag_80:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"src/NFTmarket.sol\":2157:2206  Order storage order = orders[IDofOrder[_tokenID]] */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":2231:2237  _price */\n      dup4\n        /* \"src/NFTmarket.sol\":2217:2222  order */\n      dup2\n        /* \"src/NFTmarket.sol\":2217:2228  order.price */\n      0x02\n      add\n        /* \"src/NFTmarket.sol\":2217:2237  order.price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NFTmarket.sol\":2255:2308  PriceChanged(seller, _tokenID, previousprice, _price) */\n      0xdac6aecd066304d15a41e8e590fc5ab5bf93634f43cba363f743d5e158d79988\n        /* \"src/NFTmarket.sol\":2268:2274  seller */\n      dup4\n        /* \"src/NFTmarket.sol\":2276:2284  _tokenID */\n      dup7\n        /* \"src/NFTmarket.sol\":2286:2299  previousprice */\n      dup5\n        /* \"src/NFTmarket.sol\":2301:2307  _price */\n      dup8\n        /* \"src/NFTmarket.sol\":2255:2308  PriceChanged(seller, _tokenID, previousprice, _price) */\n      mload(0x40)\n      tag_84\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/NFTmarket.sol\":1929:2316  {... */\n      pop\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":1870:2316  function change(uint256 _tokenID, uint256 _price) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/NFTmarket.sol\":1553:1862  function cancel(uint256 _tokenID) external {... */\n    tag_29:\n        /* \"src/NFTmarket.sol\":1607:1621  address seller */\n      0x00\n        /* \"src/NFTmarket.sol\":1624:1633  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":1624:1643  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":1634:1642  _tokenID */\n      dup4\n        /* \"src/NFTmarket.sol\":1624:1643  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":1624:1650  IDinOrder[_tokenID].seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1607:1650  address seller = IDinOrder[_tokenID].seller */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":1683:1689  seller */\n      dup1\n        /* \"src/NFTmarket.sol\":1669:1689  msg.sender == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1669:1679  msg.sender */\n      caller\n        /* \"src/NFTmarket.sol\":1669:1689  msg.sender == seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/NFTmarket.sol\":1661:1704  require(msg.sender == seller, \"not seller\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_79\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"src/NFTmarket.sol\":1717:1723  erc721 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1717:1740  erc721.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"src/NFTmarket.sol\":1749:1753  this */\n      address\n        /* \"src/NFTmarket.sol\":1756:1762  seller */\n      dup4\n        /* \"src/NFTmarket.sol\":1764:1772  _tokenID */\n      dup6\n        /* \"src/NFTmarket.sol\":1717:1773  erc721.safeTransferFrom(address(this), seller, _tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":1786:1807  removeOrder(_tokenID) */\n      tag_94\n        /* \"src/NFTmarket.sol\":1798:1806  _tokenID */\n      dup3\n        /* \"src/NFTmarket.sol\":1786:1797  removeOrder */\n      tag_95\n        /* \"src/NFTmarket.sol\":1786:1807  removeOrder(_tokenID) */\n      jump\t// in\n    tag_94:\n        /* \"src/NFTmarket.sol\":1825:1854  CancelOrder(seller, _tokenID) */\n      0xc0e68d6b69f741c21e955cad2ae4d505b6f6735c7e7b278251b3f6283a5f07eb\n        /* \"src/NFTmarket.sol\":1837:1843  seller */\n      dup2\n        /* \"src/NFTmarket.sol\":1845:1853  _tokenID */\n      dup4\n        /* \"src/NFTmarket.sol\":1825:1854  CancelOrder(seller, _tokenID) */\n      mload(0x40)\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/NFTmarket.sol\":1596:1862  {... */\n      pop\n        /* \"src/NFTmarket.sol\":1553:1862  function cancel(uint256 _tokenID) external {... */\n      pop\n      jump\t// out\n        /* \"src/NFTmarket.sol\":4019:4405  function getMyNFTs() external view returns(Order[] memory){... */\n    tag_31:\n        /* \"src/NFTmarket.sol\":4062:4076  Order[] memory */\n      0x60\n        /* \"src/NFTmarket.sol\":4088:4111  Order[] memory myOrders */\n      0x00\n        /* \"src/NFTmarket.sol\":4126:4132  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":4126:4139  orders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":4114:4140  new Order[](orders.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n    tag_99:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup2\n      0x20\n      add\n    tag_103:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_103\n      jumpi\n      swap1\n      pop\n    tag_102:\n      pop\n        /* \"src/NFTmarket.sol\":4088:4140  Order[] memory myOrders = new Order[](orders.length) */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":4151:4164  uint256 count */\n      0x00\n        /* \"src/NFTmarket.sol\":4184:4193  uint256 i */\n      dup1\n        /* \"src/NFTmarket.sol\":4179:4372  for (uint256 i = 0; i < orders.length; i ++){... */\n    tag_106:\n        /* \"src/NFTmarket.sol\":4203:4209  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":4203:4216  orders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":4199:4200  i */\n      dup2\n        /* \"src/NFTmarket.sol\":4199:4216  i < orders.length */\n      lt\n        /* \"src/NFTmarket.sol\":4179:4372  for (uint256 i = 0; i < orders.length; i ++){... */\n      iszero\n      tag_107\n      jumpi\n        /* \"src/NFTmarket.sol\":4261:4271  msg.sender */\n      caller\n        /* \"src/NFTmarket.sol\":4241:4271  orders[i].seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":4241:4247  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":4248:4249  i */\n      dup3\n        /* \"src/NFTmarket.sol\":4241:4250  orders[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_110\n      tag_82\n      jump\t// in\n    tag_110:\n    tag_109:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"src/NFTmarket.sol\":4241:4257  orders[i].seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":4241:4271  orders[i].seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/NFTmarket.sol\":4238:4361  if(orders[i].seller == msg.sender){... */\n      tag_112\n      jumpi\n        /* \"src/NFTmarket.sol\":4309:4315  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":4316:4317  i */\n      dup2\n        /* \"src/NFTmarket.sol\":4309:4318  orders[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_82\n      jump\t// in\n    tag_114:\n    tag_113:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"src/NFTmarket.sol\":4291:4318  myOrders[count] = orders[i] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":4291:4299  myOrders */\n      dup4\n        /* \"src/NFTmarket.sol\":4300:4305  count */\n      dup4\n        /* \"src/NFTmarket.sol\":4291:4306  myOrders[count] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_82\n      jump\t// in\n    tag_117:\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/NFTmarket.sol\":4291:4318  myOrders[count] = orders[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"src/NFTmarket.sol\":4337:4345  count ++ */\n      dup2\n      dup1\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":4238:4361  if(orders[i].seller == msg.sender){... */\n    tag_112:\n        /* \"src/NFTmarket.sol\":4218:4222  i ++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":4179:4372  for (uint256 i = 0; i < orders.length; i ++){... */\n      jump(tag_106)\n    tag_107:\n      pop\n        /* \"src/NFTmarket.sol\":4389:4397  myOrders */\n      dup2\n        /* \"src/NFTmarket.sol\":4382:4397  return myOrders */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":4019:4405  function getMyNFTs() external view returns(Order[] memory){... */\n      swap1\n      jump\t// out\n        /* \"src/NFTmarket.sol\":205:224  IERC20 public erc20 */\n    tag_35:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/NFTmarket.sol\":3816:3911  function getOrderLength() external view returns(uint256){... */\n    tag_39:\n        /* \"src/NFTmarket.sol\":3864:3871  uint256 */\n      0x00\n        /* \"src/NFTmarket.sol\":3890:3896  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":3890:3903  orders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3883:3903  return orders.length */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3816:3911  function getOrderLength() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"src/NFTmarket.sol\":497:518  Order[] public orders */\n    tag_44:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"src/NFTmarket.sol\":3420:3808  function toUint256(bytes memory _bytes, uint256 _start) public pure returns (uint256) {... */\n    tag_50:\n        /* \"src/NFTmarket.sol\":3497:3504  uint256 */\n      0x00\n        /* \"src/NFTmarket.sol\":3540:3546  _start */\n      dup2\n        /* \"src/NFTmarket.sol\":3534:3536  32 */\n      0x20\n        /* \"src/NFTmarket.sol\":3525:3531  _start */\n      dup4\n        /* \"src/NFTmarket.sol\":3525:3536  _start + 32 */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"src/NFTmarket.sol\":3525:3546  _start + 32 >= _start */\n      lt\n      iszero\n        /* \"src/NFTmarket.sol\":3517:3576  require(_start + 32 >= _start, \"Market:toUint256_overflow\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"src/NFTmarket.sol\":3621:3623  32 */\n      0x20\n        /* \"src/NFTmarket.sol\":3612:3618  _start */\n      dup3\n        /* \"src/NFTmarket.sol\":3612:3623  _start + 32 */\n      tag_129\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_129:\n        /* \"src/NFTmarket.sol\":3595:3601  _bytes */\n      dup4\n        /* \"src/NFTmarket.sol\":3595:3608  _bytes.length */\n      mload\n        /* \"src/NFTmarket.sol\":3595:3623  _bytes.length >= _start + 32 */\n      lt\n      iszero\n        /* \"src/NFTmarket.sol\":3587:3649  require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"src/NFTmarket.sol\":3660:3676  uint256 tempUint */\n      0x00\n        /* \"src/NFTmarket.sol\":3754:3760  _start */\n      dup3\n        /* \"src/NFTmarket.sol\":3747:3751  0x20 */\n      0x20\n        /* \"src/NFTmarket.sol\":3739:3745  _bytes */\n      dup6\n        /* \"src/NFTmarket.sol\":3735:3752  add(_bytes, 0x20) */\n      add\n        /* \"src/NFTmarket.sol\":3731:3761  add(add(_bytes, 0x20), _start) */\n      add\n        /* \"src/NFTmarket.sol\":3725:3762  mload(add(add(_bytes, 0x20), _start)) */\n      mload\n        /* \"src/NFTmarket.sol\":3713:3762  tempUint := mload(add(add(_bytes, 0x20), _start)) */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3792:3800  tempUint */\n      dup1\n        /* \"src/NFTmarket.sol\":3785:3800  return tempUint */\n      swap2\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":3420:3808  function toUint256(bytes memory _bytes, uint256 _start) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/NFTmarket.sol\":231:252  IERC721 public erc721 */\n    tag_53:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/NFTmarket.sol\":1121:1545  function buy(uint256 _tokenID) external{... */\n    tag_58:\n        /* \"src/NFTmarket.sol\":1171:1185  address seller */\n      0x00\n        /* \"src/NFTmarket.sol\":1188:1197  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":1188:1207  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":1198:1206  _tokenID */\n      dup4\n        /* \"src/NFTmarket.sol\":1188:1207  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":1188:1214  IDinOrder[_tokenID].seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1171:1214  address seller = IDinOrder[_tokenID].seller */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":1225:1238  address buyer */\n      0x00\n        /* \"src/NFTmarket.sol\":1241:1251  msg.sender */\n      caller\n        /* \"src/NFTmarket.sol\":1225:1251  address buyer = msg.sender */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":1262:1275  uint256 price */\n      0x00\n        /* \"src/NFTmarket.sol\":1278:1287  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":1278:1297  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":1288:1296  _tokenID */\n      dup6\n        /* \"src/NFTmarket.sol\":1278:1297  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":1278:1303  IDinOrder[_tokenID].price */\n      0x02\n      add\n      sload\n        /* \"src/NFTmarket.sol\":1262:1303  uint256 price = IDinOrder[_tokenID].price */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":1324:1329  erc20 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1324:1342  erc20.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/NFTmarket.sol\":1343:1348  buyer */\n      dup4\n        /* \"src/NFTmarket.sol\":1350:1356  seller */\n      dup6\n        /* \"src/NFTmarket.sol\":1358:1363  price */\n      dup5\n        /* \"src/NFTmarket.sol\":1324:1364  erc20.transferFrom(buyer, seller, price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"src/NFTmarket.sol\":1316:1382  require(erc20.transferFrom(buyer, seller, price), \"transfer fail\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"src/NFTmarket.sol\":1393:1399  erc721 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":1393:1416  erc721.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"src/NFTmarket.sol\":1425:1429  this */\n      address\n        /* \"src/NFTmarket.sol\":1432:1437  buyer */\n      dup5\n        /* \"src/NFTmarket.sol\":1439:1447  _tokenID */\n      dup8\n        /* \"src/NFTmarket.sol\":1393:1448  erc721.safeTransferFrom(address(this), buyer, _tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_142:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":1461:1482  removeOrder(_tokenID) */\n      tag_146\n        /* \"src/NFTmarket.sol\":1473:1481  _tokenID */\n      dup5\n        /* \"src/NFTmarket.sol\":1461:1472  removeOrder */\n      tag_95\n        /* \"src/NFTmarket.sol\":1461:1482  removeOrder(_tokenID) */\n      jump\t// in\n    tag_146:\n        /* \"src/NFTmarket.sol\":1500:1537  Deal(seller, buyer , _tokenID, price) */\n      0x424d5e5f0192c7dacdbe646ca31b00299146d883d76a95ef5cddbac7cd342eab\n        /* \"src/NFTmarket.sol\":1505:1511  seller */\n      dup4\n        /* \"src/NFTmarket.sol\":1513:1518  buyer */\n      dup4\n        /* \"src/NFTmarket.sol\":1521:1529  _tokenID */\n      dup7\n        /* \"src/NFTmarket.sol\":1531:1536  price */\n      dup5\n        /* \"src/NFTmarket.sol\":1500:1537  Deal(seller, buyer , _tokenID, price) */\n      mload(0x40)\n      tag_147\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/NFTmarket.sol\":1160:1545  {... */\n      pop\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":1121:1545  function buy(uint256 _tokenID) external{... */\n      pop\n      jump\t// out\n        /* \"src/NFTmarket.sol\":3919:4011  function getAllNFTs() external view returns(Order[] memory) {... */\n    tag_60:\n        /* \"src/NFTmarket.sol\":3963:3977  Order[] memory */\n      0x60\n        /* \"src/NFTmarket.sol\":3997:4003  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":3990:4003  return orders */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_150:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_151\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_150)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3919:4011  function getAllNFTs() external view returns(Order[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/NFTmarket.sol\":2324:2452  function isListed(uint256 _tokenID) public view returns(bool) {... */\n    tag_64:\n        /* \"src/NFTmarket.sol\":2380:2384  bool */\n      0x00\n        /* \"src/NFTmarket.sol\":2442:2443  0 */\n      dup1\n        /* \"src/NFTmarket.sol\":2404:2444  IDinOrder[_tokenID].seller != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":2404:2413  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":2404:2423  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":2414:2422  _tokenID */\n      dup5\n        /* \"src/NFTmarket.sol\":2404:2423  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":2404:2430  IDinOrder[_tokenID].seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NFTmarket.sol\":2404:2444  IDinOrder[_tokenID].seller != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"src/NFTmarket.sol\":2397:2444  return IDinOrder[_tokenID].seller != address(0) */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":2324:2452  function isListed(uint256 _tokenID) public view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/NFTmarket.sol\":2958:3412  function removeOrder(uint256 _tokenID) internal  {... */\n    tag_95:\n        /* \"src/NFTmarket.sol\":3018:3031  uint256 index */\n      0x00\n        /* \"src/NFTmarket.sol\":3034:3043  IDofOrder */\n      0x04\n        /* \"src/NFTmarket.sol\":3034:3053  IDofOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":3044:3052  _tokenID */\n      dup4\n        /* \"src/NFTmarket.sol\":3034:3053  IDofOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/NFTmarket.sol\":3018:3053  uint256 index = IDofOrder[_tokenID] */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3064:3081  uint256 lastIndex */\n      0x00\n        /* \"src/NFTmarket.sol\":3100:3101  1 */\n      0x01\n        /* \"src/NFTmarket.sol\":3084:3090  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":3084:3097  orders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3084:3101  orders.length - 1 */\n      tag_155\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_155:\n        /* \"src/NFTmarket.sol\":3064:3101  uint256 lastIndex = orders.length - 1 */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3127:3136  lastIndex */\n      dup1\n        /* \"src/NFTmarket.sol\":3118:3123  index */\n      dup3\n        /* \"src/NFTmarket.sol\":3118:3136  index != lastIndex */\n      eq\n        /* \"src/NFTmarket.sol\":3114:3300  if (index != lastIndex){... */\n      tag_156\n      jumpi\n        /* \"src/NFTmarket.sol\":3152:3175  Order storage lastOrder */\n      0x00\n        /* \"src/NFTmarket.sol\":3178:3184  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":3185:3194  lastIndex */\n      dup3\n        /* \"src/NFTmarket.sol\":3178:3195  orders[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_158\n      tag_82\n      jump\t// in\n    tag_158:\n    tag_157:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"src/NFTmarket.sol\":3152:3195  Order storage lastOrder = orders[lastIndex] */\n      swap1\n      pop\n        /* \"src/NFTmarket.sol\":3227:3236  lastOrder */\n      dup1\n        /* \"src/NFTmarket.sol\":3210:3216  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":3217:3222  index */\n      dup5\n        /* \"src/NFTmarket.sol\":3210:3223  orders[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_82\n      jump\t// in\n    tag_161:\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"src/NFTmarket.sol\":3210:3236  orders[index] =  lastOrder */\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      0x01\n      add\n      sstore\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":3282:3287  index */\n      dup3\n        /* \"src/NFTmarket.sol\":3251:3260  IDofOrder */\n      0x04\n        /* \"src/NFTmarket.sol\":3251:3279  IDofOrder[lastOrder.tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":3261:3270  lastOrder */\n      dup4\n        /* \"src/NFTmarket.sol\":3261:3278  lastOrder.tokenID */\n      0x01\n      add\n      sload\n        /* \"src/NFTmarket.sol\":3251:3279  IDofOrder[lastOrder.tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":3251:3287  IDofOrder[lastOrder.tokenID] = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NFTmarket.sol\":3137:3300  {... */\n      pop\n        /* \"src/NFTmarket.sol\":3114:3300  if (index != lastIndex){... */\n    tag_156:\n        /* \"src/NFTmarket.sol\":3321:3327  orders */\n      0x03\n        /* \"src/NFTmarket.sol\":3321:3333  orders.pop() */\n      dup1\n      sload\n      dup1\n      tag_163\n      jumpi\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n    tag_163:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n      swap1\n      sstore\n        /* \"src/NFTmarket.sol\":3351:3360  IDinOrder */\n      0x02\n        /* \"src/NFTmarket.sol\":3351:3370  IDinOrder[_tokenID] */\n      0x00\n        /* \"src/NFTmarket.sol\":3361:3369  _tokenID */\n      dup5\n        /* \"src/NFTmarket.sol\":3351:3370  IDinOrder[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/NFTmarket.sol\":3344:3370  delete IDinOrder[_tokenID] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":3388:3397  IDofOrder */\n      0x04\n        /* \"src/NFTmarket.sol\":3388:3404  IDofOrder[index] */\n      0x00\n        /* \"src/NFTmarket.sol\":3398:3403  index */\n      dup4\n        /* \"src/NFTmarket.sol\":3388:3404  IDofOrder[index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/NFTmarket.sol\":3381:3404  delete IDofOrder[index] */\n      0x00\n      swap1\n      sstore\n        /* \"src/NFTmarket.sol\":3007:3412  {... */\n      pop\n      pop\n        /* \"src/NFTmarket.sol\":2958:3412  function removeOrder(uint256 _tokenID) internal  {... */\n      pop\n      jump\t// out\n    tag_105:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_167:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_168:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_169:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_170:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_171:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_231\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_170\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_172:\n        /* \"#utility.yul\":641:665   */\n      tag_233\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_171\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_234:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_173:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_236\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_172\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_174:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_175:\n        /* \"#utility.yul\":997:1021   */\n      tag_239\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_174\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_240:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_176:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_242\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_175\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_177:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_178:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_179:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_180:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_248\n      tag_177\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1663:1785   */\n    tag_247:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_250\n      tag_178\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1833:1950   */\n    tag_249:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_252\n      tag_179\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1997:2125   */\n    tag_251:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3100   */\n    tag_18:\n        /* \"#utility.yul\":2234:2240   */\n      0x00\n        /* \"#utility.yul\":2242:2248   */\n      dup1\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2315:2318   */\n      0x80\n        /* \"#utility.yul\":2303:2312   */\n      dup7\n        /* \"#utility.yul\":2294:2301   */\n      dup9\n        /* \"#utility.yul\":2290:2313   */\n      sub\n        /* \"#utility.yul\":2286:2319   */\n      slt\n        /* \"#utility.yul\":2283:2403   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_255\n      tag_168\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2283:2403   */\n    tag_254:\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2467:2520   */\n      tag_256\n        /* \"#utility.yul\":2512:2519   */\n      dup9\n        /* \"#utility.yul\":2503:2509   */\n      dup3\n        /* \"#utility.yul\":2492:2501   */\n      dup10\n        /* \"#utility.yul\":2488:2510   */\n      add\n        /* \"#utility.yul\":2467:2520   */\n      tag_173\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2457:2520   */\n      swap6\n      pop\n        /* \"#utility.yul\":2413:2530   */\n      pop\n        /* \"#utility.yul\":2569:2571   */\n      0x20\n        /* \"#utility.yul\":2595:2648   */\n      tag_257\n        /* \"#utility.yul\":2640:2647   */\n      dup9\n        /* \"#utility.yul\":2631:2637   */\n      dup3\n        /* \"#utility.yul\":2620:2629   */\n      dup10\n        /* \"#utility.yul\":2616:2638   */\n      add\n        /* \"#utility.yul\":2595:2648   */\n      tag_173\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2585:2648   */\n      swap5\n      pop\n        /* \"#utility.yul\":2540:2658   */\n      pop\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2723:2776   */\n      tag_258\n        /* \"#utility.yul\":2768:2775   */\n      dup9\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2748:2757   */\n      dup10\n        /* \"#utility.yul\":2744:2766   */\n      add\n        /* \"#utility.yul\":2723:2776   */\n      tag_176\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2713:2776   */\n      swap4\n      pop\n        /* \"#utility.yul\":2668:2786   */\n      pop\n        /* \"#utility.yul\":2853:2855   */\n      0x60\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2856   */\n      add\n        /* \"#utility.yul\":2825:2857   */\n      calldataload\n        /* \"#utility.yul\":2884:2902   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2876:2882   */\n      dup2\n        /* \"#utility.yul\":2873:2903   */\n      gt\n        /* \"#utility.yul\":2870:2987   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2906:2985   */\n      tag_260\n      tag_169\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2870:2987   */\n    tag_259:\n        /* \"#utility.yul\":3019:3083   */\n      tag_261\n        /* \"#utility.yul\":3075:3082   */\n      dup9\n        /* \"#utility.yul\":3066:3072   */\n      dup3\n        /* \"#utility.yul\":3055:3064   */\n      dup10\n        /* \"#utility.yul\":3051:3073   */\n      add\n        /* \"#utility.yul\":3019:3083   */\n      tag_180\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3001:3083   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2796:3093   */\n      pop\n        /* \"#utility.yul\":2137:3100   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3255   */\n    tag_181:\n        /* \"#utility.yul\":3142:3149   */\n      0x00\n        /* \"#utility.yul\":3182:3248   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3175:3180   */\n      dup3\n        /* \"#utility.yul\":3171:3249   */\n      and\n        /* \"#utility.yul\":3160:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3376   */\n    tag_182:\n        /* \"#utility.yul\":3346:3369   */\n      tag_264\n        /* \"#utility.yul\":3363:3368   */\n      dup2\n        /* \"#utility.yul\":3346:3369   */\n      tag_181\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3341:3344   */\n      dup3\n        /* \"#utility.yul\":3334:3370   */\n      mstore\n        /* \"#utility.yul\":3261:3376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3382:3600   */\n    tag_21:\n        /* \"#utility.yul\":3473:3477   */\n      0x00\n        /* \"#utility.yul\":3511:3513   */\n      0x20\n        /* \"#utility.yul\":3500:3509   */\n      dup3\n        /* \"#utility.yul\":3496:3514   */\n      add\n        /* \"#utility.yul\":3488:3514   */\n      swap1\n      pop\n        /* \"#utility.yul\":3524:3593   */\n      tag_266\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3579:3588   */\n      dup4\n        /* \"#utility.yul\":3575:3592   */\n      add\n        /* \"#utility.yul\":3566:3572   */\n      dup5\n        /* \"#utility.yul\":3524:3593   */\n      tag_182\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3382:3600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3606:4080   */\n    tag_24:\n        /* \"#utility.yul\":3674:3680   */\n      0x00\n        /* \"#utility.yul\":3682:3688   */\n      dup1\n        /* \"#utility.yul\":3731:3733   */\n      0x40\n        /* \"#utility.yul\":3719:3728   */\n      dup4\n        /* \"#utility.yul\":3710:3717   */\n      dup6\n        /* \"#utility.yul\":3706:3729   */\n      sub\n        /* \"#utility.yul\":3702:3734   */\n      slt\n        /* \"#utility.yul\":3699:3818   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3737:3816   */\n      tag_269\n      tag_168\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3699:3818   */\n    tag_268:\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3882:3935   */\n      tag_270\n        /* \"#utility.yul\":3927:3934   */\n      dup6\n        /* \"#utility.yul\":3918:3924   */\n      dup3\n        /* \"#utility.yul\":3907:3916   */\n      dup7\n        /* \"#utility.yul\":3903:3925   */\n      add\n        /* \"#utility.yul\":3882:3935   */\n      tag_176\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3872:3935   */\n      swap3\n      pop\n        /* \"#utility.yul\":3828:3945   */\n      pop\n        /* \"#utility.yul\":3984:3986   */\n      0x20\n        /* \"#utility.yul\":4010:4063   */\n      tag_271\n        /* \"#utility.yul\":4055:4062   */\n      dup6\n        /* \"#utility.yul\":4046:4052   */\n      dup3\n        /* \"#utility.yul\":4035:4044   */\n      dup7\n        /* \"#utility.yul\":4031:4053   */\n      add\n        /* \"#utility.yul\":4010:4063   */\n      tag_176\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4000:4063   */\n      swap2\n      pop\n        /* \"#utility.yul\":3955:4073   */\n      pop\n        /* \"#utility.yul\":3606:4080   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4086:4415   */\n    tag_28:\n        /* \"#utility.yul\":4145:4151   */\n      0x00\n        /* \"#utility.yul\":4194:4196   */\n      0x20\n        /* \"#utility.yul\":4182:4191   */\n      dup3\n        /* \"#utility.yul\":4173:4180   */\n      dup5\n        /* \"#utility.yul\":4169:4192   */\n      sub\n        /* \"#utility.yul\":4165:4197   */\n      slt\n        /* \"#utility.yul\":4162:4281   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4200:4279   */\n      tag_274\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4162:4281   */\n    tag_273:\n        /* \"#utility.yul\":4320:4321   */\n      0x00\n        /* \"#utility.yul\":4345:4398   */\n      tag_275\n        /* \"#utility.yul\":4390:4397   */\n      dup5\n        /* \"#utility.yul\":4381:4387   */\n      dup3\n        /* \"#utility.yul\":4370:4379   */\n      dup6\n        /* \"#utility.yul\":4366:4388   */\n      add\n        /* \"#utility.yul\":4345:4398   */\n      tag_176\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4335:4398   */\n      swap2\n      pop\n        /* \"#utility.yul\":4291:4408   */\n      pop\n        /* \"#utility.yul\":4086:4415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4421:4558   */\n    tag_183:\n        /* \"#utility.yul\":4511:4517   */\n      0x00\n        /* \"#utility.yul\":4545:4550   */\n      dup2\n        /* \"#utility.yul\":4539:4551   */\n      mload\n        /* \"#utility.yul\":4529:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4421:4558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4564:4771   */\n    tag_184:\n        /* \"#utility.yul\":4686:4697   */\n      0x00\n        /* \"#utility.yul\":4720:4726   */\n      dup3\n        /* \"#utility.yul\":4715:4718   */\n      dup3\n        /* \"#utility.yul\":4708:4727   */\n      mstore\n        /* \"#utility.yul\":4760:4764   */\n      0x20\n        /* \"#utility.yul\":4755:4758   */\n      dup3\n        /* \"#utility.yul\":4751:4765   */\n      add\n        /* \"#utility.yul\":4736:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4564:4771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4777:4932   */\n    tag_185:\n        /* \"#utility.yul\":4867:4871   */\n      0x00\n        /* \"#utility.yul\":4890:4893   */\n      dup2\n        /* \"#utility.yul\":4882:4893   */\n      swap1\n      pop\n        /* \"#utility.yul\":4920:4924   */\n      0x20\n        /* \"#utility.yul\":4915:4918   */\n      dup3\n        /* \"#utility.yul\":4911:4925   */\n      add\n        /* \"#utility.yul\":4903:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4777:4932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5046   */\n    tag_186:\n        /* \"#utility.yul\":5015:5039   */\n      tag_280\n        /* \"#utility.yul\":5033:5038   */\n      dup2\n        /* \"#utility.yul\":5015:5039   */\n      tag_171\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5010:5013   */\n      dup3\n        /* \"#utility.yul\":5003:5040   */\n      mstore\n        /* \"#utility.yul\":4938:5046   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5052:5160   */\n    tag_187:\n        /* \"#utility.yul\":5129:5153   */\n      tag_282\n        /* \"#utility.yul\":5147:5152   */\n      dup2\n        /* \"#utility.yul\":5129:5153   */\n      tag_174\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5124:5127   */\n      dup3\n        /* \"#utility.yul\":5117:5154   */\n      mstore\n        /* \"#utility.yul\":5052:5160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5895   */\n    tag_188:\n        /* \"#utility.yul\":5355:5359   */\n      0x60\n        /* \"#utility.yul\":5350:5353   */\n      dup3\n        /* \"#utility.yul\":5346:5360   */\n      add\n        /* \"#utility.yul\":5444:5448   */\n      0x00\n        /* \"#utility.yul\":5437:5442   */\n      dup3\n        /* \"#utility.yul\":5433:5449   */\n      add\n        /* \"#utility.yul\":5427:5450   */\n      mload\n        /* \"#utility.yul\":5463:5526   */\n      tag_284\n        /* \"#utility.yul\":5520:5524   */\n      0x00\n        /* \"#utility.yul\":5515:5518   */\n      dup6\n        /* \"#utility.yul\":5511:5525   */\n      add\n        /* \"#utility.yul\":5497:5509   */\n      dup3\n        /* \"#utility.yul\":5463:5526   */\n      tag_186\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5370:5536   */\n      pop\n        /* \"#utility.yul\":5621:5625   */\n      0x20\n        /* \"#utility.yul\":5614:5619   */\n      dup3\n        /* \"#utility.yul\":5610:5626   */\n      add\n        /* \"#utility.yul\":5604:5627   */\n      mload\n        /* \"#utility.yul\":5640:5703   */\n      tag_285\n        /* \"#utility.yul\":5697:5701   */\n      0x20\n        /* \"#utility.yul\":5692:5695   */\n      dup6\n        /* \"#utility.yul\":5688:5702   */\n      add\n        /* \"#utility.yul\":5674:5686   */\n      dup3\n        /* \"#utility.yul\":5640:5703   */\n      tag_187\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5546:5713   */\n      pop\n        /* \"#utility.yul\":5796:5800   */\n      0x40\n        /* \"#utility.yul\":5789:5794   */\n      dup3\n        /* \"#utility.yul\":5785:5801   */\n      add\n        /* \"#utility.yul\":5779:5802   */\n      mload\n        /* \"#utility.yul\":5815:5878   */\n      tag_286\n        /* \"#utility.yul\":5872:5876   */\n      0x40\n        /* \"#utility.yul\":5867:5870   */\n      dup6\n        /* \"#utility.yul\":5863:5877   */\n      add\n        /* \"#utility.yul\":5849:5861   */\n      dup3\n        /* \"#utility.yul\":5815:5878   */\n      tag_187\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5723:5888   */\n      pop\n        /* \"#utility.yul\":5324:5895   */\n      pop\n        /* \"#utility.yul\":5222:5895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5901:6172   */\n    tag_189:\n        /* \"#utility.yul\":6016:6026   */\n      0x00\n        /* \"#utility.yul\":6037:6129   */\n      tag_288\n        /* \"#utility.yul\":6125:6128   */\n      dup4\n        /* \"#utility.yul\":6117:6123   */\n      dup4\n        /* \"#utility.yul\":6037:6129   */\n      tag_188\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6161:6165   */\n      0x60\n        /* \"#utility.yul\":6156:6159   */\n      dup4\n        /* \"#utility.yul\":6152:6166   */\n      add\n        /* \"#utility.yul\":6138:6166   */\n      swap1\n      pop\n        /* \"#utility.yul\":5901:6172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6178:6314   */\n    tag_190:\n        /* \"#utility.yul\":6271:6275   */\n      0x00\n        /* \"#utility.yul\":6303:6307   */\n      0x20\n        /* \"#utility.yul\":6298:6301   */\n      dup3\n        /* \"#utility.yul\":6294:6308   */\n      add\n        /* \"#utility.yul\":6286:6308   */\n      swap1\n      pop\n        /* \"#utility.yul\":6178:6314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6380:7296   */\n    tag_191:\n        /* \"#utility.yul\":6545:6548   */\n      0x00\n        /* \"#utility.yul\":6574:6651   */\n      tag_291\n        /* \"#utility.yul\":6645:6650   */\n      dup3\n        /* \"#utility.yul\":6574:6651   */\n      tag_183\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6667:6776   */\n      tag_292\n        /* \"#utility.yul\":6769:6775   */\n      dup2\n        /* \"#utility.yul\":6764:6767   */\n      dup6\n        /* \"#utility.yul\":6667:6776   */\n      tag_184\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6660:6776   */\n      swap4\n      pop\n        /* \"#utility.yul\":6800:6879   */\n      tag_293\n        /* \"#utility.yul\":6873:6878   */\n      dup4\n        /* \"#utility.yul\":6800:6879   */\n      tag_185\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6902:6909   */\n      dup1\n        /* \"#utility.yul\":6933:6934   */\n      0x00\n        /* \"#utility.yul\":6918:7271   */\n    tag_294:\n        /* \"#utility.yul\":6943:6949   */\n      dup4\n        /* \"#utility.yul\":6940:6941   */\n      dup2\n        /* \"#utility.yul\":6937:6950   */\n      lt\n        /* \"#utility.yul\":6918:7271   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":7019:7025   */\n      dup2\n        /* \"#utility.yul\":7013:7026   */\n      mload\n        /* \"#utility.yul\":7046:7155   */\n      tag_297\n        /* \"#utility.yul\":7151:7154   */\n      dup9\n        /* \"#utility.yul\":7136:7149   */\n      dup3\n        /* \"#utility.yul\":7046:7155   */\n      tag_189\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7039:7155   */\n      swap8\n      pop\n        /* \"#utility.yul\":7178:7261   */\n      tag_298\n        /* \"#utility.yul\":7254:7260   */\n      dup4\n        /* \"#utility.yul\":7178:7261   */\n      tag_190\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7168:7261   */\n      swap3\n      pop\n        /* \"#utility.yul\":6978:7271   */\n      pop\n        /* \"#utility.yul\":6965:6966   */\n      0x01\n        /* \"#utility.yul\":6962:6963   */\n      dup2\n        /* \"#utility.yul\":6958:6967   */\n      add\n        /* \"#utility.yul\":6953:6967   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:7271   */\n      jump(tag_294)\n    tag_296:\n        /* \"#utility.yul\":6922:6936   */\n      pop\n        /* \"#utility.yul\":7287:7290   */\n      dup6\n        /* \"#utility.yul\":7280:7290   */\n      swap4\n      pop\n        /* \"#utility.yul\":6550:7296   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6380:7296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7302:7767   */\n    tag_33:\n        /* \"#utility.yul\":7491:7495   */\n      0x00\n        /* \"#utility.yul\":7529:7531   */\n      0x20\n        /* \"#utility.yul\":7518:7527   */\n      dup3\n        /* \"#utility.yul\":7514:7532   */\n      add\n        /* \"#utility.yul\":7506:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7578:7587   */\n      dup2\n        /* \"#utility.yul\":7572:7576   */\n      dup2\n        /* \"#utility.yul\":7568:7588   */\n      sub\n        /* \"#utility.yul\":7564:7565   */\n      0x00\n        /* \"#utility.yul\":7553:7562   */\n      dup4\n        /* \"#utility.yul\":7549:7566   */\n      add\n        /* \"#utility.yul\":7542:7589   */\n      mstore\n        /* \"#utility.yul\":7606:7760   */\n      tag_300\n        /* \"#utility.yul\":7755:7759   */\n      dup2\n        /* \"#utility.yul\":7746:7752   */\n      dup5\n        /* \"#utility.yul\":7606:7760   */\n      tag_191\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7598:7760   */\n      swap1\n      pop\n        /* \"#utility.yul\":7302:7767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7773:7833   */\n    tag_192:\n        /* \"#utility.yul\":7801:7804   */\n      0x00\n        /* \"#utility.yul\":7822:7827   */\n      dup2\n        /* \"#utility.yul\":7815:7827   */\n      swap1\n      pop\n        /* \"#utility.yul\":7773:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:7981   */\n    tag_193:\n        /* \"#utility.yul\":7889:7898   */\n      0x00\n        /* \"#utility.yul\":7922:7975   */\n      tag_303\n        /* \"#utility.yul\":7940:7974   */\n      tag_304\n        /* \"#utility.yul\":7949:7973   */\n      tag_305\n        /* \"#utility.yul\":7967:7972   */\n      dup5\n        /* \"#utility.yul\":7949:7973   */\n      tag_170\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7940:7974   */\n      tag_192\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7922:7975   */\n      tag_170\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7909:7975   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:7981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7987:8113   */\n    tag_194:\n        /* \"#utility.yul\":8037:8046   */\n      0x00\n        /* \"#utility.yul\":8070:8107   */\n      tag_307\n        /* \"#utility.yul\":8101:8106   */\n      dup3\n        /* \"#utility.yul\":8070:8107   */\n      tag_193\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8057:8107   */\n      swap1\n      pop\n        /* \"#utility.yul\":7987:8113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8259   */\n    tag_195:\n        /* \"#utility.yul\":8183:8192   */\n      0x00\n        /* \"#utility.yul\":8216:8253   */\n      tag_309\n        /* \"#utility.yul\":8247:8252   */\n      dup3\n        /* \"#utility.yul\":8216:8253   */\n      tag_194\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8203:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8119:8259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8265:8424   */\n    tag_196:\n        /* \"#utility.yul\":8366:8417   */\n      tag_311\n        /* \"#utility.yul\":8411:8416   */\n      dup2\n        /* \"#utility.yul\":8366:8417   */\n      tag_195\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8361:8364   */\n      dup3\n        /* \"#utility.yul\":8354:8418   */\n      mstore\n        /* \"#utility.yul\":8265:8424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8430:8680   */\n    tag_37:\n        /* \"#utility.yul\":8537:8541   */\n      0x00\n        /* \"#utility.yul\":8575:8577   */\n      0x20\n        /* \"#utility.yul\":8564:8573   */\n      dup3\n        /* \"#utility.yul\":8560:8578   */\n      add\n        /* \"#utility.yul\":8552:8578   */\n      swap1\n      pop\n        /* \"#utility.yul\":8588:8673   */\n      tag_313\n        /* \"#utility.yul\":8670:8671   */\n      0x00\n        /* \"#utility.yul\":8659:8668   */\n      dup4\n        /* \"#utility.yul\":8655:8672   */\n      add\n        /* \"#utility.yul\":8646:8652   */\n      dup5\n        /* \"#utility.yul\":8588:8673   */\n      tag_196\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8430:8680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8686:8804   */\n    tag_197:\n        /* \"#utility.yul\":8773:8797   */\n      tag_315\n        /* \"#utility.yul\":8791:8796   */\n      dup2\n        /* \"#utility.yul\":8773:8797   */\n      tag_174\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8768:8771   */\n      dup3\n        /* \"#utility.yul\":8761:8798   */\n      mstore\n        /* \"#utility.yul\":8686:8804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8810:9032   */\n    tag_41:\n        /* \"#utility.yul\":8903:8907   */\n      0x00\n        /* \"#utility.yul\":8941:8943   */\n      0x20\n        /* \"#utility.yul\":8930:8939   */\n      dup3\n        /* \"#utility.yul\":8926:8944   */\n      add\n        /* \"#utility.yul\":8918:8944   */\n      swap1\n      pop\n        /* \"#utility.yul\":8954:9025   */\n      tag_317\n        /* \"#utility.yul\":9022:9023   */\n      0x00\n        /* \"#utility.yul\":9011:9020   */\n      dup4\n        /* \"#utility.yul\":9007:9024   */\n      add\n        /* \"#utility.yul\":8998:9004   */\n      dup5\n        /* \"#utility.yul\":8954:9025   */\n      tag_197\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8810:9032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9038:9156   */\n    tag_198:\n        /* \"#utility.yul\":9125:9149   */\n      tag_319\n        /* \"#utility.yul\":9143:9148   */\n      dup2\n        /* \"#utility.yul\":9125:9149   */\n      tag_171\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9120:9123   */\n      dup3\n        /* \"#utility.yul\":9113:9150   */\n      mstore\n        /* \"#utility.yul\":9038:9156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9162:9604   */\n    tag_46:\n        /* \"#utility.yul\":9311:9315   */\n      0x00\n        /* \"#utility.yul\":9349:9351   */\n      0x60\n        /* \"#utility.yul\":9338:9347   */\n      dup3\n        /* \"#utility.yul\":9334:9352   */\n      add\n        /* \"#utility.yul\":9326:9352   */\n      swap1\n      pop\n        /* \"#utility.yul\":9362:9433   */\n      tag_321\n        /* \"#utility.yul\":9430:9431   */\n      0x00\n        /* \"#utility.yul\":9419:9428   */\n      dup4\n        /* \"#utility.yul\":9415:9432   */\n      add\n        /* \"#utility.yul\":9406:9412   */\n      dup7\n        /* \"#utility.yul\":9362:9433   */\n      tag_198\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9443:9515   */\n      tag_322\n        /* \"#utility.yul\":9511:9513   */\n      0x20\n        /* \"#utility.yul\":9500:9509   */\n      dup4\n        /* \"#utility.yul\":9496:9514   */\n      add\n        /* \"#utility.yul\":9487:9493   */\n      dup6\n        /* \"#utility.yul\":9443:9515   */\n      tag_197\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9525:9597   */\n      tag_323\n        /* \"#utility.yul\":9593:9595   */\n      0x40\n        /* \"#utility.yul\":9582:9591   */\n      dup4\n        /* \"#utility.yul\":9578:9596   */\n      add\n        /* \"#utility.yul\":9569:9575   */\n      dup5\n        /* \"#utility.yul\":9525:9597   */\n      tag_197\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9162:9604   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9610:9727   */\n    tag_199:\n        /* \"#utility.yul\":9719:9720   */\n      0x00\n        /* \"#utility.yul\":9716:9717   */\n      dup1\n        /* \"#utility.yul\":9709:9721   */\n      revert\n        /* \"#utility.yul\":9733:9835   */\n    tag_200:\n        /* \"#utility.yul\":9774:9780   */\n      0x00\n        /* \"#utility.yul\":9825:9827   */\n      0x1f\n        /* \"#utility.yul\":9821:9828   */\n      not\n        /* \"#utility.yul\":9816:9818   */\n      0x1f\n        /* \"#utility.yul\":9809:9814   */\n      dup4\n        /* \"#utility.yul\":9805:9819   */\n      add\n        /* \"#utility.yul\":9801:9829   */\n      and\n        /* \"#utility.yul\":9791:9829   */\n      swap1\n      pop\n        /* \"#utility.yul\":9733:9835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9841:10021   */\n    tag_101:\n        /* \"#utility.yul\":9889:9966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9886:9887   */\n      0x00\n        /* \"#utility.yul\":9879:9967   */\n      mstore\n        /* \"#utility.yul\":9986:9990   */\n      0x41\n        /* \"#utility.yul\":9983:9984   */\n      0x04\n        /* \"#utility.yul\":9976:9991   */\n      mstore\n        /* \"#utility.yul\":10010:10014   */\n      0x24\n        /* \"#utility.yul\":10007:10008   */\n      0x00\n        /* \"#utility.yul\":10000:10015   */\n      revert\n        /* \"#utility.yul\":10027:10308   */\n    tag_201:\n        /* \"#utility.yul\":10110:10137   */\n      tag_328\n        /* \"#utility.yul\":10132:10136   */\n      dup3\n        /* \"#utility.yul\":10110:10137   */\n      tag_200\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10102:10108   */\n      dup2\n        /* \"#utility.yul\":10098:10138   */\n      add\n        /* \"#utility.yul\":10240:10246   */\n      dup2\n        /* \"#utility.yul\":10228:10238   */\n      dup2\n        /* \"#utility.yul\":10225:10247   */\n      lt\n        /* \"#utility.yul\":10204:10222   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10192:10202   */\n      dup3\n        /* \"#utility.yul\":10189:10223   */\n      gt\n        /* \"#utility.yul\":10186:10248   */\n      or\n        /* \"#utility.yul\":10183:10271   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10251:10269   */\n      tag_330\n      tag_101\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10183:10271   */\n    tag_329:\n        /* \"#utility.yul\":10291:10301   */\n      dup1\n        /* \"#utility.yul\":10287:10289   */\n      0x40\n        /* \"#utility.yul\":10280:10302   */\n      mstore\n        /* \"#utility.yul\":10070:10308   */\n      pop\n        /* \"#utility.yul\":10027:10308   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10314:10443   */\n    tag_202:\n        /* \"#utility.yul\":10348:10354   */\n      0x00\n        /* \"#utility.yul\":10375:10395   */\n      tag_332\n      tag_167\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10365:10395   */\n      swap1\n      pop\n        /* \"#utility.yul\":10404:10437   */\n      tag_333\n        /* \"#utility.yul\":10432:10436   */\n      dup3\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10404:10437   */\n      tag_201\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10314:10443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10449:10756   */\n    tag_203:\n        /* \"#utility.yul\":10510:10514   */\n      0x00\n        /* \"#utility.yul\":10600:10618   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10592:10598   */\n      dup3\n        /* \"#utility.yul\":10589:10619   */\n      gt\n        /* \"#utility.yul\":10586:10642   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":10622:10640   */\n      tag_336\n      tag_101\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10586:10642   */\n    tag_335:\n        /* \"#utility.yul\":10660:10689   */\n      tag_337\n        /* \"#utility.yul\":10682:10688   */\n      dup3\n        /* \"#utility.yul\":10660:10689   */\n      tag_200\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10652:10689   */\n      swap1\n      pop\n        /* \"#utility.yul\":10744:10748   */\n      0x20\n        /* \"#utility.yul\":10738:10742   */\n      dup2\n        /* \"#utility.yul\":10734:10749   */\n      add\n        /* \"#utility.yul\":10726:10749   */\n      swap1\n      pop\n        /* \"#utility.yul\":10449:10756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10762:10910   */\n    tag_204:\n        /* \"#utility.yul\":10860:10866   */\n      dup3\n        /* \"#utility.yul\":10855:10858   */\n      dup2\n        /* \"#utility.yul\":10850:10853   */\n      dup4\n        /* \"#utility.yul\":10837:10867   */\n      calldatacopy\n        /* \"#utility.yul\":10901:10902   */\n      0x00\n        /* \"#utility.yul\":10892:10898   */\n      dup4\n        /* \"#utility.yul\":10887:10890   */\n      dup4\n        /* \"#utility.yul\":10883:10899   */\n      add\n        /* \"#utility.yul\":10876:10903   */\n      mstore\n        /* \"#utility.yul\":10762:10910   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10916:11339   */\n    tag_205:\n        /* \"#utility.yul\":10993:10998   */\n      0x00\n        /* \"#utility.yul\":11018:11083   */\n      tag_340\n        /* \"#utility.yul\":11034:11082   */\n      tag_341\n        /* \"#utility.yul\":11075:11081   */\n      dup5\n        /* \"#utility.yul\":11034:11082   */\n      tag_203\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11018:11083   */\n      tag_202\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11009:11083   */\n      swap1\n      pop\n        /* \"#utility.yul\":11106:11112   */\n      dup3\n        /* \"#utility.yul\":11099:11104   */\n      dup2\n        /* \"#utility.yul\":11092:11113   */\n      mstore\n        /* \"#utility.yul\":11144:11148   */\n      0x20\n        /* \"#utility.yul\":11137:11142   */\n      dup2\n        /* \"#utility.yul\":11133:11149   */\n      add\n        /* \"#utility.yul\":11182:11185   */\n      dup5\n        /* \"#utility.yul\":11173:11179   */\n      dup5\n        /* \"#utility.yul\":11168:11171   */\n      dup5\n        /* \"#utility.yul\":11164:11180   */\n      add\n        /* \"#utility.yul\":11161:11186   */\n      gt\n        /* \"#utility.yul\":11158:11270   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":11189:11268   */\n      tag_343\n      tag_199\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11158:11270   */\n    tag_342:\n        /* \"#utility.yul\":11279:11333   */\n      tag_344\n        /* \"#utility.yul\":11326:11332   */\n      dup5\n        /* \"#utility.yul\":11321:11324   */\n      dup3\n        /* \"#utility.yul\":11316:11319   */\n      dup6\n        /* \"#utility.yul\":11279:11333   */\n      tag_204\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10999:11339   */\n      pop\n        /* \"#utility.yul\":10916:11339   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11358:11696   */\n    tag_206:\n        /* \"#utility.yul\":11413:11418   */\n      0x00\n        /* \"#utility.yul\":11462:11465   */\n      dup3\n        /* \"#utility.yul\":11455:11459   */\n      0x1f\n        /* \"#utility.yul\":11447:11453   */\n      dup4\n        /* \"#utility.yul\":11443:11460   */\n      add\n        /* \"#utility.yul\":11439:11466   */\n      slt\n        /* \"#utility.yul\":11429:11551   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":11470:11549   */\n      tag_347\n      tag_177\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11429:11551   */\n    tag_346:\n        /* \"#utility.yul\":11587:11593   */\n      dup2\n        /* \"#utility.yul\":11574:11594   */\n      calldataload\n        /* \"#utility.yul\":11612:11690   */\n      tag_348\n        /* \"#utility.yul\":11686:11689   */\n      dup5\n        /* \"#utility.yul\":11678:11684   */\n      dup3\n        /* \"#utility.yul\":11671:11675   */\n      0x20\n        /* \"#utility.yul\":11663:11669   */\n      dup7\n        /* \"#utility.yul\":11659:11676   */\n      add\n        /* \"#utility.yul\":11612:11690   */\n      tag_205\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11603:11690   */\n      swap2\n      pop\n        /* \"#utility.yul\":11419:11696   */\n      pop\n        /* \"#utility.yul\":11358:11696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11702:12354   */\n    tag_49:\n        /* \"#utility.yul\":11779:11785   */\n      0x00\n        /* \"#utility.yul\":11787:11793   */\n      dup1\n        /* \"#utility.yul\":11836:11838   */\n      0x40\n        /* \"#utility.yul\":11824:11833   */\n      dup4\n        /* \"#utility.yul\":11815:11822   */\n      dup6\n        /* \"#utility.yul\":11811:11834   */\n      sub\n        /* \"#utility.yul\":11807:11839   */\n      slt\n        /* \"#utility.yul\":11804:11923   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":11842:11921   */\n      tag_351\n      tag_168\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11804:11923   */\n    tag_350:\n        /* \"#utility.yul\":11990:11991   */\n      0x00\n        /* \"#utility.yul\":11979:11988   */\n      dup4\n        /* \"#utility.yul\":11975:11992   */\n      add\n        /* \"#utility.yul\":11962:11993   */\n      calldataload\n        /* \"#utility.yul\":12020:12038   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12012:12018   */\n      dup2\n        /* \"#utility.yul\":12009:12039   */\n      gt\n        /* \"#utility.yul\":12006:12123   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":12042:12121   */\n      tag_353\n      tag_169\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":12006:12123   */\n    tag_352:\n        /* \"#utility.yul\":12147:12209   */\n      tag_354\n        /* \"#utility.yul\":12201:12208   */\n      dup6\n        /* \"#utility.yul\":12192:12198   */\n      dup3\n        /* \"#utility.yul\":12181:12190   */\n      dup7\n        /* \"#utility.yul\":12177:12199   */\n      add\n        /* \"#utility.yul\":12147:12209   */\n      tag_206\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12137:12209   */\n      swap3\n      pop\n        /* \"#utility.yul\":11933:12219   */\n      pop\n        /* \"#utility.yul\":12258:12260   */\n      0x20\n        /* \"#utility.yul\":12284:12337   */\n      tag_355\n        /* \"#utility.yul\":12329:12336   */\n      dup6\n        /* \"#utility.yul\":12320:12326   */\n      dup3\n        /* \"#utility.yul\":12309:12318   */\n      dup7\n        /* \"#utility.yul\":12305:12327   */\n      add\n        /* \"#utility.yul\":12284:12337   */\n      tag_176\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12274:12337   */\n      swap2\n      pop\n        /* \"#utility.yul\":12229:12347   */\n      pop\n        /* \"#utility.yul\":11702:12354   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12360:12502   */\n    tag_207:\n        /* \"#utility.yul\":12426:12435   */\n      0x00\n        /* \"#utility.yul\":12459:12496   */\n      tag_357\n        /* \"#utility.yul\":12490:12495   */\n      dup3\n        /* \"#utility.yul\":12459:12496   */\n      tag_194\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12446:12496   */\n      swap1\n      pop\n        /* \"#utility.yul\":12360:12502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12508:12671   */\n    tag_208:\n        /* \"#utility.yul\":12611:12664   */\n      tag_359\n        /* \"#utility.yul\":12658:12663   */\n      dup2\n        /* \"#utility.yul\":12611:12664   */\n      tag_207\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":12606:12609   */\n      dup3\n        /* \"#utility.yul\":12599:12665   */\n      mstore\n        /* \"#utility.yul\":12508:12671   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12677:12931   */\n    tag_55:\n        /* \"#utility.yul\":12786:12790   */\n      0x00\n        /* \"#utility.yul\":12824:12826   */\n      0x20\n        /* \"#utility.yul\":12813:12822   */\n      dup3\n        /* \"#utility.yul\":12809:12827   */\n      add\n        /* \"#utility.yul\":12801:12827   */\n      swap1\n      pop\n        /* \"#utility.yul\":12837:12924   */\n      tag_361\n        /* \"#utility.yul\":12921:12922   */\n      0x00\n        /* \"#utility.yul\":12910:12919   */\n      dup4\n        /* \"#utility.yul\":12906:12923   */\n      add\n        /* \"#utility.yul\":12897:12903   */\n      dup5\n        /* \"#utility.yul\":12837:12924   */\n      tag_208\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":12677:12931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12937:13027   */\n    tag_209:\n        /* \"#utility.yul\":12971:12978   */\n      0x00\n        /* \"#utility.yul\":13014:13019   */\n      dup2\n        /* \"#utility.yul\":13007:13020   */\n      iszero\n        /* \"#utility.yul\":13000:13021   */\n      iszero\n        /* \"#utility.yul\":12989:13021   */\n      swap1\n      pop\n        /* \"#utility.yul\":12937:13027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13033:13142   */\n    tag_210:\n        /* \"#utility.yul\":13114:13135   */\n      tag_364\n        /* \"#utility.yul\":13129:13134   */\n      dup2\n        /* \"#utility.yul\":13114:13135   */\n      tag_209\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":13109:13112   */\n      dup3\n        /* \"#utility.yul\":13102:13136   */\n      mstore\n        /* \"#utility.yul\":13033:13142   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13148:13358   */\n    tag_66:\n        /* \"#utility.yul\":13235:13239   */\n      0x00\n        /* \"#utility.yul\":13273:13275   */\n      0x20\n        /* \"#utility.yul\":13262:13271   */\n      dup3\n        /* \"#utility.yul\":13258:13276   */\n      add\n        /* \"#utility.yul\":13250:13276   */\n      swap1\n      pop\n        /* \"#utility.yul\":13286:13351   */\n      tag_366\n        /* \"#utility.yul\":13348:13349   */\n      0x00\n        /* \"#utility.yul\":13337:13346   */\n      dup4\n        /* \"#utility.yul\":13333:13350   */\n      add\n        /* \"#utility.yul\":13324:13330   */\n      dup5\n        /* \"#utility.yul\":13286:13351   */\n      tag_210\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":13148:13358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13364:13533   */\n    tag_211:\n        /* \"#utility.yul\":13448:13459   */\n      0x00\n        /* \"#utility.yul\":13482:13488   */\n      dup3\n        /* \"#utility.yul\":13477:13480   */\n      dup3\n        /* \"#utility.yul\":13470:13489   */\n      mstore\n        /* \"#utility.yul\":13522:13526   */\n      0x20\n        /* \"#utility.yul\":13517:13520   */\n      dup3\n        /* \"#utility.yul\":13513:13527   */\n      add\n        /* \"#utility.yul\":13498:13527   */\n      swap1\n      pop\n        /* \"#utility.yul\":13364:13533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13539:13717   */\n    tag_212:\n        /* \"#utility.yul\":13679:13709   */\n      0x7072696365206d7573742062652067726561746572207468616e203000000000\n        /* \"#utility.yul\":13675:13676   */\n      0x00\n        /* \"#utility.yul\":13667:13673   */\n      dup3\n        /* \"#utility.yul\":13663:13677   */\n      add\n        /* \"#utility.yul\":13656:13710   */\n      mstore\n        /* \"#utility.yul\":13539:13717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13723:14089   */\n    tag_213:\n        /* \"#utility.yul\":13865:13868   */\n      0x00\n        /* \"#utility.yul\":13886:13953   */\n      tag_370\n        /* \"#utility.yul\":13950:13952   */\n      0x1c\n        /* \"#utility.yul\":13945:13948   */\n      dup4\n        /* \"#utility.yul\":13886:13953   */\n      tag_211\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":13879:13953   */\n      swap2\n      pop\n        /* \"#utility.yul\":13962:14055   */\n      tag_371\n        /* \"#utility.yul\":14051:14054   */\n      dup3\n        /* \"#utility.yul\":13962:14055   */\n      tag_212\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":14080:14082   */\n      0x20\n        /* \"#utility.yul\":14075:14078   */\n      dup3\n        /* \"#utility.yul\":14071:14083   */\n      add\n        /* \"#utility.yul\":14064:14083   */\n      swap1\n      pop\n        /* \"#utility.yul\":13723:14089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14095:14514   */\n    tag_71:\n        /* \"#utility.yul\":14261:14265   */\n      0x00\n        /* \"#utility.yul\":14299:14301   */\n      0x20\n        /* \"#utility.yul\":14288:14297   */\n      dup3\n        /* \"#utility.yul\":14284:14302   */\n      add\n        /* \"#utility.yul\":14276:14302   */\n      swap1\n      pop\n        /* \"#utility.yul\":14348:14357   */\n      dup2\n        /* \"#utility.yul\":14342:14346   */\n      dup2\n        /* \"#utility.yul\":14338:14358   */\n      sub\n        /* \"#utility.yul\":14334:14335   */\n      0x00\n        /* \"#utility.yul\":14323:14332   */\n      dup4\n        /* \"#utility.yul\":14319:14336   */\n      add\n        /* \"#utility.yul\":14312:14359   */\n      mstore\n        /* \"#utility.yul\":14376:14507   */\n      tag_373\n        /* \"#utility.yul\":14502:14506   */\n      dup2\n        /* \"#utility.yul\":14376:14507   */\n      tag_213\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":14368:14507   */\n      swap1\n      pop\n        /* \"#utility.yul\":14095:14514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14520:14700   */\n    tag_214:\n        /* \"#utility.yul\":14568:14645   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14565:14566   */\n      0x00\n        /* \"#utility.yul\":14558:14646   */\n      mstore\n        /* \"#utility.yul\":14665:14669   */\n      0x11\n        /* \"#utility.yul\":14662:14663   */\n      0x04\n        /* \"#utility.yul\":14655:14670   */\n      mstore\n        /* \"#utility.yul\":14689:14693   */\n      0x24\n        /* \"#utility.yul\":14686:14687   */\n      0x00\n        /* \"#utility.yul\":14679:14694   */\n      revert\n        /* \"#utility.yul\":14706:14900   */\n    tag_74:\n        /* \"#utility.yul\":14746:14750   */\n      0x00\n        /* \"#utility.yul\":14766:14786   */\n      tag_376\n        /* \"#utility.yul\":14784:14785   */\n      dup3\n        /* \"#utility.yul\":14766:14786   */\n      tag_174\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":14761:14786   */\n      swap2\n      pop\n        /* \"#utility.yul\":14800:14820   */\n      tag_377\n        /* \"#utility.yul\":14818:14819   */\n      dup4\n        /* \"#utility.yul\":14800:14820   */\n      tag_174\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":14795:14820   */\n      swap3\n      pop\n        /* \"#utility.yul\":14844:14845   */\n      dup3\n        /* \"#utility.yul\":14841:14842   */\n      dup3\n        /* \"#utility.yul\":14837:14846   */\n      sub\n        /* \"#utility.yul\":14829:14846   */\n      swap1\n      pop\n        /* \"#utility.yul\":14868:14869   */\n      dup2\n        /* \"#utility.yul\":14862:14866   */\n      dup2\n        /* \"#utility.yul\":14859:14870   */\n      gt\n        /* \"#utility.yul\":14856:14893   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":14873:14891   */\n      tag_379\n      tag_214\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":14856:14893   */\n    tag_378:\n        /* \"#utility.yul\":14706:14900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14906:15066   */\n    tag_215:\n        /* \"#utility.yul\":15046:15058   */\n      0x6e6f742073656c6c657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15042:15043   */\n      0x00\n        /* \"#utility.yul\":15034:15040   */\n      dup3\n        /* \"#utility.yul\":15030:15044   */\n      add\n        /* \"#utility.yul\":15023:15059   */\n      mstore\n        /* \"#utility.yul\":14906:15066   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15072:15438   */\n    tag_216:\n        /* \"#utility.yul\":15214:15217   */\n      0x00\n        /* \"#utility.yul\":15235:15302   */\n      tag_382\n        /* \"#utility.yul\":15299:15301   */\n      0x0a\n        /* \"#utility.yul\":15294:15297   */\n      dup4\n        /* \"#utility.yul\":15235:15302   */\n      tag_211\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":15228:15302   */\n      swap2\n      pop\n        /* \"#utility.yul\":15311:15404   */\n      tag_383\n        /* \"#utility.yul\":15400:15403   */\n      dup3\n        /* \"#utility.yul\":15311:15404   */\n      tag_215\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":15429:15431   */\n      0x20\n        /* \"#utility.yul\":15424:15427   */\n      dup3\n        /* \"#utility.yul\":15420:15432   */\n      add\n        /* \"#utility.yul\":15413:15432   */\n      swap1\n      pop\n        /* \"#utility.yul\":15072:15438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15444:15863   */\n    tag_79:\n        /* \"#utility.yul\":15610:15614   */\n      0x00\n        /* \"#utility.yul\":15648:15650   */\n      0x20\n        /* \"#utility.yul\":15637:15646   */\n      dup3\n        /* \"#utility.yul\":15633:15651   */\n      add\n        /* \"#utility.yul\":15625:15651   */\n      swap1\n      pop\n        /* \"#utility.yul\":15697:15706   */\n      dup2\n        /* \"#utility.yul\":15691:15695   */\n      dup2\n        /* \"#utility.yul\":15687:15707   */\n      sub\n        /* \"#utility.yul\":15683:15684   */\n      0x00\n        /* \"#utility.yul\":15672:15681   */\n      dup4\n        /* \"#utility.yul\":15668:15685   */\n      add\n        /* \"#utility.yul\":15661:15708   */\n      mstore\n        /* \"#utility.yul\":15725:15856   */\n      tag_385\n        /* \"#utility.yul\":15851:15855   */\n      dup2\n        /* \"#utility.yul\":15725:15856   */\n      tag_216\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":15717:15856   */\n      swap1\n      pop\n        /* \"#utility.yul\":15444:15863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15869:16049   */\n    tag_82:\n        /* \"#utility.yul\":15917:15994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15907:15995   */\n      mstore\n        /* \"#utility.yul\":16014:16018   */\n      0x32\n        /* \"#utility.yul\":16011:16012   */\n      0x04\n        /* \"#utility.yul\":16004:16019   */\n      mstore\n        /* \"#utility.yul\":16038:16042   */\n      0x24\n        /* \"#utility.yul\":16035:16036   */\n      0x00\n        /* \"#utility.yul\":16028:16043   */\n      revert\n        /* \"#utility.yul\":16055:16608   */\n    tag_85:\n        /* \"#utility.yul\":16232:16236   */\n      0x00\n        /* \"#utility.yul\":16270:16273   */\n      0x80\n        /* \"#utility.yul\":16259:16268   */\n      dup3\n        /* \"#utility.yul\":16255:16274   */\n      add\n        /* \"#utility.yul\":16247:16274   */\n      swap1\n      pop\n        /* \"#utility.yul\":16284:16355   */\n      tag_388\n        /* \"#utility.yul\":16352:16353   */\n      0x00\n        /* \"#utility.yul\":16341:16350   */\n      dup4\n        /* \"#utility.yul\":16337:16354   */\n      add\n        /* \"#utility.yul\":16328:16334   */\n      dup8\n        /* \"#utility.yul\":16284:16355   */\n      tag_198\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":16365:16437   */\n      tag_389\n        /* \"#utility.yul\":16433:16435   */\n      0x20\n        /* \"#utility.yul\":16422:16431   */\n      dup4\n        /* \"#utility.yul\":16418:16436   */\n      add\n        /* \"#utility.yul\":16409:16415   */\n      dup7\n        /* \"#utility.yul\":16365:16437   */\n      tag_197\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":16447:16519   */\n      tag_390\n        /* \"#utility.yul\":16515:16517   */\n      0x40\n        /* \"#utility.yul\":16504:16513   */\n      dup4\n        /* \"#utility.yul\":16500:16518   */\n      add\n        /* \"#utility.yul\":16491:16497   */\n      dup6\n        /* \"#utility.yul\":16447:16519   */\n      tag_197\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":16529:16601   */\n      tag_391\n        /* \"#utility.yul\":16597:16599   */\n      0x60\n        /* \"#utility.yul\":16586:16595   */\n      dup4\n        /* \"#utility.yul\":16582:16600   */\n      add\n        /* \"#utility.yul\":16573:16579   */\n      dup5\n        /* \"#utility.yul\":16529:16601   */\n      tag_197\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":16055:16608   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16614:17056   */\n    tag_90:\n        /* \"#utility.yul\":16763:16767   */\n      0x00\n        /* \"#utility.yul\":16801:16803   */\n      0x60\n        /* \"#utility.yul\":16790:16799   */\n      dup3\n        /* \"#utility.yul\":16786:16804   */\n      add\n        /* \"#utility.yul\":16778:16804   */\n      swap1\n      pop\n        /* \"#utility.yul\":16814:16885   */\n      tag_393\n        /* \"#utility.yul\":16882:16883   */\n      0x00\n        /* \"#utility.yul\":16871:16880   */\n      dup4\n        /* \"#utility.yul\":16867:16884   */\n      add\n        /* \"#utility.yul\":16858:16864   */\n      dup7\n        /* \"#utility.yul\":16814:16885   */\n      tag_198\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":16895:16967   */\n      tag_394\n        /* \"#utility.yul\":16963:16965   */\n      0x20\n        /* \"#utility.yul\":16952:16961   */\n      dup4\n        /* \"#utility.yul\":16948:16966   */\n      add\n        /* \"#utility.yul\":16939:16945   */\n      dup6\n        /* \"#utility.yul\":16895:16967   */\n      tag_198\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":16977:17049   */\n      tag_395\n        /* \"#utility.yul\":17045:17047   */\n      0x40\n        /* \"#utility.yul\":17034:17043   */\n      dup4\n        /* \"#utility.yul\":17030:17048   */\n      add\n        /* \"#utility.yul\":17021:17027   */\n      dup5\n        /* \"#utility.yul\":16977:17049   */\n      tag_197\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":16614:17056   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17062:17394   */\n    tag_97:\n        /* \"#utility.yul\":17183:17187   */\n      0x00\n        /* \"#utility.yul\":17221:17223   */\n      0x40\n        /* \"#utility.yul\":17210:17219   */\n      dup3\n        /* \"#utility.yul\":17206:17224   */\n      add\n        /* \"#utility.yul\":17198:17224   */\n      swap1\n      pop\n        /* \"#utility.yul\":17234:17305   */\n      tag_397\n        /* \"#utility.yul\":17302:17303   */\n      0x00\n        /* \"#utility.yul\":17291:17300   */\n      dup4\n        /* \"#utility.yul\":17287:17304   */\n      add\n        /* \"#utility.yul\":17278:17284   */\n      dup6\n        /* \"#utility.yul\":17234:17305   */\n      tag_198\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":17315:17387   */\n      tag_398\n        /* \"#utility.yul\":17383:17385   */\n      0x20\n        /* \"#utility.yul\":17372:17381   */\n      dup4\n        /* \"#utility.yul\":17368:17386   */\n      add\n        /* \"#utility.yul\":17359:17365   */\n      dup5\n        /* \"#utility.yul\":17315:17387   */\n      tag_197\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":17062:17394   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17400:17633   */\n    tag_119:\n        /* \"#utility.yul\":17439:17442   */\n      0x00\n        /* \"#utility.yul\":17462:17486   */\n      tag_400\n        /* \"#utility.yul\":17480:17485   */\n      dup3\n        /* \"#utility.yul\":17462:17486   */\n      tag_174\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":17453:17486   */\n      swap2\n      pop\n        /* \"#utility.yul\":17508:17574   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17501:17506   */\n      dup3\n        /* \"#utility.yul\":17498:17575   */\n      sub\n        /* \"#utility.yul\":17495:17598   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":17578:17596   */\n      tag_402\n      tag_214\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":17495:17598   */\n    tag_401:\n        /* \"#utility.yul\":17625:17626   */\n      0x01\n        /* \"#utility.yul\":17618:17623   */\n      dup3\n        /* \"#utility.yul\":17614:17627   */\n      add\n        /* \"#utility.yul\":17607:17627   */\n      swap1\n      pop\n        /* \"#utility.yul\":17400:17633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17639:17830   */\n    tag_125:\n        /* \"#utility.yul\":17679:17682   */\n      0x00\n        /* \"#utility.yul\":17698:17718   */\n      tag_404\n        /* \"#utility.yul\":17716:17717   */\n      dup3\n        /* \"#utility.yul\":17698:17718   */\n      tag_174\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":17693:17718   */\n      swap2\n      pop\n        /* \"#utility.yul\":17732:17752   */\n      tag_405\n        /* \"#utility.yul\":17750:17751   */\n      dup4\n        /* \"#utility.yul\":17732:17752   */\n      tag_174\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":17727:17752   */\n      swap3\n      pop\n        /* \"#utility.yul\":17775:17776   */\n      dup3\n        /* \"#utility.yul\":17772:17773   */\n      dup3\n        /* \"#utility.yul\":17768:17777   */\n      add\n        /* \"#utility.yul\":17761:17777   */\n      swap1\n      pop\n        /* \"#utility.yul\":17796:17799   */\n      dup1\n        /* \"#utility.yul\":17793:17794   */\n      dup3\n        /* \"#utility.yul\":17790:17800   */\n      gt\n        /* \"#utility.yul\":17787:17823   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":17803:17821   */\n      tag_407\n      tag_214\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":17787:17823   */\n    tag_406:\n        /* \"#utility.yul\":17639:17830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17836:18011   */\n    tag_217:\n        /* \"#utility.yul\":17976:18003   */\n      0x4d61726b65743a746f55696e743235365f6f766572666c6f7700000000000000\n        /* \"#utility.yul\":17972:17973   */\n      0x00\n        /* \"#utility.yul\":17964:17970   */\n      dup3\n        /* \"#utility.yul\":17960:17974   */\n      add\n        /* \"#utility.yul\":17953:18004   */\n      mstore\n        /* \"#utility.yul\":17836:18011   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18017:18383   */\n    tag_218:\n        /* \"#utility.yul\":18159:18162   */\n      0x00\n        /* \"#utility.yul\":18180:18247   */\n      tag_410\n        /* \"#utility.yul\":18244:18246   */\n      0x19\n        /* \"#utility.yul\":18239:18242   */\n      dup4\n        /* \"#utility.yul\":18180:18247   */\n      tag_211\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":18173:18247   */\n      swap2\n      pop\n        /* \"#utility.yul\":18256:18349   */\n      tag_411\n        /* \"#utility.yul\":18345:18348   */\n      dup3\n        /* \"#utility.yul\":18256:18349   */\n      tag_217\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":18374:18376   */\n      0x20\n        /* \"#utility.yul\":18369:18372   */\n      dup3\n        /* \"#utility.yul\":18365:18377   */\n      add\n        /* \"#utility.yul\":18358:18377   */\n      swap1\n      pop\n        /* \"#utility.yul\":18017:18383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18389:18808   */\n    tag_128:\n        /* \"#utility.yul\":18555:18559   */\n      0x00\n        /* \"#utility.yul\":18593:18595   */\n      0x20\n        /* \"#utility.yul\":18582:18591   */\n      dup3\n        /* \"#utility.yul\":18578:18596   */\n      add\n        /* \"#utility.yul\":18570:18596   */\n      swap1\n      pop\n        /* \"#utility.yul\":18642:18651   */\n      dup2\n        /* \"#utility.yul\":18636:18640   */\n      dup2\n        /* \"#utility.yul\":18632:18652   */\n      sub\n        /* \"#utility.yul\":18628:18629   */\n      0x00\n        /* \"#utility.yul\":18617:18626   */\n      dup4\n        /* \"#utility.yul\":18613:18630   */\n      add\n        /* \"#utility.yul\":18606:18653   */\n      mstore\n        /* \"#utility.yul\":18670:18801   */\n      tag_413\n        /* \"#utility.yul\":18796:18800   */\n      dup2\n        /* \"#utility.yul\":18670:18801   */\n      tag_218\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":18662:18801   */\n      swap1\n      pop\n        /* \"#utility.yul\":18389:18808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18814:18985   */\n    tag_219:\n        /* \"#utility.yul\":18954:18977   */\n      0x746f55696e743235365f6f75744f66426f756e64730000000000000000000000\n        /* \"#utility.yul\":18950:18951   */\n      0x00\n        /* \"#utility.yul\":18942:18948   */\n      dup3\n        /* \"#utility.yul\":18938:18952   */\n      add\n        /* \"#utility.yul\":18931:18978   */\n      mstore\n        /* \"#utility.yul\":18814:18985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18991:19357   */\n    tag_220:\n        /* \"#utility.yul\":19133:19136   */\n      0x00\n        /* \"#utility.yul\":19154:19221   */\n      tag_416\n        /* \"#utility.yul\":19218:19220   */\n      0x15\n        /* \"#utility.yul\":19213:19216   */\n      dup4\n        /* \"#utility.yul\":19154:19221   */\n      tag_211\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":19147:19221   */\n      swap2\n      pop\n        /* \"#utility.yul\":19230:19323   */\n      tag_417\n        /* \"#utility.yul\":19319:19322   */\n      dup3\n        /* \"#utility.yul\":19230:19323   */\n      tag_219\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":19348:19350   */\n      0x20\n        /* \"#utility.yul\":19343:19346   */\n      dup3\n        /* \"#utility.yul\":19339:19351   */\n      add\n        /* \"#utility.yul\":19332:19351   */\n      swap1\n      pop\n        /* \"#utility.yul\":18991:19357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19363:19782   */\n    tag_132:\n        /* \"#utility.yul\":19529:19533   */\n      0x00\n        /* \"#utility.yul\":19567:19569   */\n      0x20\n        /* \"#utility.yul\":19556:19565   */\n      dup3\n        /* \"#utility.yul\":19552:19570   */\n      add\n        /* \"#utility.yul\":19544:19570   */\n      swap1\n      pop\n        /* \"#utility.yul\":19616:19625   */\n      dup2\n        /* \"#utility.yul\":19610:19614   */\n      dup2\n        /* \"#utility.yul\":19606:19626   */\n      sub\n        /* \"#utility.yul\":19602:19603   */\n      0x00\n        /* \"#utility.yul\":19591:19600   */\n      dup4\n        /* \"#utility.yul\":19587:19604   */\n      add\n        /* \"#utility.yul\":19580:19627   */\n      mstore\n        /* \"#utility.yul\":19644:19775   */\n      tag_419\n        /* \"#utility.yul\":19770:19774   */\n      dup2\n        /* \"#utility.yul\":19644:19775   */\n      tag_220\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":19636:19775   */\n      swap1\n      pop\n        /* \"#utility.yul\":19363:19782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19788:19904   */\n    tag_221:\n        /* \"#utility.yul\":19858:19879   */\n      tag_421\n        /* \"#utility.yul\":19873:19878   */\n      dup2\n        /* \"#utility.yul\":19858:19879   */\n      tag_209\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":19851:19856   */\n      dup2\n        /* \"#utility.yul\":19848:19880   */\n      eq\n        /* \"#utility.yul\":19838:19898   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":19894:19895   */\n      0x00\n        /* \"#utility.yul\":19891:19892   */\n      dup1\n        /* \"#utility.yul\":19884:19896   */\n      revert\n        /* \"#utility.yul\":19838:19898   */\n    tag_422:\n        /* \"#utility.yul\":19788:19904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19910:20047   */\n    tag_222:\n        /* \"#utility.yul\":19964:19969   */\n      0x00\n        /* \"#utility.yul\":19995:20001   */\n      dup2\n        /* \"#utility.yul\":19989:20002   */\n      mload\n        /* \"#utility.yul\":19980:20002   */\n      swap1\n      pop\n        /* \"#utility.yul\":20011:20041   */\n      tag_424\n        /* \"#utility.yul\":20035:20040   */\n      dup2\n        /* \"#utility.yul\":20011:20041   */\n      tag_221\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":19910:20047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20053:20398   */\n    tag_138:\n        /* \"#utility.yul\":20120:20126   */\n      0x00\n        /* \"#utility.yul\":20169:20171   */\n      0x20\n        /* \"#utility.yul\":20157:20166   */\n      dup3\n        /* \"#utility.yul\":20148:20155   */\n      dup5\n        /* \"#utility.yul\":20144:20167   */\n      sub\n        /* \"#utility.yul\":20140:20172   */\n      slt\n        /* \"#utility.yul\":20137:20256   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":20175:20254   */\n      tag_427\n      tag_168\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":20137:20256   */\n    tag_426:\n        /* \"#utility.yul\":20295:20296   */\n      0x00\n        /* \"#utility.yul\":20320:20381   */\n      tag_428\n        /* \"#utility.yul\":20373:20380   */\n      dup5\n        /* \"#utility.yul\":20364:20370   */\n      dup3\n        /* \"#utility.yul\":20353:20362   */\n      dup6\n        /* \"#utility.yul\":20349:20371   */\n      add\n        /* \"#utility.yul\":20320:20381   */\n      tag_222\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":20310:20381   */\n      swap2\n      pop\n        /* \"#utility.yul\":20266:20391   */\n      pop\n        /* \"#utility.yul\":20053:20398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20404:20567   */\n    tag_223:\n        /* \"#utility.yul\":20544:20559   */\n      0x7472616e73666572206661696c00000000000000000000000000000000000000\n        /* \"#utility.yul\":20540:20541   */\n      0x00\n        /* \"#utility.yul\":20532:20538   */\n      dup3\n        /* \"#utility.yul\":20528:20542   */\n      add\n        /* \"#utility.yul\":20521:20560   */\n      mstore\n        /* \"#utility.yul\":20404:20567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20573:20939   */\n    tag_224:\n        /* \"#utility.yul\":20715:20718   */\n      0x00\n        /* \"#utility.yul\":20736:20803   */\n      tag_431\n        /* \"#utility.yul\":20800:20802   */\n      0x0d\n        /* \"#utility.yul\":20795:20798   */\n      dup4\n        /* \"#utility.yul\":20736:20803   */\n      tag_211\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":20729:20803   */\n      swap2\n      pop\n        /* \"#utility.yul\":20812:20905   */\n      tag_432\n        /* \"#utility.yul\":20901:20904   */\n      dup3\n        /* \"#utility.yul\":20812:20905   */\n      tag_223\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":20930:20932   */\n      0x20\n        /* \"#utility.yul\":20925:20928   */\n      dup3\n        /* \"#utility.yul\":20921:20933   */\n      add\n        /* \"#utility.yul\":20914:20933   */\n      swap1\n      pop\n        /* \"#utility.yul\":20573:20939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20945:21364   */\n    tag_141:\n        /* \"#utility.yul\":21111:21115   */\n      0x00\n        /* \"#utility.yul\":21149:21151   */\n      0x20\n        /* \"#utility.yul\":21138:21147   */\n      dup3\n        /* \"#utility.yul\":21134:21152   */\n      add\n        /* \"#utility.yul\":21126:21152   */\n      swap1\n      pop\n        /* \"#utility.yul\":21198:21207   */\n      dup2\n        /* \"#utility.yul\":21192:21196   */\n      dup2\n        /* \"#utility.yul\":21188:21208   */\n      sub\n        /* \"#utility.yul\":21184:21185   */\n      0x00\n        /* \"#utility.yul\":21173:21182   */\n      dup4\n        /* \"#utility.yul\":21169:21186   */\n      add\n        /* \"#utility.yul\":21162:21209   */\n      mstore\n        /* \"#utility.yul\":21226:21357   */\n      tag_434\n        /* \"#utility.yul\":21352:21356   */\n      dup2\n        /* \"#utility.yul\":21226:21357   */\n      tag_224\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":21218:21357   */\n      swap1\n      pop\n        /* \"#utility.yul\":20945:21364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21370:21923   */\n    tag_148:\n        /* \"#utility.yul\":21547:21551   */\n      0x00\n        /* \"#utility.yul\":21585:21588   */\n      0x80\n        /* \"#utility.yul\":21574:21583   */\n      dup3\n        /* \"#utility.yul\":21570:21589   */\n      add\n        /* \"#utility.yul\":21562:21589   */\n      swap1\n      pop\n        /* \"#utility.yul\":21599:21670   */\n      tag_436\n        /* \"#utility.yul\":21667:21668   */\n      0x00\n        /* \"#utility.yul\":21656:21665   */\n      dup4\n        /* \"#utility.yul\":21652:21669   */\n      add\n        /* \"#utility.yul\":21643:21649   */\n      dup8\n        /* \"#utility.yul\":21599:21670   */\n      tag_198\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":21680:21752   */\n      tag_437\n        /* \"#utility.yul\":21748:21750   */\n      0x20\n        /* \"#utility.yul\":21737:21746   */\n      dup4\n        /* \"#utility.yul\":21733:21751   */\n      add\n        /* \"#utility.yul\":21724:21730   */\n      dup7\n        /* \"#utility.yul\":21680:21752   */\n      tag_198\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":21762:21834   */\n      tag_438\n        /* \"#utility.yul\":21830:21832   */\n      0x40\n        /* \"#utility.yul\":21819:21828   */\n      dup4\n        /* \"#utility.yul\":21815:21833   */\n      add\n        /* \"#utility.yul\":21806:21812   */\n      dup6\n        /* \"#utility.yul\":21762:21834   */\n      tag_197\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":21844:21916   */\n      tag_439\n        /* \"#utility.yul\":21912:21914   */\n      0x60\n        /* \"#utility.yul\":21901:21910   */\n      dup4\n        /* \"#utility.yul\":21897:21915   */\n      add\n        /* \"#utility.yul\":21888:21894   */\n      dup5\n        /* \"#utility.yul\":21844:21916   */\n      tag_197\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":21370:21923   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21929:22109   */\n    tag_165:\n        /* \"#utility.yul\":21977:22054   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21974:21975   */\n      0x00\n        /* \"#utility.yul\":21967:22055   */\n      mstore\n        /* \"#utility.yul\":22074:22078   */\n      0x31\n        /* \"#utility.yul\":22071:22072   */\n      0x04\n        /* \"#utility.yul\":22064:22079   */\n      mstore\n        /* \"#utility.yul\":22098:22102   */\n      0x24\n        /* \"#utility.yul\":22095:22096   */\n      0x00\n        /* \"#utility.yul\":22088:22103   */\n      revert\n\n    auxdata: 0xa264697066735822122086a6c768910d4c16f0c16c8b8262d052e86b3c0def3d50e8cc7e1f892353cbfb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3514": {
									"entryPoint": null,
									"id": 3514,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2495:15",
										"nodeType": "YulBlock",
										"src": "0:2495:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "939:413:15",
													"nodeType": "YulBlock",
													"src": "939:413:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:15",
																"nodeType": "YulBlock",
																"src": "985:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:15"
																			},
																			"nativeSrc": "987:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:15"
																		},
																		"nativeSrc": "987:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:15"
																		},
																		"nativeSrc": "956:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:15",
																		"nodeType": "YulLiteral",
																		"src": "981:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:15"
																},
																"nativeSrc": "952:32:15",
																"nodeType": "YulFunctionCall",
																"src": "952:32:15"
															},
															"nativeSrc": "949:119:15",
															"nodeType": "YulIf",
															"src": "949:119:15"
														},
														{
															"nativeSrc": "1078:128:15",
															"nodeType": "YulBlock",
															"src": "1078:128:15",
															"statements": [
																{
																	"nativeSrc": "1093:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:15"
																				},
																				"nativeSrc": "1164:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:15"
																		},
																		"nativeSrc": "1132:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:15",
															"nodeType": "YulBlock",
															"src": "1216:129:15",
															"statements": [
																{
																	"nativeSrc": "1231:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:15"
																				},
																				"nativeSrc": "1303:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:15"
																		},
																		"nativeSrc": "1271:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:15",
														"nodeType": "YulTypedName",
														"src": "901:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:15",
														"nodeType": "YulTypedName",
														"src": "912:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:15",
														"nodeType": "YulTypedName",
														"src": "924:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:15",
														"nodeType": "YulTypedName",
														"src": "932:6:15",
														"type": ""
													}
												],
												"src": "845:507:15"
											},
											{
												"body": {
													"nativeSrc": "1454:73:15",
													"nodeType": "YulBlock",
													"src": "1454:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1471:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1476:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:15"
																},
																"nativeSrc": "1464:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1464:19:15"
															},
															"nativeSrc": "1464:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1464:19:15"
														},
														{
															"nativeSrc": "1492:29:15",
															"nodeType": "YulAssignment",
															"src": "1492:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1511:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1511:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1516:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1507:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:15"
																},
																"nativeSrc": "1507:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1507:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1492:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1492:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1358:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1426:3:15",
														"nodeType": "YulTypedName",
														"src": "1426:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1431:6:15",
														"nodeType": "YulTypedName",
														"src": "1431:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1442:11:15",
														"nodeType": "YulTypedName",
														"src": "1442:11:15",
														"type": ""
													}
												],
												"src": "1358:169:15"
											},
											{
												"body": {
													"nativeSrc": "1639:56:15",
													"nodeType": "YulBlock",
													"src": "1639:56:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1661:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1669:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1669:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1657:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:15"
																		},
																		"nativeSrc": "1657:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:14:15"
																	},
																	{
																		"hexValue": "7a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1673:14:15",
																		"nodeType": "YulLiteral",
																		"src": "1673:14:15",
																		"type": "",
																		"value": "zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1650:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:15"
																},
																"nativeSrc": "1650:38:15",
																"nodeType": "YulFunctionCall",
																"src": "1650:38:15"
															},
															"nativeSrc": "1650:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "1650:38:15"
														}
													]
												},
												"name": "store_literal_in_memory_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
												"nativeSrc": "1533:162:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1631:6:15",
														"nodeType": "YulTypedName",
														"src": "1631:6:15",
														"type": ""
													}
												],
												"src": "1533:162:15"
											},
											{
												"body": {
													"nativeSrc": "1847:220:15",
													"nodeType": "YulBlock",
													"src": "1847:220:15",
													"statements": [
														{
															"nativeSrc": "1857:74:15",
															"nodeType": "YulAssignment",
															"src": "1857:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1923:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1923:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1928:2:15",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1864:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "1864:58:15"
																},
																"nativeSrc": "1864:67:15",
																"nodeType": "YulFunctionCall",
																"src": "1864:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1857:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1857:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2029:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																	"nativeSrc": "1940:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "1940:88:15"
																},
																"nativeSrc": "1940:93:15",
																"nodeType": "YulFunctionCall",
																"src": "1940:93:15"
															},
															"nativeSrc": "1940:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "1940:93:15"
														},
														{
															"nativeSrc": "2042:19:15",
															"nodeType": "YulAssignment",
															"src": "2042:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2053:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2053:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2058:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2058:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2049:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2049:3:15"
																},
																"nativeSrc": "2049:12:15",
																"nodeType": "YulFunctionCall",
																"src": "2049:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2042:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2042:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1701:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1835:3:15",
														"nodeType": "YulTypedName",
														"src": "1835:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1843:3:15",
														"nodeType": "YulTypedName",
														"src": "1843:3:15",
														"type": ""
													}
												],
												"src": "1701:366:15"
											},
											{
												"body": {
													"nativeSrc": "2244:248:15",
													"nodeType": "YulBlock",
													"src": "2244:248:15",
													"statements": [
														{
															"nativeSrc": "2254:26:15",
															"nodeType": "YulAssignment",
															"src": "2254:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2266:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2266:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2277:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2277:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2262:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:15"
																},
																"nativeSrc": "2262:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2262:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2254:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2254:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2301:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2312:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2312:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2297:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:15"
																		},
																		"nativeSrc": "2297:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2297:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2320:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2320:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2326:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2326:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2316:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:15"
																		},
																		"nativeSrc": "2316:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2316:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:15"
																},
																"nativeSrc": "2290:47:15",
																"nodeType": "YulFunctionCall",
																"src": "2290:47:15"
															},
															"nativeSrc": "2290:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "2290:47:15"
														},
														{
															"nativeSrc": "2346:139:15",
															"nodeType": "YulAssignment",
															"src": "2346:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2480:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2480:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2354:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "2354:124:15"
																},
																"nativeSrc": "2354:131:15",
																"nodeType": "YulFunctionCall",
																"src": "2354:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2346:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2346:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2073:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2224:9:15",
														"nodeType": "YulTypedName",
														"src": "2224:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2239:4:15",
														"nodeType": "YulTypedName",
														"src": "2239:4:15",
														"type": ""
													}
												],
												"src": "2073:419:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D77 CODESIZE SUB DUP1 PUSH2 0x1D77 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1F1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP1 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2A7 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0 DUP3 PUSH2 0x197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x1B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB DUP2 PUSH2 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x207 JUMPI PUSH2 0x206 PUSH2 0x193 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x214 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x225 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7A65726F20616464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x273 PUSH1 0xC DUP4 PUSH2 0x22F JUMP JUMPDEST SWAP2 POP PUSH2 0x27E DUP3 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A0 DUP2 PUSH2 0x267 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC3 DUP1 PUSH2 0x2B4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA85C38EF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA85C38EF EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xB5CDF924 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xBCA6CE64 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xE0391B09 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xFCCE4883 EQ PUSH2 0x232 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x3A52C7C2 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x40E58EE5 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x629CB2E4 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x9D4971B7 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x2B1 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH0 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xD5B509E657D5EC37AE4BDCAB658B7340C0453BB630516D26623359A34C1CECF3 DUP7 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x49F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH1 0x4 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP4 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xDAC6AECD066304D15A41E8E590FC5AB5BF93634F43CBA363F743D5E158D79988 DUP4 DUP7 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x602 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x749 DUP3 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0xC0E68D6B69F741C21E955CAD2AE4D505B6F6735C7E7B278251B3F6283A5F07EB DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x77A SWAP3 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A7 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7E1 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x7CE PUSH2 0xF93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x7C6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x935 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x928 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x90E JUMPI PUSH2 0x90D PUSH2 0x174A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x924 SWAP1 PUSH2 0x1816 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x7E7 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 DUP4 PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST LT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP1 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x20 DUP6 ADD ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBE SWAP1 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP5 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC25 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC5B DUP5 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0x424D5E5F0192C7DACDBE646CA31B00299146D883D76A95EF5CDDBAC7CD342EAB DUP4 DUP4 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC90 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD59 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xCC1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE12 JUMPI PUSH2 0xE11 PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE35 JUMPI PUSH2 0xE34 PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP3 PUSH1 0x4 PUSH0 DUP4 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0xEE9 JUMPI PUSH2 0xEE8 PUSH2 0x1A60 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1001 DUP3 PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x101B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102C DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 DUP2 PUSH2 0x1032 JUMP JUMPDEST DUP2 EQ PUSH2 0x104E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105F DUP2 PUSH2 0x103B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1086 JUMPI PUSH2 0x1085 PUSH2 0x1065 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1069 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0x106D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10DF JUMPI PUSH2 0x10DE PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10EC DUP9 DUP3 DUP10 ADD PUSH2 0x101E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x10FD DUP9 DUP3 DUP10 ADD PUSH2 0x101E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x110E DUP9 DUP3 DUP10 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112E PUSH2 0xFD4 JUMP JUMPDEST JUMPDEST PUSH2 0x113B DUP9 DUP3 DUP10 ADD PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1197 PUSH0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11EF PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11FD DUP5 DUP3 DUP6 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1238 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1247 DUP2 PUSH2 0x1032 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1261 PUSH0 DUP6 ADD DUP3 PUSH2 0x122F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1274 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x123E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1287 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x123E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1298 DUP4 DUP4 PUSH2 0x124D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BA DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x12C4 DUP2 DUP6 PUSH2 0x1210 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CF DUP4 PUSH2 0x1220 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12FF JUMPI DUP2 MLOAD PUSH2 0x12E6 DUP9 DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP8 POP PUSH2 0x12F1 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12D2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1324 DUP2 DUP5 PUSH2 0x12B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x134F PUSH2 0x134A PUSH2 0x1345 DUP5 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x132C JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1360 DUP3 PUSH2 0x1335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1371 DUP3 PUSH2 0x1356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1381 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139A PUSH0 DUP4 ADD DUP5 PUSH2 0x1378 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A9 DUP2 PUSH2 0x1032 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D1 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13EA PUSH0 DUP4 ADD DUP7 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x13F7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x1404 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1456 DUP3 PUSH2 0x1410 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1487 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1493 DUP3 DUP3 PUSH2 0x144D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST PUSH2 0x14BB DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E8 PUSH2 0x14E3 DUP5 PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x147E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1504 JUMPI PUSH2 0x1503 PUSH2 0x140C JUMP JUMPDEST JUMPDEST PUSH2 0x150F DUP5 DUP3 DUP6 PUSH2 0x14C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x1065 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x153B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1576 PUSH2 0xFD4 JUMP JUMPDEST JUMPDEST PUSH2 0x1583 DUP6 DUP3 DUP7 ADD PUSH2 0x1517 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1594 DUP6 DUP3 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A8 DUP3 PUSH2 0x1356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B8 DUP2 PUSH2 0x159E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EB DUP2 PUSH2 0x15D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1604 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x164E PUSH1 0x1C DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1659 DUP3 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167B DUP2 PUSH2 0x1642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16B9 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C4 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DB PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742073656C6C657200000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1716 PUSH1 0xA DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1721 DUP3 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1743 DUP2 PUSH2 0x170A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP8 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x17A4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x17B1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17CD PUSH0 DUP4 ADD DUP7 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x17DA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x17E7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1802 PUSH0 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x180F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1820 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1867 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x1872 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B65743A746F55696E743235365F6F766572666C6F7700000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 PUSH1 0x19 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x18CF DUP3 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F1 DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F55696E743235365F6F75744F66426F756E64730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192C PUSH1 0x15 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1937 DUP3 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1959 DUP2 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1969 DUP2 PUSH2 0x15D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1973 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1984 DUP2 PUSH2 0x1960 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AC DUP5 DUP3 DUP6 ADD PUSH2 0x1976 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7472616E73666572206661696C00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E9 PUSH1 0xD DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x19F4 DUP3 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A16 DUP2 PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A30 PUSH0 DUP4 ADD DUP8 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1A3D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1A4A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x1A57 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xA6 0xC7 PUSH9 0x910D4C16F0C16C8B82 PUSH3 0xD052E8 PUSH12 0x3C0DEF3D50E8CC7E1F892353 0xCB 0xFB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "179:4229:14:-:0;;;879:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;960:1;942:20;;:6;:20;;;934:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1017:1;998:21;;:7;:21;;;990:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1062:6;1047:5;;:22;;;;;;;;;;;;;;;;;;1097:7;1080:6;;:25;;;;;;;;;;;;;;;;;;879:234;;179:4229;;88:117:15;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:162::-;1673:14;1669:1;1661:6;1657:14;1650:38;1533:162;:::o;1701:366::-;1843:3;1864:67;1928:2;1923:3;1864:67;:::i;:::-;1857:74;;1940:93;2029:3;1940:93;:::i;:::-;2058:2;2053:3;2049:12;2042:19;;1701:366;;;:::o;2073:419::-;2239:4;2277:2;2266:9;2262:18;2254:26;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2354:131;2480:4;2354:131;:::i;:::-;2346:139;;2073:419;;;:::o;179:4229:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buy_3571": {
									"entryPoint": 2714,
									"id": 3571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancel_3612": {
									"entryPoint": 1553,
									"id": 3612,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@change_3671": {
									"entryPoint": 1211,
									"id": 3671,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@erc20_3414": {
									"entryPoint": 2366,
									"id": 3414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc721_3417": {
									"entryPoint": 2677,
									"id": 3417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAllNFTs_3867": {
									"entryPoint": 3230,
									"id": 3867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyNFTs_3927": {
									"entryPoint": 1926,
									"id": 3927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOrderLength_3857": {
									"entryPoint": 2401,
									"id": 3857,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isListed_3689": {
									"entryPoint": 3426,
									"id": 3689,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_3754": {
									"entryPoint": 610,
									"id": 3754,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@orders_3436": {
									"entryPoint": 2413,
									"id": 3436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeOrder_3813": {
									"entryPoint": 3532,
									"id": 3813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toUint256_3848": {
									"entryPoint": 2497,
									"id": 3848,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptrt_uint256": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1881_to_t_address_fromStack": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 4484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1881__to_t_address__fromStack_reversed": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 4967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1881_to_t_address": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22112:15",
										"nodeType": "YulBlock",
										"src": "0:22112:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "748:87:15",
													"nodeType": "YulBlock",
													"src": "748:87:15",
													"statements": [
														{
															"nativeSrc": "758:29:15",
															"nodeType": "YulAssignment",
															"src": "758:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:15"
																},
																"nativeSrc": "767:20:15",
																"nodeType": "YulFunctionCall",
																"src": "767:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:15"
																},
																"nativeSrc": "796:33:15",
																"nodeType": "YulFunctionCall",
																"src": "796:33:15"
															},
															"nativeSrc": "796:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:15",
														"nodeType": "YulTypedName",
														"src": "726:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:15",
														"nodeType": "YulTypedName",
														"src": "734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:15",
														"nodeType": "YulTypedName",
														"src": "742:5:15",
														"type": ""
													}
												],
												"src": "696:139:15"
											},
											{
												"body": {
													"nativeSrc": "886:32:15",
													"nodeType": "YulBlock",
													"src": "886:32:15",
													"statements": [
														{
															"nativeSrc": "896:16:15",
															"nodeType": "YulAssignment",
															"src": "896:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:15",
																"nodeType": "YulIdentifier",
																"src": "907:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:15",
														"nodeType": "YulTypedName",
														"src": "868:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:15",
														"nodeType": "YulTypedName",
														"src": "878:7:15",
														"type": ""
													}
												],
												"src": "841:77:15"
											},
											{
												"body": {
													"nativeSrc": "967:79:15",
													"nodeType": "YulBlock",
													"src": "967:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:15",
																"nodeType": "YulBlock",
																"src": "1024:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:15"
																			},
																			"nativeSrc": "1026:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:15"
																		},
																		"nativeSrc": "1026:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:15"
																				},
																				"nativeSrc": "997:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:15"
																		},
																		"nativeSrc": "987:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:15"
																},
																"nativeSrc": "980:43:15",
																"nodeType": "YulFunctionCall",
																"src": "980:43:15"
															},
															"nativeSrc": "977:63:15",
															"nodeType": "YulIf",
															"src": "977:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:15",
														"nodeType": "YulTypedName",
														"src": "960:5:15",
														"type": ""
													}
												],
												"src": "924:122:15"
											},
											{
												"body": {
													"nativeSrc": "1104:87:15",
													"nodeType": "YulBlock",
													"src": "1104:87:15",
													"statements": [
														{
															"nativeSrc": "1114:29:15",
															"nodeType": "YulAssignment",
															"src": "1114:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:15"
																},
																"nativeSrc": "1123:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:15"
																},
																"nativeSrc": "1152:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:15"
															},
															"nativeSrc": "1152:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:15",
														"nodeType": "YulTypedName",
														"src": "1082:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:15",
														"nodeType": "YulTypedName",
														"src": "1090:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:15",
														"nodeType": "YulTypedName",
														"src": "1098:5:15",
														"type": ""
													}
												],
												"src": "1052:139:15"
											},
											{
												"body": {
													"nativeSrc": "1286:28:15",
													"nodeType": "YulBlock",
													"src": "1286:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1303:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1296:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:15"
																},
																"nativeSrc": "1296:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1296:12:15"
															},
															"nativeSrc": "1296:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1197:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:15"
											},
											{
												"body": {
													"nativeSrc": "1409:28:15",
													"nodeType": "YulBlock",
													"src": "1409:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1426:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1419:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:15"
																},
																"nativeSrc": "1419:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1419:12:15"
															},
															"nativeSrc": "1419:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:15"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1320:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:15"
											},
											{
												"body": {
													"nativeSrc": "1532:28:15",
													"nodeType": "YulBlock",
													"src": "1532:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1549:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1542:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:15"
																},
																"nativeSrc": "1542:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1542:12:15"
															},
															"nativeSrc": "1542:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1443:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:15"
											},
											{
												"body": {
													"nativeSrc": "1653:478:15",
													"nodeType": "YulBlock",
													"src": "1653:478:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1702:83:15",
																"nodeType": "YulBlock",
																"src": "1702:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1704:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:15"
																			},
																			"nativeSrc": "1704:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:15"
																		},
																		"nativeSrc": "1704:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1681:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1689:4:15",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1677:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:15"
																				},
																				"nativeSrc": "1677:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1696:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1673:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:15"
																		},
																		"nativeSrc": "1673:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1666:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:15"
																},
																"nativeSrc": "1666:35:15",
																"nodeType": "YulFunctionCall",
																"src": "1666:35:15"
															},
															"nativeSrc": "1663:122:15",
															"nodeType": "YulIf",
															"src": "1663:122:15"
														},
														{
															"nativeSrc": "1794:30:15",
															"nodeType": "YulAssignment",
															"src": "1794:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1817:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1804:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:15"
																},
																"nativeSrc": "1804:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1804:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1794:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1867:83:15",
																"nodeType": "YulBlock",
																"src": "1867:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1869:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:15"
																			},
																			"nativeSrc": "1869:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:15"
																		},
																		"nativeSrc": "1869:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1839:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1847:18:15",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1836:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:15"
																},
																"nativeSrc": "1836:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1836:30:15"
															},
															"nativeSrc": "1833:117:15",
															"nodeType": "YulIf",
															"src": "1833:117:15"
														},
														{
															"nativeSrc": "1959:29:15",
															"nodeType": "YulAssignment",
															"src": "1959:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1975:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1971:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:15"
																},
																"nativeSrc": "1971:17:15",
																"nodeType": "YulFunctionCall",
																"src": "1971:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1959:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2042:83:15",
																"nodeType": "YulBlock",
																"src": "2042:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2044:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:15"
																			},
																			"nativeSrc": "2044:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:15"
																		},
																		"nativeSrc": "2044:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2007:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2021:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2029:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:15",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2017:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:15"
																				},
																				"nativeSrc": "2017:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2003:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:15"
																		},
																		"nativeSrc": "2003:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2037:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2000:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:15"
																},
																"nativeSrc": "2000:41:15",
																"nodeType": "YulFunctionCall",
																"src": "2000:41:15"
															},
															"nativeSrc": "1997:128:15",
															"nodeType": "YulIf",
															"src": "1997:128:15"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "1579:552:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:15",
														"nodeType": "YulTypedName",
														"src": "1620:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:15",
														"nodeType": "YulTypedName",
														"src": "1628:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1636:8:15",
														"nodeType": "YulTypedName",
														"src": "1636:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1646:6:15",
														"nodeType": "YulTypedName",
														"src": "1646:6:15",
														"type": ""
													}
												],
												"src": "1579:552:15"
											},
											{
												"body": {
													"nativeSrc": "2273:827:15",
													"nodeType": "YulBlock",
													"src": "2273:827:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:15",
																"nodeType": "YulBlock",
																"src": "2320:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2322:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:15"
																			},
																			"nativeSrc": "2322:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:15"
																		},
																		"nativeSrc": "2322:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2294:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2294:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2303:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2290:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:15"
																		},
																		"nativeSrc": "2290:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2290:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2315:3:15",
																		"nodeType": "YulLiteral",
																		"src": "2315:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2286:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:15"
																},
																"nativeSrc": "2286:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2286:33:15"
															},
															"nativeSrc": "2283:120:15",
															"nodeType": "YulIf",
															"src": "2283:120:15"
														},
														{
															"nativeSrc": "2413:117:15",
															"nodeType": "YulBlock",
															"src": "2413:117:15",
															"statements": [
																{
																	"nativeSrc": "2428:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2428:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2442:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2442:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2432:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2432:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2457:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2457:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2492:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2503:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2503:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2488:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2488:3:15"
																				},
																				"nativeSrc": "2488:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2488:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2512:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2512:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2467:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2467:20:15"
																		},
																		"nativeSrc": "2467:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2467:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2457:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2457:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2540:118:15",
															"nodeType": "YulBlock",
															"src": "2540:118:15",
															"statements": [
																{
																	"nativeSrc": "2555:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2555:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2569:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2559:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2559:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2585:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2585:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2620:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2620:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2631:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2631:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2616:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:15"
																				},
																				"nativeSrc": "2616:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2616:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2640:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2595:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2595:20:15"
																		},
																		"nativeSrc": "2595:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2585:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2668:118:15",
															"nodeType": "YulBlock",
															"src": "2668:118:15",
															"statements": [
																{
																	"nativeSrc": "2683:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2683:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2697:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2687:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2687:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2713:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2713:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2748:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2748:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2759:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2759:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2744:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:15"
																				},
																				"nativeSrc": "2744:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2744:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2768:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2723:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2723:20:15"
																		},
																		"nativeSrc": "2723:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2713:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2796:297:15",
															"nodeType": "YulBlock",
															"src": "2796:297:15",
															"statements": [
																{
																	"nativeSrc": "2811:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2853:2:15",
																						"nodeType": "YulLiteral",
																						"src": "2853:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:15"
																				},
																				"nativeSrc": "2838:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2825:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "2825:12:15"
																		},
																		"nativeSrc": "2825:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2815:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2904:83:15",
																		"nodeType": "YulBlock",
																		"src": "2904:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2906:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "2906:77:15"
																					},
																					"nativeSrc": "2906:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:79:15"
																				},
																				"nativeSrc": "2906:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2906:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2876:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2876:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2884:18:15",
																				"nodeType": "YulLiteral",
																				"src": "2884:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2873:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2873:2:15"
																		},
																		"nativeSrc": "2873:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2873:30:15"
																	},
																	"nativeSrc": "2870:117:15",
																	"nodeType": "YulIf",
																	"src": "2870:117:15"
																},
																{
																	"nativeSrc": "3001:82:15",
																	"nodeType": "YulAssignment",
																	"src": "3001:82:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3055:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3055:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3066:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3066:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3051:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:15"
																				},
																				"nativeSrc": "3051:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3051:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3075:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3075:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "3019:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "3019:31:15"
																		},
																		"nativeSrc": "3019:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3001:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3001:6:15"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "3009:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3009:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "2137:963:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2211:9:15",
														"nodeType": "YulTypedName",
														"src": "2211:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2222:7:15",
														"nodeType": "YulTypedName",
														"src": "2222:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2234:6:15",
														"nodeType": "YulTypedName",
														"src": "2234:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2242:6:15",
														"nodeType": "YulTypedName",
														"src": "2242:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2250:6:15",
														"nodeType": "YulTypedName",
														"src": "2250:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2258:6:15",
														"nodeType": "YulTypedName",
														"src": "2258:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2266:6:15",
														"nodeType": "YulTypedName",
														"src": "2266:6:15",
														"type": ""
													}
												],
												"src": "2137:963:15"
											},
											{
												"body": {
													"nativeSrc": "3150:105:15",
													"nodeType": "YulBlock",
													"src": "3150:105:15",
													"statements": [
														{
															"nativeSrc": "3160:89:15",
															"nodeType": "YulAssignment",
															"src": "3160:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3175:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3175:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3182:66:15",
																		"nodeType": "YulLiteral",
																		"src": "3182:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3171:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:15"
																},
																"nativeSrc": "3171:78:15",
																"nodeType": "YulFunctionCall",
																"src": "3171:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3160:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3160:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "3106:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3132:5:15",
														"nodeType": "YulTypedName",
														"src": "3132:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3142:7:15",
														"nodeType": "YulTypedName",
														"src": "3142:7:15",
														"type": ""
													}
												],
												"src": "3106:149:15"
											},
											{
												"body": {
													"nativeSrc": "3324:52:15",
													"nodeType": "YulBlock",
													"src": "3324:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3341:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3341:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3363:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "3346:16:15",
																			"nodeType": "YulIdentifier",
																			"src": "3346:16:15"
																		},
																		"nativeSrc": "3346:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3346:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3334:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:15"
																},
																"nativeSrc": "3334:36:15",
																"nodeType": "YulFunctionCall",
																"src": "3334:36:15"
															},
															"nativeSrc": "3334:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "3334:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "3261:115:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3312:5:15",
														"nodeType": "YulTypedName",
														"src": "3312:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3319:3:15",
														"nodeType": "YulTypedName",
														"src": "3319:3:15",
														"type": ""
													}
												],
												"src": "3261:115:15"
											},
											{
												"body": {
													"nativeSrc": "3478:122:15",
													"nodeType": "YulBlock",
													"src": "3478:122:15",
													"statements": [
														{
															"nativeSrc": "3488:26:15",
															"nodeType": "YulAssignment",
															"src": "3488:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3500:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3511:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3511:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3496:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3496:3:15"
																},
																"nativeSrc": "3496:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3496:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3488:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3488:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3566:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3590:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:15"
																		},
																		"nativeSrc": "3575:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "3524:41:15",
																	"nodeType": "YulIdentifier",
																	"src": "3524:41:15"
																},
																"nativeSrc": "3524:69:15",
																"nodeType": "YulFunctionCall",
																"src": "3524:69:15"
															},
															"nativeSrc": "3524:69:15",
															"nodeType": "YulExpressionStatement",
															"src": "3524:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "3382:218:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3450:9:15",
														"nodeType": "YulTypedName",
														"src": "3450:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3462:6:15",
														"nodeType": "YulTypedName",
														"src": "3462:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3473:4:15",
														"nodeType": "YulTypedName",
														"src": "3473:4:15",
														"type": ""
													}
												],
												"src": "3382:218:15"
											},
											{
												"body": {
													"nativeSrc": "3689:391:15",
													"nodeType": "YulBlock",
													"src": "3689:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3735:83:15",
																"nodeType": "YulBlock",
																"src": "3735:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3737:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3737:77:15"
																			},
																			"nativeSrc": "3737:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3737:79:15"
																		},
																		"nativeSrc": "3737:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3710:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3710:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3719:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3719:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3706:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3706:3:15"
																		},
																		"nativeSrc": "3706:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3706:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3731:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3731:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3702:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3702:3:15"
																},
																"nativeSrc": "3702:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3702:32:15"
															},
															"nativeSrc": "3699:119:15",
															"nodeType": "YulIf",
															"src": "3699:119:15"
														},
														{
															"nativeSrc": "3828:117:15",
															"nodeType": "YulBlock",
															"src": "3828:117:15",
															"statements": [
																{
																	"nativeSrc": "3843:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3843:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3857:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3847:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3847:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3872:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3872:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3907:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3907:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3918:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3918:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3903:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3903:3:15"
																				},
																				"nativeSrc": "3903:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3903:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3927:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3927:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3882:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3882:20:15"
																		},
																		"nativeSrc": "3882:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3872:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3872:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3955:118:15",
															"nodeType": "YulBlock",
															"src": "3955:118:15",
															"statements": [
																{
																	"nativeSrc": "3970:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3970:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3984:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3984:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3974:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3974:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4000:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4000:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4035:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4035:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4046:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4046:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4031:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4031:3:15"
																				},
																				"nativeSrc": "4031:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4031:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4055:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4055:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4010:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4010:20:15"
																		},
																		"nativeSrc": "4010:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4010:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4000:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4000:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3606:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3651:9:15",
														"nodeType": "YulTypedName",
														"src": "3651:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3662:7:15",
														"nodeType": "YulTypedName",
														"src": "3662:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3674:6:15",
														"nodeType": "YulTypedName",
														"src": "3674:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3682:6:15",
														"nodeType": "YulTypedName",
														"src": "3682:6:15",
														"type": ""
													}
												],
												"src": "3606:474:15"
											},
											{
												"body": {
													"nativeSrc": "4152:263:15",
													"nodeType": "YulBlock",
													"src": "4152:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4198:83:15",
																"nodeType": "YulBlock",
																"src": "4198:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4200:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4200:77:15"
																			},
																			"nativeSrc": "4200:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4200:79:15"
																		},
																		"nativeSrc": "4200:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4200:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4173:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4173:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4182:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4169:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:15"
																		},
																		"nativeSrc": "4169:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4169:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4194:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4194:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4165:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4165:3:15"
																},
																"nativeSrc": "4165:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4165:32:15"
															},
															"nativeSrc": "4162:119:15",
															"nodeType": "YulIf",
															"src": "4162:119:15"
														},
														{
															"nativeSrc": "4291:117:15",
															"nodeType": "YulBlock",
															"src": "4291:117:15",
															"statements": [
																{
																	"nativeSrc": "4306:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4306:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4320:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4310:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4310:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4335:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4335:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4370:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4370:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4381:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4381:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4366:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4366:3:15"
																				},
																				"nativeSrc": "4366:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4366:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4390:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4390:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4345:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4345:20:15"
																		},
																		"nativeSrc": "4345:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4345:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4335:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4335:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4086:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4122:9:15",
														"nodeType": "YulTypedName",
														"src": "4122:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4133:7:15",
														"nodeType": "YulTypedName",
														"src": "4133:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4145:6:15",
														"nodeType": "YulTypedName",
														"src": "4145:6:15",
														"type": ""
													}
												],
												"src": "4086:329:15"
											},
											{
												"body": {
													"nativeSrc": "4518:40:15",
													"nodeType": "YulBlock",
													"src": "4518:40:15",
													"statements": [
														{
															"nativeSrc": "4529:22:15",
															"nodeType": "YulAssignment",
															"src": "4529:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4545:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4545:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4539:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4539:5:15"
																},
																"nativeSrc": "4539:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4539:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4529:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4421:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4501:5:15",
														"nodeType": "YulTypedName",
														"src": "4501:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4511:6:15",
														"nodeType": "YulTypedName",
														"src": "4511:6:15",
														"type": ""
													}
												],
												"src": "4421:137:15"
											},
											{
												"body": {
													"nativeSrc": "4698:73:15",
													"nodeType": "YulBlock",
													"src": "4698:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4715:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4715:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4720:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4720:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:15"
																},
																"nativeSrc": "4708:19:15",
																"nodeType": "YulFunctionCall",
																"src": "4708:19:15"
															},
															"nativeSrc": "4708:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "4708:19:15"
														},
														{
															"nativeSrc": "4736:29:15",
															"nodeType": "YulAssignment",
															"src": "4736:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4755:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4755:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4760:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4751:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:15"
																},
																"nativeSrc": "4751:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4751:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4736:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "4736:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4564:207:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4670:3:15",
														"nodeType": "YulTypedName",
														"src": "4670:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4675:6:15",
														"nodeType": "YulTypedName",
														"src": "4675:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4686:11:15",
														"nodeType": "YulTypedName",
														"src": "4686:11:15",
														"type": ""
													}
												],
												"src": "4564:207:15"
											},
											{
												"body": {
													"nativeSrc": "4872:60:15",
													"nodeType": "YulBlock",
													"src": "4872:60:15",
													"statements": [
														{
															"nativeSrc": "4882:11:15",
															"nodeType": "YulAssignment",
															"src": "4882:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "4890:3:15",
																"nodeType": "YulIdentifier",
																"src": "4890:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4882:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4882:4:15"
																}
															]
														},
														{
															"nativeSrc": "4903:22:15",
															"nodeType": "YulAssignment",
															"src": "4903:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4915:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4915:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4920:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4920:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4911:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4911:3:15"
																},
																"nativeSrc": "4911:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4911:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4903:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4903:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4777:155:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4859:3:15",
														"nodeType": "YulTypedName",
														"src": "4859:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4867:4:15",
														"nodeType": "YulTypedName",
														"src": "4867:4:15",
														"type": ""
													}
												],
												"src": "4777:155:15"
											},
											{
												"body": {
													"nativeSrc": "4993:53:15",
													"nodeType": "YulBlock",
													"src": "4993:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5010:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5010:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5033:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5033:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5015:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5015:17:15"
																		},
																		"nativeSrc": "5015:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5003:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:15"
																},
																"nativeSrc": "5003:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5003:37:15"
															},
															"nativeSrc": "5003:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "5003:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "4938:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4981:5:15",
														"nodeType": "YulTypedName",
														"src": "4981:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4988:3:15",
														"nodeType": "YulTypedName",
														"src": "4988:3:15",
														"type": ""
													}
												],
												"src": "4938:108:15"
											},
											{
												"body": {
													"nativeSrc": "5107:53:15",
													"nodeType": "YulBlock",
													"src": "5107:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5124:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5124:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5147:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5147:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5129:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5129:17:15"
																		},
																		"nativeSrc": "5129:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5117:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:15"
																},
																"nativeSrc": "5117:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5117:37:15"
															},
															"nativeSrc": "5117:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "5117:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5052:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5095:5:15",
														"nodeType": "YulTypedName",
														"src": "5095:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5102:3:15",
														"nodeType": "YulTypedName",
														"src": "5102:3:15",
														"type": ""
													}
												],
												"src": "5052:108:15"
											},
											{
												"body": {
													"nativeSrc": "5324:571:15",
													"nodeType": "YulBlock",
													"src": "5324:571:15",
													"statements": [
														{
															"nativeSrc": "5334:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5334:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5350:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5355:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5355:4:15",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5346:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5346:3:15"
																},
																"nativeSrc": "5346:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5346:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5338:4:15",
																	"nodeType": "YulTypedName",
																	"src": "5338:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5370:166:15",
															"nodeType": "YulBlock",
															"src": "5370:166:15",
															"statements": [
																{
																	"nativeSrc": "5407:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5407:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5437:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5437:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5444:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5444:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5433:3:15"
																				},
																				"nativeSrc": "5433:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5433:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5427:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5427:5:15"
																		},
																		"nativeSrc": "5427:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5427:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5411:12:15",
																			"nodeType": "YulTypedName",
																			"src": "5411:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5497:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "5497:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5515:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5515:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5520:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5520:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5511:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:15"
																				},
																				"nativeSrc": "5511:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5511:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5463:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "5463:33:15"
																		},
																		"nativeSrc": "5463:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:63:15"
																	},
																	"nativeSrc": "5463:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "5463:63:15"
																}
															]
														},
														{
															"nativeSrc": "5546:167:15",
															"nodeType": "YulBlock",
															"src": "5546:167:15",
															"statements": [
																{
																	"nativeSrc": "5584:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5584:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5614:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5614:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5621:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5621:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5610:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5610:3:15"
																				},
																				"nativeSrc": "5610:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5610:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5604:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5604:5:15"
																		},
																		"nativeSrc": "5604:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5588:12:15",
																			"nodeType": "YulTypedName",
																			"src": "5588:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5674:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "5674:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5692:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5692:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5697:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5697:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:15"
																				},
																				"nativeSrc": "5688:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5640:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "5640:33:15"
																		},
																		"nativeSrc": "5640:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:63:15"
																	},
																	"nativeSrc": "5640:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "5640:63:15"
																}
															]
														},
														{
															"nativeSrc": "5723:165:15",
															"nodeType": "YulBlock",
															"src": "5723:165:15",
															"statements": [
																{
																	"nativeSrc": "5759:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5759:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5789:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5789:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5796:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5796:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5785:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5785:3:15"
																				},
																				"nativeSrc": "5785:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5785:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5779:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5779:5:15"
																		},
																		"nativeSrc": "5779:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5779:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5763:12:15",
																			"nodeType": "YulTypedName",
																			"src": "5763:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5849:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "5849:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5867:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5867:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5872:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5872:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5863:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5863:3:15"
																				},
																				"nativeSrc": "5863:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5863:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5815:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "5815:33:15"
																		},
																		"nativeSrc": "5815:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5815:63:15"
																	},
																	"nativeSrc": "5815:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "5815:63:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr",
												"nativeSrc": "5222:673:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5311:5:15",
														"nodeType": "YulTypedName",
														"src": "5311:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5318:3:15",
														"nodeType": "YulTypedName",
														"src": "5318:3:15",
														"type": ""
													}
												],
												"src": "5222:673:15"
											},
											{
												"body": {
													"nativeSrc": "6027:145:15",
													"nodeType": "YulBlock",
													"src": "6027:145:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6117:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6117:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6125:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6125:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr",
																	"nativeSrc": "6037:79:15",
																	"nodeType": "YulIdentifier",
																	"src": "6037:79:15"
																},
																"nativeSrc": "6037:92:15",
																"nodeType": "YulFunctionCall",
																"src": "6037:92:15"
															},
															"nativeSrc": "6037:92:15",
															"nodeType": "YulExpressionStatement",
															"src": "6037:92:15"
														},
														{
															"nativeSrc": "6138:28:15",
															"nodeType": "YulAssignment",
															"src": "6138:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6156:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6156:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6161:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6161:4:15",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6152:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6152:3:15"
																},
																"nativeSrc": "6152:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6152:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6138:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "6138:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr",
												"nativeSrc": "5901:271:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6000:6:15",
														"nodeType": "YulTypedName",
														"src": "6000:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6008:3:15",
														"nodeType": "YulTypedName",
														"src": "6008:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6016:10:15",
														"nodeType": "YulTypedName",
														"src": "6016:10:15",
														"type": ""
													}
												],
												"src": "5901:271:15"
											},
											{
												"body": {
													"nativeSrc": "6276:38:15",
													"nodeType": "YulBlock",
													"src": "6276:38:15",
													"statements": [
														{
															"nativeSrc": "6286:22:15",
															"nodeType": "YulAssignment",
															"src": "6286:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6298:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6298:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6303:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6303:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6294:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6294:3:15"
																},
																"nativeSrc": "6294:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6294:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6286:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6286:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6178:136:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6263:3:15",
														"nodeType": "YulTypedName",
														"src": "6263:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6271:4:15",
														"nodeType": "YulTypedName",
														"src": "6271:4:15",
														"type": ""
													}
												],
												"src": "6178:136:15"
											},
											{
												"body": {
													"nativeSrc": "6550:746:15",
													"nodeType": "YulBlock",
													"src": "6550:746:15",
													"statements": [
														{
															"nativeSrc": "6560:91:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6560:91:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6645:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6645:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "6574:70:15",
																	"nodeType": "YulIdentifier",
																	"src": "6574:70:15"
																},
																"nativeSrc": "6574:77:15",
																"nodeType": "YulFunctionCall",
																"src": "6574:77:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6564:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6564:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6660:116:15",
															"nodeType": "YulAssignment",
															"src": "6660:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6764:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6764:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6769:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6769:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6667:96:15",
																	"nodeType": "YulIdentifier",
																	"src": "6667:96:15"
																},
																"nativeSrc": "6667:109:15",
																"nodeType": "YulFunctionCall",
																"src": "6667:109:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6660:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:15"
																}
															]
														},
														{
															"nativeSrc": "6785:94:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6785:94:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6873:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6873:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "6800:72:15",
																	"nodeType": "YulIdentifier",
																	"src": "6800:72:15"
																},
																"nativeSrc": "6800:79:15",
																"nodeType": "YulFunctionCall",
																"src": "6800:79:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6789:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6789:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6888:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6888:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6902:7:15",
																"nodeType": "YulIdentifier",
																"src": "6902:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6892:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6892:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6978:293:15",
																"nodeType": "YulBlock",
																"src": "6978:293:15",
																"statements": [
																	{
																		"nativeSrc": "6992:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6992:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7019:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7019:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7013:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7013:5:15"
																			},
																			"nativeSrc": "7013:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7013:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6996:13:15",
																				"nodeType": "YulTypedName",
																				"src": "6996:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7039:116:15",
																		"nodeType": "YulAssignment",
																		"src": "7039:116:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7136:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "7136:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7151:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7151:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr",
																				"nativeSrc": "7046:89:15",
																				"nodeType": "YulIdentifier",
																				"src": "7046:89:15"
																			},
																			"nativeSrc": "7046:109:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7046:109:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7039:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7039:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7168:93:15",
																		"nodeType": "YulAssignment",
																		"src": "7168:93:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7254:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7254:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "7178:75:15",
																				"nodeType": "YulIdentifier",
																				"src": "7178:75:15"
																			},
																			"nativeSrc": "7178:83:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7178:83:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7168:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7168:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6940:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6940:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6943:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6943:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6937:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6937:2:15"
																},
																"nativeSrc": "6937:13:15",
																"nodeType": "YulFunctionCall",
																"src": "6937:13:15"
															},
															"nativeSrc": "6918:353:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6951:18:15",
																"nodeType": "YulBlock",
																"src": "6951:18:15",
																"statements": [
																	{
																		"nativeSrc": "6953:14:15",
																		"nodeType": "YulAssignment",
																		"src": "6953:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6962:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "6962:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6965:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6965:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6958:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6958:3:15"
																			},
																			"nativeSrc": "6958:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6958:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6953:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "6953:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6922:14:15",
																"nodeType": "YulBlock",
																"src": "6922:14:15",
																"statements": [
																	{
																		"nativeSrc": "6924:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6924:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6933:1:15",
																			"nodeType": "YulLiteral",
																			"src": "6933:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6928:1:15",
																				"nodeType": "YulTypedName",
																				"src": "6928:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6918:353:15"
														},
														{
															"nativeSrc": "7280:10:15",
															"nodeType": "YulAssignment",
															"src": "7280:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "7287:3:15",
																"nodeType": "YulIdentifier",
																"src": "7287:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7280:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6380:916:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6529:5:15",
														"nodeType": "YulTypedName",
														"src": "6529:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6536:3:15",
														"nodeType": "YulTypedName",
														"src": "6536:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6545:3:15",
														"nodeType": "YulTypedName",
														"src": "6545:3:15",
														"type": ""
													}
												],
												"src": "6380:916:15"
											},
											{
												"body": {
													"nativeSrc": "7496:271:15",
													"nodeType": "YulBlock",
													"src": "7496:271:15",
													"statements": [
														{
															"nativeSrc": "7506:26:15",
															"nodeType": "YulAssignment",
															"src": "7506:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7518:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7518:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7529:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7529:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7514:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7514:3:15"
																},
																"nativeSrc": "7514:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7514:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7506:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7506:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7553:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7553:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7564:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7564:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7549:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:15"
																		},
																		"nativeSrc": "7549:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7549:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7572:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7572:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7578:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7578:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7568:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:15"
																		},
																		"nativeSrc": "7568:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7542:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7542:6:15"
																},
																"nativeSrc": "7542:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7542:47:15"
															},
															"nativeSrc": "7542:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7542:47:15"
														},
														{
															"nativeSrc": "7598:162:15",
															"nodeType": "YulAssignment",
															"src": "7598:162:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7746:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7746:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7755:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7755:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7606:139:15",
																	"nodeType": "YulIdentifier",
																	"src": "7606:139:15"
																},
																"nativeSrc": "7606:154:15",
																"nodeType": "YulFunctionCall",
																"src": "7606:154:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7598:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7598:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7302:465:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7468:9:15",
														"nodeType": "YulTypedName",
														"src": "7468:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7480:6:15",
														"nodeType": "YulTypedName",
														"src": "7480:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7491:4:15",
														"nodeType": "YulTypedName",
														"src": "7491:4:15",
														"type": ""
													}
												],
												"src": "7302:465:15"
											},
											{
												"body": {
													"nativeSrc": "7805:28:15",
													"nodeType": "YulBlock",
													"src": "7805:28:15",
													"statements": [
														{
															"nativeSrc": "7815:12:15",
															"nodeType": "YulAssignment",
															"src": "7815:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "7822:5:15",
																"nodeType": "YulIdentifier",
																"src": "7822:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7815:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7815:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7773:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7791:5:15",
														"nodeType": "YulTypedName",
														"src": "7791:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7801:3:15",
														"nodeType": "YulTypedName",
														"src": "7801:3:15",
														"type": ""
													}
												],
												"src": "7773:60:15"
											},
											{
												"body": {
													"nativeSrc": "7899:82:15",
													"nodeType": "YulBlock",
													"src": "7899:82:15",
													"statements": [
														{
															"nativeSrc": "7909:66:15",
															"nodeType": "YulAssignment",
															"src": "7909:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7967:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7967:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7949:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "7949:17:15"
																				},
																				"nativeSrc": "7949:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7949:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7940:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "7940:8:15"
																		},
																		"nativeSrc": "7940:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7940:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7922:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "7922:17:15"
																},
																"nativeSrc": "7922:53:15",
																"nodeType": "YulFunctionCall",
																"src": "7922:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7909:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "7909:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7839:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7879:5:15",
														"nodeType": "YulTypedName",
														"src": "7879:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7889:9:15",
														"nodeType": "YulTypedName",
														"src": "7889:9:15",
														"type": ""
													}
												],
												"src": "7839:142:15"
											},
											{
												"body": {
													"nativeSrc": "8047:66:15",
													"nodeType": "YulBlock",
													"src": "8047:66:15",
													"statements": [
														{
															"nativeSrc": "8057:50:15",
															"nodeType": "YulAssignment",
															"src": "8057:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8101:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8101:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8070:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "8070:30:15"
																},
																"nativeSrc": "8070:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8070:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8057:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "8057:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7987:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8027:5:15",
														"nodeType": "YulTypedName",
														"src": "8027:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8037:9:15",
														"nodeType": "YulTypedName",
														"src": "8037:9:15",
														"type": ""
													}
												],
												"src": "7987:126:15"
											},
											{
												"body": {
													"nativeSrc": "8193:66:15",
													"nodeType": "YulBlock",
													"src": "8193:66:15",
													"statements": [
														{
															"nativeSrc": "8203:50:15",
															"nodeType": "YulAssignment",
															"src": "8203:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8247:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8247:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8216:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "8216:30:15"
																},
																"nativeSrc": "8216:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8216:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8203:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "8203:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "8119:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8173:5:15",
														"nodeType": "YulTypedName",
														"src": "8173:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8183:9:15",
														"nodeType": "YulTypedName",
														"src": "8183:9:15",
														"type": ""
													}
												],
												"src": "8119:140:15"
											},
											{
												"body": {
													"nativeSrc": "8344:80:15",
													"nodeType": "YulBlock",
													"src": "8344:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8361:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8361:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8411:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8411:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "8366:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "8366:44:15"
																		},
																		"nativeSrc": "8366:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8366:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8354:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8354:6:15"
																},
																"nativeSrc": "8354:64:15",
																"nodeType": "YulFunctionCall",
																"src": "8354:64:15"
															},
															"nativeSrc": "8354:64:15",
															"nodeType": "YulExpressionStatement",
															"src": "8354:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "8265:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8332:5:15",
														"nodeType": "YulTypedName",
														"src": "8332:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8339:3:15",
														"nodeType": "YulTypedName",
														"src": "8339:3:15",
														"type": ""
													}
												],
												"src": "8265:159:15"
											},
											{
												"body": {
													"nativeSrc": "8542:138:15",
													"nodeType": "YulBlock",
													"src": "8542:138:15",
													"statements": [
														{
															"nativeSrc": "8552:26:15",
															"nodeType": "YulAssignment",
															"src": "8552:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8564:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8564:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8575:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8575:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8560:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8560:3:15"
																},
																"nativeSrc": "8560:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8560:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8552:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8552:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8646:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8646:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8659:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8659:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8670:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8670:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8655:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:15"
																		},
																		"nativeSrc": "8655:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8655:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "8588:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "8588:57:15"
																},
																"nativeSrc": "8588:85:15",
																"nodeType": "YulFunctionCall",
																"src": "8588:85:15"
															},
															"nativeSrc": "8588:85:15",
															"nodeType": "YulExpressionStatement",
															"src": "8588:85:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "8430:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8514:9:15",
														"nodeType": "YulTypedName",
														"src": "8514:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8526:6:15",
														"nodeType": "YulTypedName",
														"src": "8526:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8537:4:15",
														"nodeType": "YulTypedName",
														"src": "8537:4:15",
														"type": ""
													}
												],
												"src": "8430:250:15"
											},
											{
												"body": {
													"nativeSrc": "8751:53:15",
													"nodeType": "YulBlock",
													"src": "8751:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8768:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8768:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8791:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8791:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8773:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "8773:17:15"
																		},
																		"nativeSrc": "8773:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8773:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8761:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8761:6:15"
																},
																"nativeSrc": "8761:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8761:37:15"
															},
															"nativeSrc": "8761:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "8761:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8686:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8739:5:15",
														"nodeType": "YulTypedName",
														"src": "8739:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8746:3:15",
														"nodeType": "YulTypedName",
														"src": "8746:3:15",
														"type": ""
													}
												],
												"src": "8686:118:15"
											},
											{
												"body": {
													"nativeSrc": "8908:124:15",
													"nodeType": "YulBlock",
													"src": "8908:124:15",
													"statements": [
														{
															"nativeSrc": "8918:26:15",
															"nodeType": "YulAssignment",
															"src": "8918:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8930:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8930:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8941:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8941:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8926:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8926:3:15"
																},
																"nativeSrc": "8926:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8926:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8918:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8918:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8998:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8998:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9011:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9011:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9022:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9022:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9007:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9007:3:15"
																		},
																		"nativeSrc": "9007:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9007:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8954:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "8954:43:15"
																},
																"nativeSrc": "8954:71:15",
																"nodeType": "YulFunctionCall",
																"src": "8954:71:15"
															},
															"nativeSrc": "8954:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "8954:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8810:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8880:9:15",
														"nodeType": "YulTypedName",
														"src": "8880:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8892:6:15",
														"nodeType": "YulTypedName",
														"src": "8892:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8903:4:15",
														"nodeType": "YulTypedName",
														"src": "8903:4:15",
														"type": ""
													}
												],
												"src": "8810:222:15"
											},
											{
												"body": {
													"nativeSrc": "9103:53:15",
													"nodeType": "YulBlock",
													"src": "9103:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9120:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9120:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9143:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9143:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9125:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "9125:17:15"
																		},
																		"nativeSrc": "9125:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9125:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9113:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:15"
																},
																"nativeSrc": "9113:37:15",
																"nodeType": "YulFunctionCall",
																"src": "9113:37:15"
															},
															"nativeSrc": "9113:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "9113:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9038:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9091:5:15",
														"nodeType": "YulTypedName",
														"src": "9091:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9098:3:15",
														"nodeType": "YulTypedName",
														"src": "9098:3:15",
														"type": ""
													}
												],
												"src": "9038:118:15"
											},
											{
												"body": {
													"nativeSrc": "9316:288:15",
													"nodeType": "YulBlock",
													"src": "9316:288:15",
													"statements": [
														{
															"nativeSrc": "9326:26:15",
															"nodeType": "YulAssignment",
															"src": "9326:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9338:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9338:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9349:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9349:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9334:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:15"
																},
																"nativeSrc": "9334:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9334:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9326:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9326:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9406:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9406:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9419:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9419:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9430:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9430:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9415:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9415:3:15"
																		},
																		"nativeSrc": "9415:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9415:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9362:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9362:43:15"
																},
																"nativeSrc": "9362:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9362:71:15"
															},
															"nativeSrc": "9362:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9362:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9487:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9487:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9500:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9500:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9511:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9511:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9496:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:15"
																		},
																		"nativeSrc": "9496:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9496:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9443:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9443:43:15"
																},
																"nativeSrc": "9443:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9443:72:15"
															},
															"nativeSrc": "9443:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9443:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9569:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9569:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9582:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9582:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9593:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9593:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9578:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9578:3:15"
																		},
																		"nativeSrc": "9578:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9578:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9525:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9525:43:15"
																},
																"nativeSrc": "9525:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9525:72:15"
															},
															"nativeSrc": "9525:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9525:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9162:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9272:9:15",
														"nodeType": "YulTypedName",
														"src": "9272:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9284:6:15",
														"nodeType": "YulTypedName",
														"src": "9284:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9292:6:15",
														"nodeType": "YulTypedName",
														"src": "9292:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9300:6:15",
														"nodeType": "YulTypedName",
														"src": "9300:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9311:4:15",
														"nodeType": "YulTypedName",
														"src": "9311:4:15",
														"type": ""
													}
												],
												"src": "9162:442:15"
											},
											{
												"body": {
													"nativeSrc": "9699:28:15",
													"nodeType": "YulBlock",
													"src": "9699:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9716:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9716:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9719:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9709:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9709:6:15"
																},
																"nativeSrc": "9709:12:15",
																"nodeType": "YulFunctionCall",
																"src": "9709:12:15"
															},
															"nativeSrc": "9709:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "9709:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "9610:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "9610:117:15"
											},
											{
												"body": {
													"nativeSrc": "9781:54:15",
													"nodeType": "YulBlock",
													"src": "9781:54:15",
													"statements": [
														{
															"nativeSrc": "9791:38:15",
															"nodeType": "YulAssignment",
															"src": "9791:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9809:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9809:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9816:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9816:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9805:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:15"
																		},
																		"nativeSrc": "9805:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9805:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9825:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9825:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9821:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9821:3:15"
																		},
																		"nativeSrc": "9821:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9821:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9801:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9801:3:15"
																},
																"nativeSrc": "9801:28:15",
																"nodeType": "YulFunctionCall",
																"src": "9801:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9791:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "9733:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9764:5:15",
														"nodeType": "YulTypedName",
														"src": "9764:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9774:6:15",
														"nodeType": "YulTypedName",
														"src": "9774:6:15",
														"type": ""
													}
												],
												"src": "9733:102:15"
											},
											{
												"body": {
													"nativeSrc": "9869:152:15",
													"nodeType": "YulBlock",
													"src": "9869:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9886:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9886:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9889:77:15",
																		"nodeType": "YulLiteral",
																		"src": "9889:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9879:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9879:6:15"
																},
																"nativeSrc": "9879:88:15",
																"nodeType": "YulFunctionCall",
																"src": "9879:88:15"
															},
															"nativeSrc": "9879:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "9879:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9983:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9983:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9986:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9986:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9976:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:15"
																},
																"nativeSrc": "9976:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9976:15:15"
															},
															"nativeSrc": "9976:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9976:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10007:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10007:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10010:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10010:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10000:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10000:6:15"
																},
																"nativeSrc": "10000:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10000:15:15"
															},
															"nativeSrc": "10000:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10000:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9841:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "9841:180:15"
											},
											{
												"body": {
													"nativeSrc": "10070:238:15",
													"nodeType": "YulBlock",
													"src": "10070:238:15",
													"statements": [
														{
															"nativeSrc": "10080:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10080:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10102:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10102:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "10132:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10132:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10110:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "10110:21:15"
																		},
																		"nativeSrc": "10110:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10110:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10098:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10098:3:15"
																},
																"nativeSrc": "10098:40:15",
																"nodeType": "YulFunctionCall",
																"src": "10098:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "10084:10:15",
																	"nodeType": "YulTypedName",
																	"src": "10084:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10249:22:15",
																"nodeType": "YulBlock",
																"src": "10249:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10251:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10251:16:15"
																			},
																			"nativeSrc": "10251:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10251:18:15"
																		},
																		"nativeSrc": "10251:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10251:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10192:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "10192:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10204:18:15",
																				"nodeType": "YulLiteral",
																				"src": "10204:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10189:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10189:2:15"
																		},
																		"nativeSrc": "10189:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10189:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10228:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "10228:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "10240:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10240:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10225:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10225:2:15"
																		},
																		"nativeSrc": "10225:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10225:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10186:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10186:2:15"
																},
																"nativeSrc": "10186:62:15",
																"nodeType": "YulFunctionCall",
																"src": "10186:62:15"
															},
															"nativeSrc": "10183:88:15",
															"nodeType": "YulIf",
															"src": "10183:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10287:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10287:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10291:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "10291:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10280:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:15"
																},
																"nativeSrc": "10280:22:15",
																"nodeType": "YulFunctionCall",
																"src": "10280:22:15"
															},
															"nativeSrc": "10280:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "10280:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "10027:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10056:6:15",
														"nodeType": "YulTypedName",
														"src": "10056:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "10064:4:15",
														"nodeType": "YulTypedName",
														"src": "10064:4:15",
														"type": ""
													}
												],
												"src": "10027:281:15"
											},
											{
												"body": {
													"nativeSrc": "10355:88:15",
													"nodeType": "YulBlock",
													"src": "10355:88:15",
													"statements": [
														{
															"nativeSrc": "10365:30:15",
															"nodeType": "YulAssignment",
															"src": "10365:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "10375:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "10375:18:15"
																},
																"nativeSrc": "10375:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10375:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10365:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10365:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10424:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10424:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "10432:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10432:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "10404:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "10404:19:15"
																},
																"nativeSrc": "10404:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10404:33:15"
															},
															"nativeSrc": "10404:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "10404:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "10314:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "10339:4:15",
														"nodeType": "YulTypedName",
														"src": "10339:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "10348:6:15",
														"nodeType": "YulTypedName",
														"src": "10348:6:15",
														"type": ""
													}
												],
												"src": "10314:129:15"
											},
											{
												"body": {
													"nativeSrc": "10515:241:15",
													"nodeType": "YulBlock",
													"src": "10515:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10620:22:15",
																"nodeType": "YulBlock",
																"src": "10620:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10622:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10622:16:15"
																			},
																			"nativeSrc": "10622:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10622:18:15"
																		},
																		"nativeSrc": "10622:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10622:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10592:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10592:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10600:18:15",
																		"nodeType": "YulLiteral",
																		"src": "10600:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10589:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10589:2:15"
																},
																"nativeSrc": "10589:30:15",
																"nodeType": "YulFunctionCall",
																"src": "10589:30:15"
															},
															"nativeSrc": "10586:56:15",
															"nodeType": "YulIf",
															"src": "10586:56:15"
														},
														{
															"nativeSrc": "10652:37:15",
															"nodeType": "YulAssignment",
															"src": "10652:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10682:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10682:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10660:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "10660:21:15"
																},
																"nativeSrc": "10660:29:15",
																"nodeType": "YulFunctionCall",
																"src": "10660:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10652:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10652:4:15"
																}
															]
														},
														{
															"nativeSrc": "10726:23:15",
															"nodeType": "YulAssignment",
															"src": "10726:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10738:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10738:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10744:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10744:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10734:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:15"
																},
																"nativeSrc": "10734:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10734:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10726:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10726:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10449:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10499:6:15",
														"nodeType": "YulTypedName",
														"src": "10499:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10510:4:15",
														"nodeType": "YulTypedName",
														"src": "10510:4:15",
														"type": ""
													}
												],
												"src": "10449:307:15"
											},
											{
												"body": {
													"nativeSrc": "10826:84:15",
													"nodeType": "YulBlock",
													"src": "10826:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10850:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10850:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10855:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10855:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10860:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10860:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10837:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "10837:12:15"
																},
																"nativeSrc": "10837:30:15",
																"nodeType": "YulFunctionCall",
																"src": "10837:30:15"
															},
															"nativeSrc": "10837:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "10837:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10887:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10887:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10892:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10892:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10883:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10883:3:15"
																		},
																		"nativeSrc": "10883:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10883:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10901:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10876:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10876:6:15"
																},
																"nativeSrc": "10876:27:15",
																"nodeType": "YulFunctionCall",
																"src": "10876:27:15"
															},
															"nativeSrc": "10876:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "10876:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10762:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10808:3:15",
														"nodeType": "YulTypedName",
														"src": "10808:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10813:3:15",
														"nodeType": "YulTypedName",
														"src": "10813:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10818:6:15",
														"nodeType": "YulTypedName",
														"src": "10818:6:15",
														"type": ""
													}
												],
												"src": "10762:148:15"
											},
											{
												"body": {
													"nativeSrc": "10999:340:15",
													"nodeType": "YulBlock",
													"src": "10999:340:15",
													"statements": [
														{
															"nativeSrc": "11009:74:15",
															"nodeType": "YulAssignment",
															"src": "11009:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11075:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11075:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "11034:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "11034:40:15"
																		},
																		"nativeSrc": "11034:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11034:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11018:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "11018:15:15"
																},
																"nativeSrc": "11018:65:15",
																"nodeType": "YulFunctionCall",
																"src": "11018:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11009:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11009:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11099:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11099:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11106:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11106:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11092:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11092:6:15"
																},
																"nativeSrc": "11092:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11092:21:15"
															},
															"nativeSrc": "11092:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11092:21:15"
														},
														{
															"nativeSrc": "11122:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11122:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11137:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11137:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11144:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11144:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11133:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11133:3:15"
																},
																"nativeSrc": "11133:16:15",
																"nodeType": "YulFunctionCall",
																"src": "11133:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11126:3:15",
																	"nodeType": "YulTypedName",
																	"src": "11126:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11187:83:15",
																"nodeType": "YulBlock",
																"src": "11187:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11189:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11189:77:15"
																			},
																			"nativeSrc": "11189:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11189:79:15"
																		},
																		"nativeSrc": "11189:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11189:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11168:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11168:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11173:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11173:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11164:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:15"
																		},
																		"nativeSrc": "11164:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11164:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11182:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11182:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11161:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11161:2:15"
																},
																"nativeSrc": "11161:25:15",
																"nodeType": "YulFunctionCall",
																"src": "11161:25:15"
															},
															"nativeSrc": "11158:112:15",
															"nodeType": "YulIf",
															"src": "11158:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11316:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11316:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11321:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11321:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11326:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11326:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11279:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "11279:36:15"
																},
																"nativeSrc": "11279:54:15",
																"nodeType": "YulFunctionCall",
																"src": "11279:54:15"
															},
															"nativeSrc": "11279:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "11279:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10916:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10972:3:15",
														"nodeType": "YulTypedName",
														"src": "10972:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10977:6:15",
														"nodeType": "YulTypedName",
														"src": "10977:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10985:3:15",
														"nodeType": "YulTypedName",
														"src": "10985:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10993:5:15",
														"nodeType": "YulTypedName",
														"src": "10993:5:15",
														"type": ""
													}
												],
												"src": "10916:423:15"
											},
											{
												"body": {
													"nativeSrc": "11419:277:15",
													"nodeType": "YulBlock",
													"src": "11419:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11468:83:15",
																"nodeType": "YulBlock",
																"src": "11468:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11470:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11470:77:15"
																			},
																			"nativeSrc": "11470:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11470:79:15"
																		},
																		"nativeSrc": "11470:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11470:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11447:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11447:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11455:4:15",
																						"nodeType": "YulLiteral",
																						"src": "11455:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11443:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11443:3:15"
																				},
																				"nativeSrc": "11443:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11443:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11462:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11462:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11439:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11439:3:15"
																		},
																		"nativeSrc": "11439:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11439:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11432:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11432:6:15"
																},
																"nativeSrc": "11432:35:15",
																"nodeType": "YulFunctionCall",
																"src": "11432:35:15"
															},
															"nativeSrc": "11429:122:15",
															"nodeType": "YulIf",
															"src": "11429:122:15"
														},
														{
															"nativeSrc": "11560:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11560:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11587:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11587:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11574:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "11574:12:15"
																},
																"nativeSrc": "11574:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11574:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11564:6:15",
																	"nodeType": "YulTypedName",
																	"src": "11564:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11603:87:15",
															"nodeType": "YulAssignment",
															"src": "11603:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11663:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11663:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11671:4:15",
																				"nodeType": "YulLiteral",
																				"src": "11671:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11659:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11659:3:15"
																		},
																		"nativeSrc": "11659:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11659:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11678:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11678:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11686:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11686:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11612:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "11612:46:15"
																},
																"nativeSrc": "11612:78:15",
																"nodeType": "YulFunctionCall",
																"src": "11612:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11603:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11603:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11358:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11397:6:15",
														"nodeType": "YulTypedName",
														"src": "11397:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11405:3:15",
														"nodeType": "YulTypedName",
														"src": "11405:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11413:5:15",
														"nodeType": "YulTypedName",
														"src": "11413:5:15",
														"type": ""
													}
												],
												"src": "11358:338:15"
											},
											{
												"body": {
													"nativeSrc": "11794:560:15",
													"nodeType": "YulBlock",
													"src": "11794:560:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11840:83:15",
																"nodeType": "YulBlock",
																"src": "11840:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11842:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11842:77:15"
																			},
																			"nativeSrc": "11842:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11842:79:15"
																		},
																		"nativeSrc": "11842:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11842:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11815:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11815:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11824:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11824:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11811:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11811:3:15"
																		},
																		"nativeSrc": "11811:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11811:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11836:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11836:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11807:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11807:3:15"
																},
																"nativeSrc": "11807:32:15",
																"nodeType": "YulFunctionCall",
																"src": "11807:32:15"
															},
															"nativeSrc": "11804:119:15",
															"nodeType": "YulIf",
															"src": "11804:119:15"
														},
														{
															"nativeSrc": "11933:286:15",
															"nodeType": "YulBlock",
															"src": "11933:286:15",
															"statements": [
																{
																	"nativeSrc": "11948:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11948:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11979:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11979:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11990:1:15",
																						"nodeType": "YulLiteral",
																						"src": "11990:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11975:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11975:3:15"
																				},
																				"nativeSrc": "11975:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11975:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11962:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "11962:12:15"
																		},
																		"nativeSrc": "11962:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11962:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11952:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11952:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12040:83:15",
																		"nodeType": "YulBlock",
																		"src": "12040:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12042:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12042:77:15"
																					},
																					"nativeSrc": "12042:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12042:79:15"
																				},
																				"nativeSrc": "12042:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12042:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12012:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12012:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12020:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12020:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12009:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12009:2:15"
																		},
																		"nativeSrc": "12009:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12009:30:15"
																	},
																	"nativeSrc": "12006:117:15",
																	"nodeType": "YulIf",
																	"src": "12006:117:15"
																},
																{
																	"nativeSrc": "12137:72:15",
																	"nodeType": "YulAssignment",
																	"src": "12137:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12181:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12181:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12192:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12192:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12177:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12177:3:15"
																				},
																				"nativeSrc": "12177:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12177:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12201:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12201:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12147:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "12147:29:15"
																		},
																		"nativeSrc": "12147:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12147:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12137:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12137:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12229:118:15",
															"nodeType": "YulBlock",
															"src": "12229:118:15",
															"statements": [
																{
																	"nativeSrc": "12244:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12244:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12258:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12258:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12248:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12248:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12274:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12274:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12309:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12309:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12320:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12320:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12305:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12305:3:15"
																				},
																				"nativeSrc": "12305:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12305:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12329:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12329:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12284:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12284:20:15"
																		},
																		"nativeSrc": "12284:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12284:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12274:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12274:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_uint256",
												"nativeSrc": "11702:652:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11756:9:15",
														"nodeType": "YulTypedName",
														"src": "11756:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11767:7:15",
														"nodeType": "YulTypedName",
														"src": "11767:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11779:6:15",
														"nodeType": "YulTypedName",
														"src": "11779:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11787:6:15",
														"nodeType": "YulTypedName",
														"src": "11787:6:15",
														"type": ""
													}
												],
												"src": "11702:652:15"
											},
											{
												"body": {
													"nativeSrc": "12436:66:15",
													"nodeType": "YulBlock",
													"src": "12436:66:15",
													"statements": [
														{
															"nativeSrc": "12446:50:15",
															"nodeType": "YulAssignment",
															"src": "12446:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12490:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12490:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "12459:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "12459:30:15"
																},
																"nativeSrc": "12459:37:15",
																"nodeType": "YulFunctionCall",
																"src": "12459:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12446:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "12446:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1881_to_t_address",
												"nativeSrc": "12360:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12416:5:15",
														"nodeType": "YulTypedName",
														"src": "12416:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12426:9:15",
														"nodeType": "YulTypedName",
														"src": "12426:9:15",
														"type": ""
													}
												],
												"src": "12360:142:15"
											},
											{
												"body": {
													"nativeSrc": "12589:82:15",
													"nodeType": "YulBlock",
													"src": "12589:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12606:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12606:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12658:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "12658:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1881_to_t_address",
																			"nativeSrc": "12611:46:15",
																			"nodeType": "YulIdentifier",
																			"src": "12611:46:15"
																		},
																		"nativeSrc": "12611:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12611:53:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12599:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12599:6:15"
																},
																"nativeSrc": "12599:66:15",
																"nodeType": "YulFunctionCall",
																"src": "12599:66:15"
															},
															"nativeSrc": "12599:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "12599:66:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1881_to_t_address_fromStack",
												"nativeSrc": "12508:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12577:5:15",
														"nodeType": "YulTypedName",
														"src": "12577:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12584:3:15",
														"nodeType": "YulTypedName",
														"src": "12584:3:15",
														"type": ""
													}
												],
												"src": "12508:163:15"
											},
											{
												"body": {
													"nativeSrc": "12791:140:15",
													"nodeType": "YulBlock",
													"src": "12791:140:15",
													"statements": [
														{
															"nativeSrc": "12801:26:15",
															"nodeType": "YulAssignment",
															"src": "12801:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12813:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12813:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12824:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12824:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12809:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12809:3:15"
																},
																"nativeSrc": "12809:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12809:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12801:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12801:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12897:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12897:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12910:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12910:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12921:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12921:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12906:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12906:3:15"
																		},
																		"nativeSrc": "12906:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12906:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1881_to_t_address_fromStack",
																	"nativeSrc": "12837:59:15",
																	"nodeType": "YulIdentifier",
																	"src": "12837:59:15"
																},
																"nativeSrc": "12837:87:15",
																"nodeType": "YulFunctionCall",
																"src": "12837:87:15"
															},
															"nativeSrc": "12837:87:15",
															"nodeType": "YulExpressionStatement",
															"src": "12837:87:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1881__to_t_address__fromStack_reversed",
												"nativeSrc": "12677:254:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12763:9:15",
														"nodeType": "YulTypedName",
														"src": "12763:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12775:6:15",
														"nodeType": "YulTypedName",
														"src": "12775:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12786:4:15",
														"nodeType": "YulTypedName",
														"src": "12786:4:15",
														"type": ""
													}
												],
												"src": "12677:254:15"
											},
											{
												"body": {
													"nativeSrc": "12979:48:15",
													"nodeType": "YulBlock",
													"src": "12979:48:15",
													"statements": [
														{
															"nativeSrc": "12989:32:15",
															"nodeType": "YulAssignment",
															"src": "12989:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13014:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "13014:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "13007:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13007:6:15"
																		},
																		"nativeSrc": "13007:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13007:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13000:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13000:6:15"
																},
																"nativeSrc": "13000:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13000:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12989:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "12989:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "12937:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12961:5:15",
														"nodeType": "YulTypedName",
														"src": "12961:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12971:7:15",
														"nodeType": "YulTypedName",
														"src": "12971:7:15",
														"type": ""
													}
												],
												"src": "12937:90:15"
											},
											{
												"body": {
													"nativeSrc": "13092:50:15",
													"nodeType": "YulBlock",
													"src": "13092:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13109:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13109:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13129:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "13129:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "13114:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "13114:14:15"
																		},
																		"nativeSrc": "13114:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13114:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13102:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13102:6:15"
																},
																"nativeSrc": "13102:34:15",
																"nodeType": "YulFunctionCall",
																"src": "13102:34:15"
															},
															"nativeSrc": "13102:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "13102:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "13033:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13080:5:15",
														"nodeType": "YulTypedName",
														"src": "13080:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13087:3:15",
														"nodeType": "YulTypedName",
														"src": "13087:3:15",
														"type": ""
													}
												],
												"src": "13033:109:15"
											},
											{
												"body": {
													"nativeSrc": "13240:118:15",
													"nodeType": "YulBlock",
													"src": "13240:118:15",
													"statements": [
														{
															"nativeSrc": "13250:26:15",
															"nodeType": "YulAssignment",
															"src": "13250:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13262:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13262:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13273:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13273:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13258:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13258:3:15"
																},
																"nativeSrc": "13258:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13258:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13250:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13250:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13324:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13324:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13337:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13337:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13348:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13348:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13333:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13333:3:15"
																		},
																		"nativeSrc": "13333:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13333:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "13286:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "13286:37:15"
																},
																"nativeSrc": "13286:65:15",
																"nodeType": "YulFunctionCall",
																"src": "13286:65:15"
															},
															"nativeSrc": "13286:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "13286:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "13148:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13212:9:15",
														"nodeType": "YulTypedName",
														"src": "13212:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13224:6:15",
														"nodeType": "YulTypedName",
														"src": "13224:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13235:4:15",
														"nodeType": "YulTypedName",
														"src": "13235:4:15",
														"type": ""
													}
												],
												"src": "13148:210:15"
											},
											{
												"body": {
													"nativeSrc": "13460:73:15",
													"nodeType": "YulBlock",
													"src": "13460:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13477:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13482:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13482:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13470:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13470:6:15"
																},
																"nativeSrc": "13470:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13470:19:15"
															},
															"nativeSrc": "13470:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "13470:19:15"
														},
														{
															"nativeSrc": "13498:29:15",
															"nodeType": "YulAssignment",
															"src": "13498:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13517:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13522:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13522:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13513:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:15"
																},
																"nativeSrc": "13513:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13513:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13498:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "13498:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "13364:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13432:3:15",
														"nodeType": "YulTypedName",
														"src": "13432:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13437:6:15",
														"nodeType": "YulTypedName",
														"src": "13437:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13448:11:15",
														"nodeType": "YulTypedName",
														"src": "13448:11:15",
														"type": ""
													}
												],
												"src": "13364:169:15"
											},
											{
												"body": {
													"nativeSrc": "13645:72:15",
													"nodeType": "YulBlock",
													"src": "13645:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13667:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13667:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13675:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13675:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13663:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13663:3:15"
																		},
																		"nativeSrc": "13663:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13663:14:15"
																	},
																	{
																		"hexValue": "7072696365206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "13679:30:15",
																		"nodeType": "YulLiteral",
																		"src": "13679:30:15",
																		"type": "",
																		"value": "price must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13656:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:15"
																},
																"nativeSrc": "13656:54:15",
																"nodeType": "YulFunctionCall",
																"src": "13656:54:15"
															},
															"nativeSrc": "13656:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "13656:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b",
												"nativeSrc": "13539:178:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13637:6:15",
														"nodeType": "YulTypedName",
														"src": "13637:6:15",
														"type": ""
													}
												],
												"src": "13539:178:15"
											},
											{
												"body": {
													"nativeSrc": "13869:220:15",
													"nodeType": "YulBlock",
													"src": "13869:220:15",
													"statements": [
														{
															"nativeSrc": "13879:74:15",
															"nodeType": "YulAssignment",
															"src": "13879:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13945:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13945:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13950:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13950:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13886:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "13886:58:15"
																},
																"nativeSrc": "13886:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13886:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13879:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13879:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14051:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14051:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b",
																	"nativeSrc": "13962:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "13962:88:15"
																},
																"nativeSrc": "13962:93:15",
																"nodeType": "YulFunctionCall",
																"src": "13962:93:15"
															},
															"nativeSrc": "13962:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "13962:93:15"
														},
														{
															"nativeSrc": "14064:19:15",
															"nodeType": "YulAssignment",
															"src": "14064:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14075:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14075:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14080:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14080:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14071:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14071:3:15"
																},
																"nativeSrc": "14071:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14071:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14064:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14064:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13723:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13857:3:15",
														"nodeType": "YulTypedName",
														"src": "13857:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13865:3:15",
														"nodeType": "YulTypedName",
														"src": "13865:3:15",
														"type": ""
													}
												],
												"src": "13723:366:15"
											},
											{
												"body": {
													"nativeSrc": "14266:248:15",
													"nodeType": "YulBlock",
													"src": "14266:248:15",
													"statements": [
														{
															"nativeSrc": "14276:26:15",
															"nodeType": "YulAssignment",
															"src": "14276:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14288:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14288:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14299:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14299:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14284:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14284:3:15"
																},
																"nativeSrc": "14284:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14284:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14276:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14276:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14323:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14323:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14334:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14334:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14319:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14319:3:15"
																		},
																		"nativeSrc": "14319:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14319:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14342:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14342:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14348:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14348:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14338:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14338:3:15"
																		},
																		"nativeSrc": "14338:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14338:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14312:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14312:6:15"
																},
																"nativeSrc": "14312:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14312:47:15"
															},
															"nativeSrc": "14312:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14312:47:15"
														},
														{
															"nativeSrc": "14368:139:15",
															"nodeType": "YulAssignment",
															"src": "14368:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14502:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14502:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14376:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14376:124:15"
																},
																"nativeSrc": "14376:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14376:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14368:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14368:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14095:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14246:9:15",
														"nodeType": "YulTypedName",
														"src": "14246:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14261:4:15",
														"nodeType": "YulTypedName",
														"src": "14261:4:15",
														"type": ""
													}
												],
												"src": "14095:419:15"
											},
											{
												"body": {
													"nativeSrc": "14548:152:15",
													"nodeType": "YulBlock",
													"src": "14548:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14565:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14565:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14568:77:15",
																		"nodeType": "YulLiteral",
																		"src": "14568:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14558:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14558:6:15"
																},
																"nativeSrc": "14558:88:15",
																"nodeType": "YulFunctionCall",
																"src": "14558:88:15"
															},
															"nativeSrc": "14558:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "14558:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14662:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14662:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14665:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14665:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14655:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14655:6:15"
																},
																"nativeSrc": "14655:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14655:15:15"
															},
															"nativeSrc": "14655:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "14655:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14686:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14686:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14689:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14689:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14679:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14679:6:15"
																},
																"nativeSrc": "14679:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14679:15:15"
															},
															"nativeSrc": "14679:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "14679:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14520:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "14520:180:15"
											},
											{
												"body": {
													"nativeSrc": "14751:149:15",
													"nodeType": "YulBlock",
													"src": "14751:149:15",
													"statements": [
														{
															"nativeSrc": "14761:25:15",
															"nodeType": "YulAssignment",
															"src": "14761:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14784:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14784:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14766:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "14766:17:15"
																},
																"nativeSrc": "14766:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14766:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14761:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "14761:1:15"
																}
															]
														},
														{
															"nativeSrc": "14795:25:15",
															"nodeType": "YulAssignment",
															"src": "14795:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14818:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14818:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14800:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "14800:17:15"
																},
																"nativeSrc": "14800:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14800:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14795:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "14795:1:15"
																}
															]
														},
														{
															"nativeSrc": "14829:17:15",
															"nodeType": "YulAssignment",
															"src": "14829:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14841:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14841:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14844:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14844:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14837:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14837:3:15"
																},
																"nativeSrc": "14837:9:15",
																"nodeType": "YulFunctionCall",
																"src": "14837:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14829:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14829:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14871:22:15",
																"nodeType": "YulBlock",
																"src": "14871:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14873:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "14873:16:15"
																			},
																			"nativeSrc": "14873:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14873:18:15"
																		},
																		"nativeSrc": "14873:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14873:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14862:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14862:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14868:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14868:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14859:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14859:2:15"
																},
																"nativeSrc": "14859:11:15",
																"nodeType": "YulFunctionCall",
																"src": "14859:11:15"
															},
															"nativeSrc": "14856:37:15",
															"nodeType": "YulIf",
															"src": "14856:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14706:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14737:1:15",
														"nodeType": "YulTypedName",
														"src": "14737:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14740:1:15",
														"nodeType": "YulTypedName",
														"src": "14740:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14746:4:15",
														"nodeType": "YulTypedName",
														"src": "14746:4:15",
														"type": ""
													}
												],
												"src": "14706:194:15"
											},
											{
												"body": {
													"nativeSrc": "15012:54:15",
													"nodeType": "YulBlock",
													"src": "15012:54:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15034:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15034:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15042:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15042:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15030:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15030:3:15"
																		},
																		"nativeSrc": "15030:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15030:14:15"
																	},
																	{
																		"hexValue": "6e6f742073656c6c6572",
																		"kind": "string",
																		"nativeSrc": "15046:12:15",
																		"nodeType": "YulLiteral",
																		"src": "15046:12:15",
																		"type": "",
																		"value": "not seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15023:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15023:6:15"
																},
																"nativeSrc": "15023:36:15",
																"nodeType": "YulFunctionCall",
																"src": "15023:36:15"
															},
															"nativeSrc": "15023:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "15023:36:15"
														}
													]
												},
												"name": "store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
												"nativeSrc": "14906:160:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15004:6:15",
														"nodeType": "YulTypedName",
														"src": "15004:6:15",
														"type": ""
													}
												],
												"src": "14906:160:15"
											},
											{
												"body": {
													"nativeSrc": "15218:220:15",
													"nodeType": "YulBlock",
													"src": "15218:220:15",
													"statements": [
														{
															"nativeSrc": "15228:74:15",
															"nodeType": "YulAssignment",
															"src": "15228:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15294:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15294:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15299:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15299:2:15",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15235:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "15235:58:15"
																},
																"nativeSrc": "15235:67:15",
																"nodeType": "YulFunctionCall",
																"src": "15235:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15228:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15228:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15400:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15400:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																	"nativeSrc": "15311:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15311:88:15"
																},
																"nativeSrc": "15311:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15311:93:15"
															},
															"nativeSrc": "15311:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15311:93:15"
														},
														{
															"nativeSrc": "15413:19:15",
															"nodeType": "YulAssignment",
															"src": "15413:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15424:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15424:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15429:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15429:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15420:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15420:3:15"
																},
																"nativeSrc": "15420:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15420:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15413:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15413:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15072:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15206:3:15",
														"nodeType": "YulTypedName",
														"src": "15206:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15214:3:15",
														"nodeType": "YulTypedName",
														"src": "15214:3:15",
														"type": ""
													}
												],
												"src": "15072:366:15"
											},
											{
												"body": {
													"nativeSrc": "15615:248:15",
													"nodeType": "YulBlock",
													"src": "15615:248:15",
													"statements": [
														{
															"nativeSrc": "15625:26:15",
															"nodeType": "YulAssignment",
															"src": "15625:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15637:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15637:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15648:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15648:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15633:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15633:3:15"
																},
																"nativeSrc": "15633:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15633:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15625:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15625:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15672:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15672:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15683:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15683:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15668:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15668:3:15"
																		},
																		"nativeSrc": "15668:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15668:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15691:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15691:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15697:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15697:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15687:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15687:3:15"
																		},
																		"nativeSrc": "15687:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15687:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15661:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15661:6:15"
																},
																"nativeSrc": "15661:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15661:47:15"
															},
															"nativeSrc": "15661:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15661:47:15"
														},
														{
															"nativeSrc": "15717:139:15",
															"nodeType": "YulAssignment",
															"src": "15717:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15851:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15851:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15725:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "15725:124:15"
																},
																"nativeSrc": "15725:131:15",
																"nodeType": "YulFunctionCall",
																"src": "15725:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15717:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15717:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15444:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15595:9:15",
														"nodeType": "YulTypedName",
														"src": "15595:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15610:4:15",
														"nodeType": "YulTypedName",
														"src": "15610:4:15",
														"type": ""
													}
												],
												"src": "15444:419:15"
											},
											{
												"body": {
													"nativeSrc": "15897:152:15",
													"nodeType": "YulBlock",
													"src": "15897:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15914:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15914:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15917:77:15",
																		"nodeType": "YulLiteral",
																		"src": "15917:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15907:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15907:6:15"
																},
																"nativeSrc": "15907:88:15",
																"nodeType": "YulFunctionCall",
																"src": "15907:88:15"
															},
															"nativeSrc": "15907:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "15907:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16011:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16011:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16014:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16014:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16004:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16004:6:15"
																},
																"nativeSrc": "16004:15:15",
																"nodeType": "YulFunctionCall",
																"src": "16004:15:15"
															},
															"nativeSrc": "16004:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "16004:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16035:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16035:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16038:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16038:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16028:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16028:6:15"
																},
																"nativeSrc": "16028:15:15",
																"nodeType": "YulFunctionCall",
																"src": "16028:15:15"
															},
															"nativeSrc": "16028:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "16028:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15869:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "15869:180:15"
											},
											{
												"body": {
													"nativeSrc": "16237:371:15",
													"nodeType": "YulBlock",
													"src": "16237:371:15",
													"statements": [
														{
															"nativeSrc": "16247:27:15",
															"nodeType": "YulAssignment",
															"src": "16247:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16259:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16259:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16270:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16270:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16255:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16255:3:15"
																},
																"nativeSrc": "16255:19:15",
																"nodeType": "YulFunctionCall",
																"src": "16255:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16247:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16247:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16328:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16328:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16341:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16341:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16352:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16352:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16337:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16337:3:15"
																		},
																		"nativeSrc": "16337:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16337:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16284:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16284:43:15"
																},
																"nativeSrc": "16284:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16284:71:15"
															},
															"nativeSrc": "16284:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16284:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16409:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16409:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16422:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16422:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16433:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16433:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16418:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16418:3:15"
																		},
																		"nativeSrc": "16418:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16418:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16365:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16365:43:15"
																},
																"nativeSrc": "16365:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16365:72:15"
															},
															"nativeSrc": "16365:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16365:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16491:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16491:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16504:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16504:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16515:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16500:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16500:3:15"
																		},
																		"nativeSrc": "16500:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16500:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16447:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16447:43:15"
																},
																"nativeSrc": "16447:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16447:72:15"
															},
															"nativeSrc": "16447:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16447:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16573:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16573:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16586:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16586:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16597:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16597:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16582:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16582:3:15"
																		},
																		"nativeSrc": "16582:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16582:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16529:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16529:43:15"
																},
																"nativeSrc": "16529:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16529:72:15"
															},
															"nativeSrc": "16529:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16529:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16055:553:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16185:9:15",
														"nodeType": "YulTypedName",
														"src": "16185:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16197:6:15",
														"nodeType": "YulTypedName",
														"src": "16197:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16205:6:15",
														"nodeType": "YulTypedName",
														"src": "16205:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16213:6:15",
														"nodeType": "YulTypedName",
														"src": "16213:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16221:6:15",
														"nodeType": "YulTypedName",
														"src": "16221:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16232:4:15",
														"nodeType": "YulTypedName",
														"src": "16232:4:15",
														"type": ""
													}
												],
												"src": "16055:553:15"
											},
											{
												"body": {
													"nativeSrc": "16768:288:15",
													"nodeType": "YulBlock",
													"src": "16768:288:15",
													"statements": [
														{
															"nativeSrc": "16778:26:15",
															"nodeType": "YulAssignment",
															"src": "16778:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16790:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16790:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16801:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16801:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16786:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16786:3:15"
																},
																"nativeSrc": "16786:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16786:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16778:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16778:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16858:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16858:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16871:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16871:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16882:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16882:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16867:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16867:3:15"
																		},
																		"nativeSrc": "16867:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16867:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16814:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16814:43:15"
																},
																"nativeSrc": "16814:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16814:71:15"
															},
															"nativeSrc": "16814:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16814:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16939:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16939:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16952:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16952:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16963:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16963:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16948:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16948:3:15"
																		},
																		"nativeSrc": "16948:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16948:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16895:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16895:43:15"
																},
																"nativeSrc": "16895:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16895:72:15"
															},
															"nativeSrc": "16895:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16895:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17021:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17021:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17034:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17034:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17045:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17045:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17030:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17030:3:15"
																		},
																		"nativeSrc": "17030:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17030:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16977:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16977:43:15"
																},
																"nativeSrc": "16977:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16977:72:15"
															},
															"nativeSrc": "16977:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16977:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16614:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16724:9:15",
														"nodeType": "YulTypedName",
														"src": "16724:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16736:6:15",
														"nodeType": "YulTypedName",
														"src": "16736:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16744:6:15",
														"nodeType": "YulTypedName",
														"src": "16744:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16752:6:15",
														"nodeType": "YulTypedName",
														"src": "16752:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16763:4:15",
														"nodeType": "YulTypedName",
														"src": "16763:4:15",
														"type": ""
													}
												],
												"src": "16614:442:15"
											},
											{
												"body": {
													"nativeSrc": "17188:206:15",
													"nodeType": "YulBlock",
													"src": "17188:206:15",
													"statements": [
														{
															"nativeSrc": "17198:26:15",
															"nodeType": "YulAssignment",
															"src": "17198:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17210:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17210:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17221:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17221:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17206:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17206:3:15"
																},
																"nativeSrc": "17206:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17206:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17198:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17198:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17278:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17278:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17291:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17291:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17302:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17302:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17287:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17287:3:15"
																		},
																		"nativeSrc": "17287:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17287:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17234:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17234:43:15"
																},
																"nativeSrc": "17234:71:15",
																"nodeType": "YulFunctionCall",
																"src": "17234:71:15"
															},
															"nativeSrc": "17234:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "17234:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17359:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17359:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17372:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17372:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17383:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17383:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17368:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17368:3:15"
																		},
																		"nativeSrc": "17368:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17368:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17315:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17315:43:15"
																},
																"nativeSrc": "17315:72:15",
																"nodeType": "YulFunctionCall",
																"src": "17315:72:15"
															},
															"nativeSrc": "17315:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "17315:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17062:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17152:9:15",
														"nodeType": "YulTypedName",
														"src": "17152:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17164:6:15",
														"nodeType": "YulTypedName",
														"src": "17164:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17172:6:15",
														"nodeType": "YulTypedName",
														"src": "17172:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17183:4:15",
														"nodeType": "YulTypedName",
														"src": "17183:4:15",
														"type": ""
													}
												],
												"src": "17062:332:15"
											},
											{
												"body": {
													"nativeSrc": "17443:190:15",
													"nodeType": "YulBlock",
													"src": "17443:190:15",
													"statements": [
														{
															"nativeSrc": "17453:33:15",
															"nodeType": "YulAssignment",
															"src": "17453:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17480:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17480:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17462:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "17462:17:15"
																},
																"nativeSrc": "17462:24:15",
																"nodeType": "YulFunctionCall",
																"src": "17462:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17453:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "17453:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17576:22:15",
																"nodeType": "YulBlock",
																"src": "17576:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17578:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "17578:16:15"
																			},
																			"nativeSrc": "17578:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17578:18:15"
																		},
																		"nativeSrc": "17578:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17578:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17501:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17501:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17508:66:15",
																		"nodeType": "YulLiteral",
																		"src": "17508:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17498:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "17498:2:15"
																},
																"nativeSrc": "17498:77:15",
																"nodeType": "YulFunctionCall",
																"src": "17498:77:15"
															},
															"nativeSrc": "17495:103:15",
															"nodeType": "YulIf",
															"src": "17495:103:15"
														},
														{
															"nativeSrc": "17607:20:15",
															"nodeType": "YulAssignment",
															"src": "17607:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17618:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17618:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17625:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17625:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17614:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17614:3:15"
																},
																"nativeSrc": "17614:13:15",
																"nodeType": "YulFunctionCall",
																"src": "17614:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17607:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17607:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17400:233:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17429:5:15",
														"nodeType": "YulTypedName",
														"src": "17429:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17439:3:15",
														"nodeType": "YulTypedName",
														"src": "17439:3:15",
														"type": ""
													}
												],
												"src": "17400:233:15"
											},
											{
												"body": {
													"nativeSrc": "17683:147:15",
													"nodeType": "YulBlock",
													"src": "17683:147:15",
													"statements": [
														{
															"nativeSrc": "17693:25:15",
															"nodeType": "YulAssignment",
															"src": "17693:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17716:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17716:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17698:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "17698:17:15"
																},
																"nativeSrc": "17698:20:15",
																"nodeType": "YulFunctionCall",
																"src": "17698:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17693:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "17693:1:15"
																}
															]
														},
														{
															"nativeSrc": "17727:25:15",
															"nodeType": "YulAssignment",
															"src": "17727:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17750:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17750:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17732:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "17732:17:15"
																},
																"nativeSrc": "17732:20:15",
																"nodeType": "YulFunctionCall",
																"src": "17732:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17727:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "17727:1:15"
																}
															]
														},
														{
															"nativeSrc": "17761:16:15",
															"nodeType": "YulAssignment",
															"src": "17761:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17772:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17772:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17775:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17775:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17768:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17768:3:15"
																},
																"nativeSrc": "17768:9:15",
																"nodeType": "YulFunctionCall",
																"src": "17768:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17761:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17761:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17801:22:15",
																"nodeType": "YulBlock",
																"src": "17801:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17803:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "17803:16:15"
																			},
																			"nativeSrc": "17803:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17803:18:15"
																		},
																		"nativeSrc": "17803:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17803:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17793:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "17793:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17796:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17796:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17790:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "17790:2:15"
																},
																"nativeSrc": "17790:10:15",
																"nodeType": "YulFunctionCall",
																"src": "17790:10:15"
															},
															"nativeSrc": "17787:36:15",
															"nodeType": "YulIf",
															"src": "17787:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17639:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17670:1:15",
														"nodeType": "YulTypedName",
														"src": "17670:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17673:1:15",
														"nodeType": "YulTypedName",
														"src": "17673:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17679:3:15",
														"nodeType": "YulTypedName",
														"src": "17679:3:15",
														"type": ""
													}
												],
												"src": "17639:191:15"
											},
											{
												"body": {
													"nativeSrc": "17942:69:15",
													"nodeType": "YulBlock",
													"src": "17942:69:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17964:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17964:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17972:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17972:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17960:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17960:3:15"
																		},
																		"nativeSrc": "17960:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17960:14:15"
																	},
																	{
																		"hexValue": "4d61726b65743a746f55696e743235365f6f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "17976:27:15",
																		"nodeType": "YulLiteral",
																		"src": "17976:27:15",
																		"type": "",
																		"value": "Market:toUint256_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17953:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:15"
																},
																"nativeSrc": "17953:51:15",
																"nodeType": "YulFunctionCall",
																"src": "17953:51:15"
															},
															"nativeSrc": "17953:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "17953:51:15"
														}
													]
												},
												"name": "store_literal_in_memory_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01",
												"nativeSrc": "17836:175:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17934:6:15",
														"nodeType": "YulTypedName",
														"src": "17934:6:15",
														"type": ""
													}
												],
												"src": "17836:175:15"
											},
											{
												"body": {
													"nativeSrc": "18163:220:15",
													"nodeType": "YulBlock",
													"src": "18163:220:15",
													"statements": [
														{
															"nativeSrc": "18173:74:15",
															"nodeType": "YulAssignment",
															"src": "18173:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18239:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18239:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18244:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18244:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18180:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "18180:58:15"
																},
																"nativeSrc": "18180:67:15",
																"nodeType": "YulFunctionCall",
																"src": "18180:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18173:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18173:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18345:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18345:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01",
																	"nativeSrc": "18256:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "18256:88:15"
																},
																"nativeSrc": "18256:93:15",
																"nodeType": "YulFunctionCall",
																"src": "18256:93:15"
															},
															"nativeSrc": "18256:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "18256:93:15"
														},
														{
															"nativeSrc": "18358:19:15",
															"nodeType": "YulAssignment",
															"src": "18358:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18369:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18369:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18374:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18374:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18365:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18365:3:15"
																},
																"nativeSrc": "18365:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18365:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18358:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18358:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18017:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18151:3:15",
														"nodeType": "YulTypedName",
														"src": "18151:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18159:3:15",
														"nodeType": "YulTypedName",
														"src": "18159:3:15",
														"type": ""
													}
												],
												"src": "18017:366:15"
											},
											{
												"body": {
													"nativeSrc": "18560:248:15",
													"nodeType": "YulBlock",
													"src": "18560:248:15",
													"statements": [
														{
															"nativeSrc": "18570:26:15",
															"nodeType": "YulAssignment",
															"src": "18570:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18582:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18582:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18593:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18593:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18578:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18578:3:15"
																},
																"nativeSrc": "18578:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18578:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18570:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18570:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18617:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18617:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18628:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18628:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18613:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18613:3:15"
																		},
																		"nativeSrc": "18613:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18613:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18636:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "18636:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18642:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18642:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18632:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18632:3:15"
																		},
																		"nativeSrc": "18632:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18632:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18606:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18606:6:15"
																},
																"nativeSrc": "18606:47:15",
																"nodeType": "YulFunctionCall",
																"src": "18606:47:15"
															},
															"nativeSrc": "18606:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "18606:47:15"
														},
														{
															"nativeSrc": "18662:139:15",
															"nodeType": "YulAssignment",
															"src": "18662:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18796:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "18796:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18670:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "18670:124:15"
																},
																"nativeSrc": "18670:131:15",
																"nodeType": "YulFunctionCall",
																"src": "18670:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18662:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18662:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18389:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18540:9:15",
														"nodeType": "YulTypedName",
														"src": "18540:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18555:4:15",
														"nodeType": "YulTypedName",
														"src": "18555:4:15",
														"type": ""
													}
												],
												"src": "18389:419:15"
											},
											{
												"body": {
													"nativeSrc": "18920:65:15",
													"nodeType": "YulBlock",
													"src": "18920:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18942:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18942:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18950:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18950:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18938:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18938:3:15"
																		},
																		"nativeSrc": "18938:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18938:14:15"
																	},
																	{
																		"hexValue": "746f55696e743235365f6f75744f66426f756e6473",
																		"kind": "string",
																		"nativeSrc": "18954:23:15",
																		"nodeType": "YulLiteral",
																		"src": "18954:23:15",
																		"type": "",
																		"value": "toUint256_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18931:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18931:6:15"
																},
																"nativeSrc": "18931:47:15",
																"nodeType": "YulFunctionCall",
																"src": "18931:47:15"
															},
															"nativeSrc": "18931:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "18931:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b",
												"nativeSrc": "18814:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18912:6:15",
														"nodeType": "YulTypedName",
														"src": "18912:6:15",
														"type": ""
													}
												],
												"src": "18814:171:15"
											},
											{
												"body": {
													"nativeSrc": "19137:220:15",
													"nodeType": "YulBlock",
													"src": "19137:220:15",
													"statements": [
														{
															"nativeSrc": "19147:74:15",
															"nodeType": "YulAssignment",
															"src": "19147:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19213:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19213:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19218:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19218:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19154:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "19154:58:15"
																},
																"nativeSrc": "19154:67:15",
																"nodeType": "YulFunctionCall",
																"src": "19154:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19147:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19147:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19319:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19319:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b",
																	"nativeSrc": "19230:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "19230:88:15"
																},
																"nativeSrc": "19230:93:15",
																"nodeType": "YulFunctionCall",
																"src": "19230:93:15"
															},
															"nativeSrc": "19230:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "19230:93:15"
														},
														{
															"nativeSrc": "19332:19:15",
															"nodeType": "YulAssignment",
															"src": "19332:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19343:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19343:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19348:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19348:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19339:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19339:3:15"
																},
																"nativeSrc": "19339:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19339:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19332:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19332:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18991:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19125:3:15",
														"nodeType": "YulTypedName",
														"src": "19125:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19133:3:15",
														"nodeType": "YulTypedName",
														"src": "19133:3:15",
														"type": ""
													}
												],
												"src": "18991:366:15"
											},
											{
												"body": {
													"nativeSrc": "19534:248:15",
													"nodeType": "YulBlock",
													"src": "19534:248:15",
													"statements": [
														{
															"nativeSrc": "19544:26:15",
															"nodeType": "YulAssignment",
															"src": "19544:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19556:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19556:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19567:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19567:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19552:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19552:3:15"
																},
																"nativeSrc": "19552:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19552:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19544:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19544:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19591:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19591:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19602:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19602:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19587:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19587:3:15"
																		},
																		"nativeSrc": "19587:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19587:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19610:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "19610:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19616:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19616:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19606:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19606:3:15"
																		},
																		"nativeSrc": "19606:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19606:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19580:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19580:6:15"
																},
																"nativeSrc": "19580:47:15",
																"nodeType": "YulFunctionCall",
																"src": "19580:47:15"
															},
															"nativeSrc": "19580:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "19580:47:15"
														},
														{
															"nativeSrc": "19636:139:15",
															"nodeType": "YulAssignment",
															"src": "19636:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19770:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19770:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19644:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "19644:124:15"
																},
																"nativeSrc": "19644:131:15",
																"nodeType": "YulFunctionCall",
																"src": "19644:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19636:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19636:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19363:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19514:9:15",
														"nodeType": "YulTypedName",
														"src": "19514:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19529:4:15",
														"nodeType": "YulTypedName",
														"src": "19529:4:15",
														"type": ""
													}
												],
												"src": "19363:419:15"
											},
											{
												"body": {
													"nativeSrc": "19828:76:15",
													"nodeType": "YulBlock",
													"src": "19828:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "19882:16:15",
																"nodeType": "YulBlock",
																"src": "19882:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19891:1:15",
																					"nodeType": "YulLiteral",
																					"src": "19891:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19894:1:15",
																					"nodeType": "YulLiteral",
																					"src": "19894:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19884:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19884:6:15"
																			},
																			"nativeSrc": "19884:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19884:12:15"
																		},
																		"nativeSrc": "19884:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19884:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19851:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "19851:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19873:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "19873:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "19858:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "19858:14:15"
																				},
																				"nativeSrc": "19858:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19858:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19848:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "19848:2:15"
																		},
																		"nativeSrc": "19848:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19848:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19841:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19841:6:15"
																},
																"nativeSrc": "19841:40:15",
																"nodeType": "YulFunctionCall",
																"src": "19841:40:15"
															},
															"nativeSrc": "19838:60:15",
															"nodeType": "YulIf",
															"src": "19838:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "19788:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19821:5:15",
														"nodeType": "YulTypedName",
														"src": "19821:5:15",
														"type": ""
													}
												],
												"src": "19788:116:15"
											},
											{
												"body": {
													"nativeSrc": "19970:77:15",
													"nodeType": "YulBlock",
													"src": "19970:77:15",
													"statements": [
														{
															"nativeSrc": "19980:22:15",
															"nodeType": "YulAssignment",
															"src": "19980:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19995:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19995:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19989:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19989:5:15"
																},
																"nativeSrc": "19989:13:15",
																"nodeType": "YulFunctionCall",
																"src": "19989:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19980:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19980:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20035:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "20035:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20011:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "20011:23:15"
																},
																"nativeSrc": "20011:30:15",
																"nodeType": "YulFunctionCall",
																"src": "20011:30:15"
															},
															"nativeSrc": "20011:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "20011:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "19910:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19948:6:15",
														"nodeType": "YulTypedName",
														"src": "19948:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19956:3:15",
														"nodeType": "YulTypedName",
														"src": "19956:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19964:5:15",
														"nodeType": "YulTypedName",
														"src": "19964:5:15",
														"type": ""
													}
												],
												"src": "19910:137:15"
											},
											{
												"body": {
													"nativeSrc": "20127:271:15",
													"nodeType": "YulBlock",
													"src": "20127:271:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "20173:83:15",
																"nodeType": "YulBlock",
																"src": "20173:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20175:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "20175:77:15"
																			},
																			"nativeSrc": "20175:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20175:79:15"
																		},
																		"nativeSrc": "20175:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20175:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20148:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20148:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20157:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20157:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20144:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20144:3:15"
																		},
																		"nativeSrc": "20144:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20144:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20169:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20169:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20140:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20140:3:15"
																},
																"nativeSrc": "20140:32:15",
																"nodeType": "YulFunctionCall",
																"src": "20140:32:15"
															},
															"nativeSrc": "20137:119:15",
															"nodeType": "YulIf",
															"src": "20137:119:15"
														},
														{
															"nativeSrc": "20266:125:15",
															"nodeType": "YulBlock",
															"src": "20266:125:15",
															"statements": [
																{
																	"nativeSrc": "20281:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20281:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20295:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20295:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20285:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20285:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20310:71:15",
																	"nodeType": "YulAssignment",
																	"src": "20310:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20353:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20353:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20364:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20364:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20349:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20349:3:15"
																				},
																				"nativeSrc": "20349:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20349:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20373:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20373:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "20320:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "20320:28:15"
																		},
																		"nativeSrc": "20320:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20320:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20310:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "20310:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20053:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20097:9:15",
														"nodeType": "YulTypedName",
														"src": "20097:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20108:7:15",
														"nodeType": "YulTypedName",
														"src": "20108:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20120:6:15",
														"nodeType": "YulTypedName",
														"src": "20120:6:15",
														"type": ""
													}
												],
												"src": "20053:345:15"
											},
											{
												"body": {
													"nativeSrc": "20510:57:15",
													"nodeType": "YulBlock",
													"src": "20510:57:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20532:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20532:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20540:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20540:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20528:3:15"
																		},
																		"nativeSrc": "20528:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20528:14:15"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c",
																		"kind": "string",
																		"nativeSrc": "20544:15:15",
																		"nodeType": "YulLiteral",
																		"src": "20544:15:15",
																		"type": "",
																		"value": "transfer fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20521:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20521:6:15"
																},
																"nativeSrc": "20521:39:15",
																"nodeType": "YulFunctionCall",
																"src": "20521:39:15"
															},
															"nativeSrc": "20521:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "20521:39:15"
														}
													]
												},
												"name": "store_literal_in_memory_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
												"nativeSrc": "20404:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20502:6:15",
														"nodeType": "YulTypedName",
														"src": "20502:6:15",
														"type": ""
													}
												],
												"src": "20404:163:15"
											},
											{
												"body": {
													"nativeSrc": "20719:220:15",
													"nodeType": "YulBlock",
													"src": "20719:220:15",
													"statements": [
														{
															"nativeSrc": "20729:74:15",
															"nodeType": "YulAssignment",
															"src": "20729:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20795:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20795:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20800:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20800:2:15",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20736:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "20736:58:15"
																},
																"nativeSrc": "20736:67:15",
																"nodeType": "YulFunctionCall",
																"src": "20736:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20729:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20729:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20901:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20901:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																	"nativeSrc": "20812:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "20812:88:15"
																},
																"nativeSrc": "20812:93:15",
																"nodeType": "YulFunctionCall",
																"src": "20812:93:15"
															},
															"nativeSrc": "20812:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "20812:93:15"
														},
														{
															"nativeSrc": "20914:19:15",
															"nodeType": "YulAssignment",
															"src": "20914:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20925:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20925:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20930:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20930:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20921:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20921:3:15"
																},
																"nativeSrc": "20921:12:15",
																"nodeType": "YulFunctionCall",
																"src": "20921:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20914:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20914:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20573:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20707:3:15",
														"nodeType": "YulTypedName",
														"src": "20707:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20715:3:15",
														"nodeType": "YulTypedName",
														"src": "20715:3:15",
														"type": ""
													}
												],
												"src": "20573:366:15"
											},
											{
												"body": {
													"nativeSrc": "21116:248:15",
													"nodeType": "YulBlock",
													"src": "21116:248:15",
													"statements": [
														{
															"nativeSrc": "21126:26:15",
															"nodeType": "YulAssignment",
															"src": "21126:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21138:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21138:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21149:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21149:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21134:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21134:3:15"
																},
																"nativeSrc": "21134:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21134:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21126:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21126:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21173:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21173:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21184:1:15",
																				"nodeType": "YulLiteral",
																				"src": "21184:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21169:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21169:3:15"
																		},
																		"nativeSrc": "21169:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21169:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21192:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "21192:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21198:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21198:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21188:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21188:3:15"
																		},
																		"nativeSrc": "21188:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21188:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21162:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21162:6:15"
																},
																"nativeSrc": "21162:47:15",
																"nodeType": "YulFunctionCall",
																"src": "21162:47:15"
															},
															"nativeSrc": "21162:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "21162:47:15"
														},
														{
															"nativeSrc": "21218:139:15",
															"nodeType": "YulAssignment",
															"src": "21218:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21352:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "21352:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21226:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "21226:124:15"
																},
																"nativeSrc": "21226:131:15",
																"nodeType": "YulFunctionCall",
																"src": "21226:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21218:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21218:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20945:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21096:9:15",
														"nodeType": "YulTypedName",
														"src": "21096:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21111:4:15",
														"nodeType": "YulTypedName",
														"src": "21111:4:15",
														"type": ""
													}
												],
												"src": "20945:419:15"
											},
											{
												"body": {
													"nativeSrc": "21552:371:15",
													"nodeType": "YulBlock",
													"src": "21552:371:15",
													"statements": [
														{
															"nativeSrc": "21562:27:15",
															"nodeType": "YulAssignment",
															"src": "21562:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21574:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21574:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21585:3:15",
																		"nodeType": "YulLiteral",
																		"src": "21585:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21570:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21570:3:15"
																},
																"nativeSrc": "21570:19:15",
																"nodeType": "YulFunctionCall",
																"src": "21570:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21562:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21562:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21643:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21643:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21656:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21656:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21667:1:15",
																				"nodeType": "YulLiteral",
																				"src": "21667:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21652:3:15"
																		},
																		"nativeSrc": "21652:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21652:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21599:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "21599:43:15"
																},
																"nativeSrc": "21599:71:15",
																"nodeType": "YulFunctionCall",
																"src": "21599:71:15"
															},
															"nativeSrc": "21599:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "21599:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21724:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21724:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21737:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21737:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21748:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21748:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21733:3:15"
																		},
																		"nativeSrc": "21733:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21733:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21680:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "21680:43:15"
																},
																"nativeSrc": "21680:72:15",
																"nodeType": "YulFunctionCall",
																"src": "21680:72:15"
															},
															"nativeSrc": "21680:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "21680:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21806:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21806:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21819:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21819:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21830:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21830:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21815:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21815:3:15"
																		},
																		"nativeSrc": "21815:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21815:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21762:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "21762:43:15"
																},
																"nativeSrc": "21762:72:15",
																"nodeType": "YulFunctionCall",
																"src": "21762:72:15"
															},
															"nativeSrc": "21762:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "21762:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21888:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21888:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21901:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21901:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21912:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21912:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21897:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21897:3:15"
																		},
																		"nativeSrc": "21897:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21897:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21844:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "21844:43:15"
																},
																"nativeSrc": "21844:72:15",
																"nodeType": "YulFunctionCall",
																"src": "21844:72:15"
															},
															"nativeSrc": "21844:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "21844:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21370:553:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21500:9:15",
														"nodeType": "YulTypedName",
														"src": "21500:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21512:6:15",
														"nodeType": "YulTypedName",
														"src": "21512:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21520:6:15",
														"nodeType": "YulTypedName",
														"src": "21520:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21528:6:15",
														"nodeType": "YulTypedName",
														"src": "21528:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21536:6:15",
														"nodeType": "YulTypedName",
														"src": "21536:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21547:4:15",
														"nodeType": "YulTypedName",
														"src": "21547:4:15",
														"type": ""
													}
												],
												"src": "21370:553:15"
											},
											{
												"body": {
													"nativeSrc": "21957:152:15",
													"nodeType": "YulBlock",
													"src": "21957:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21974:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21974:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21977:77:15",
																		"nodeType": "YulLiteral",
																		"src": "21977:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21967:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21967:6:15"
																},
																"nativeSrc": "21967:88:15",
																"nodeType": "YulFunctionCall",
																"src": "21967:88:15"
															},
															"nativeSrc": "21967:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "21967:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22071:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22071:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22074:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22074:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22064:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22064:6:15"
																},
																"nativeSrc": "22064:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22064:15:15"
															},
															"nativeSrc": "22064:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22064:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22095:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22095:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22098:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22098:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22088:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22088:6:15"
																},
																"nativeSrc": "22088:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22088:15:15"
															},
															"nativeSrc": "22088:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22088:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "21929:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "21929:180:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct NFTmarket.Order -> struct NFTmarket.Order\n    function abi_encode_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenID\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct NFTmarket.Order[] -> struct NFTmarket.Order[]\n    function abi_encode_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Order_$3427_memory_ptr_to_t_struct$_Order_$3427_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC721_$1881_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$1881_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1881_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1881__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$1881_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"price must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577(memPtr) {\n\n        mstore(add(memPtr, 0), \"not seller\")\n\n    }\n\n    function abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01(memPtr) {\n\n        mstore(add(memPtr, 0), \"Market:toUint256_overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"toUint256_outOfBounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer fail\")\n\n    }\n\n    function abi_encode_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA85C38EF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA85C38EF EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xB5CDF924 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xBCA6CE64 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xE0391B09 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xFCCE4883 EQ PUSH2 0x232 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x3A52C7C2 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x40E58EE5 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x629CB2E4 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x9D4971B7 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x2B1 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH0 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xD5B509E657D5EC37AE4BDCAB658B7340C0453BB630516D26623359A34C1CECF3 DUP7 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x49F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH1 0x4 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP4 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xDAC6AECD066304D15A41E8E590FC5AB5BF93634F43CBA363F743D5E158D79988 DUP4 DUP7 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x602 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x749 DUP3 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0xC0E68D6B69F741C21E955CAD2AE4D505B6F6735C7E7B278251B3F6283A5F07EB DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x77A SWAP3 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A7 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7E1 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x7CE PUSH2 0xF93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x7C6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x935 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x928 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x90E JUMPI PUSH2 0x90D PUSH2 0x174A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x924 SWAP1 PUSH2 0x1816 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x7E7 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 DUP4 PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST LT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP1 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x20 DUP6 ADD ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBE SWAP1 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP5 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC25 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC5B DUP5 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0x424D5E5F0192C7DACDBE646CA31B00299146D883D76A95EF5CDDBAC7CD342EAB DUP4 DUP4 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC90 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD59 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xCC1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE12 JUMPI PUSH2 0xE11 PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE35 JUMPI PUSH2 0xE34 PUSH2 0x174A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP3 PUSH1 0x4 PUSH0 DUP4 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0xEE9 JUMPI PUSH2 0xEE8 PUSH2 0x1A60 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1001 DUP3 PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x101B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102C DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 DUP2 PUSH2 0x1032 JUMP JUMPDEST DUP2 EQ PUSH2 0x104E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105F DUP2 PUSH2 0x103B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1086 JUMPI PUSH2 0x1085 PUSH2 0x1065 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1069 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0x106D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10DF JUMPI PUSH2 0x10DE PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10EC DUP9 DUP3 DUP10 ADD PUSH2 0x101E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x10FD DUP9 DUP3 DUP10 ADD PUSH2 0x101E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x110E DUP9 DUP3 DUP10 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112E PUSH2 0xFD4 JUMP JUMPDEST JUMPDEST PUSH2 0x113B DUP9 DUP3 DUP10 ADD PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1197 PUSH0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11EF PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11FD DUP5 DUP3 DUP6 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1238 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1247 DUP2 PUSH2 0x1032 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1261 PUSH0 DUP6 ADD DUP3 PUSH2 0x122F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1274 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x123E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1287 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x123E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1298 DUP4 DUP4 PUSH2 0x124D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BA DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x12C4 DUP2 DUP6 PUSH2 0x1210 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CF DUP4 PUSH2 0x1220 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12FF JUMPI DUP2 MLOAD PUSH2 0x12E6 DUP9 DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP8 POP PUSH2 0x12F1 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12D2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1324 DUP2 DUP5 PUSH2 0x12B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x134F PUSH2 0x134A PUSH2 0x1345 DUP5 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x132C JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1360 DUP3 PUSH2 0x1335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1371 DUP3 PUSH2 0x1356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1381 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139A PUSH0 DUP4 ADD DUP5 PUSH2 0x1378 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A9 DUP2 PUSH2 0x1032 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D1 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13EA PUSH0 DUP4 ADD DUP7 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x13F7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x1404 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1456 DUP3 PUSH2 0x1410 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1487 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1493 DUP3 DUP3 PUSH2 0x144D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST PUSH2 0x14BB DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E8 PUSH2 0x14E3 DUP5 PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x147E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1504 JUMPI PUSH2 0x1503 PUSH2 0x140C JUMP JUMPDEST JUMPDEST PUSH2 0x150F DUP5 DUP3 DUP6 PUSH2 0x14C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x1065 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x153B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1576 PUSH2 0xFD4 JUMP JUMPDEST JUMPDEST PUSH2 0x1583 DUP6 DUP3 DUP7 ADD PUSH2 0x1517 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1594 DUP6 DUP3 DUP7 ADD PUSH2 0x1051 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A8 DUP3 PUSH2 0x1356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B8 DUP2 PUSH2 0x159E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EB DUP2 PUSH2 0x15D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1604 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x164E PUSH1 0x1C DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1659 DUP3 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167B DUP2 PUSH2 0x1642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16B9 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C4 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DB PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742073656C6C657200000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1716 PUSH1 0xA DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1721 DUP3 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1743 DUP2 PUSH2 0x170A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP8 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x17A4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x17B1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17CD PUSH0 DUP4 ADD DUP7 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x17DA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x17E7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1802 PUSH0 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x180F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1820 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1867 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x1872 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B65743A746F55696E743235365F6F766572666C6F7700000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 PUSH1 0x19 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x18CF DUP3 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F1 DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F55696E743235365F6F75744F66426F756E64730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192C PUSH1 0x15 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1937 DUP3 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1959 DUP2 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1969 DUP2 PUSH2 0x15D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1973 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1984 DUP2 PUSH2 0x1960 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0xFD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AC DUP5 DUP3 DUP6 ADD PUSH2 0x1976 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7472616E73666572206661696C00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E9 PUSH1 0xD DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x19F4 DUP3 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A16 DUP2 PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A30 PUSH0 DUP4 ADD DUP8 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1A3D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1A4A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x1A57 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xA6 0xC7 PUSH9 0x910D4C16F0C16C8B82 PUSH3 0xD052E8 PUSH12 0x3C0DEF3D50E8CC7E1F892353 0xCB 0xFB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "179:4229:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1870:446;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1553:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4019:386;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;205:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3816:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3420:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1121:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3919:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2324:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2460:490;2574:6;2593:13;2609:18;2619:4;;2609:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2625:1;2609:9;:18::i;:::-;2593:34;;2654:1;2646:5;:9;2638:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2701:6;2713:27;;;;;;;;2719:4;2713:27;;;;;;2725:7;2713:27;;;;2734:5;2713:27;;;2701:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:27;;;;;;;;2779:4;2773:27;;;;;;2785:7;2773:27;;;;2794:5;2773:27;;;2752:9;:18;2762:7;2752:18;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:1;2832:6;:13;;;;:17;;;;:::i;:::-;2811:9;:18;2821:7;2811:18;;;;;;;;;;;:38;;;;2868:30;2877:4;2883:7;2892:5;2868:30;;;;;;;;:::i;:::-;;;;;;;;313:10;2918:24;;2911:31;;;2460:490;;;;;;;:::o;1870:446::-;1940:14;1957:9;:19;1967:8;1957:19;;;;;;;;;;;:26;;;;;;;;;;;;1940:43;;2016:6;2002:20;;:10;:20;;;1994:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2050:21;2074:9;:19;2084:8;2074:19;;;;;;;;;;;:25;;;2050:49;;2138:6;2110:9;:19;2120:8;2110:19;;;;;;;;;;;:25;;:34;;;;2157:19;2179:6;2186:9;:19;2196:8;2186:19;;;;;;;;;;;;2179:27;;;;;;;;:::i;:::-;;;;;;;;;;;;2157:49;;2231:6;2217:5;:11;;:20;;;;2255:53;2268:6;2276:8;2286:13;2301:6;2255:53;;;;;;;;;:::i;:::-;;;;;;;;1929:387;;;1870:446;;:::o;1553:309::-;1607:14;1624:9;:19;1634:8;1624:19;;;;;;;;;;;:26;;;;;;;;;;;;1607:43;;1683:6;1669:20;;:10;:20;;;1661:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:6;;;;;;;;;;;:23;;;1749:4;1756:6;1764:8;1717:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:21;1798:8;1786:11;:21::i;:::-;1825:29;1837:6;1845:8;1825:29;;;;;;;:::i;:::-;;;;;;;;1596:266;1553:309;:::o;4019:386::-;4062:14;4088:23;4126:6;:13;;;;4114:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4088:52;;4151:13;4184:9;4179:193;4203:6;:13;;;;4199:1;:17;4179:193;;;4261:10;4241:30;;:6;4248:1;4241:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:30;;;4238:123;;4309:6;4316:1;4309:9;;;;;;;;:::i;:::-;;;;;;;;;;;;4291:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;4300:5;4291:15;;;;;;;;:::i;:::-;;;;;;;:27;;;;4337:8;;;;;:::i;:::-;;;;4238:123;4218:4;;;;;;;4179:193;;;;4389:8;4382:15;;;;4019:386;:::o;205:19::-;;;;;;;;;;;;:::o;3816:95::-;3864:7;3890:6;:13;;;;3883:20;;3816:95;:::o;497:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3420:388::-;3497:7;3540:6;3534:2;3525:6;:11;;;;:::i;:::-;:21;;3517:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3621:2;3612:6;:11;;;;:::i;:::-;3595:6;:13;:28;;3587:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3660:16;3754:6;3747:4;3739:6;3735:17;3731:30;3725:37;3713:49;;3792:8;3785:15;;;3420:388;;;;:::o;231:21::-;;;;;;;;;;;;;:::o;1121:424::-;1171:14;1188:9;:19;1198:8;1188:19;;;;;;;;;;;:26;;;;;;;;;;;;1171:43;;1225:13;1241:10;1225:26;;1262:13;1278:9;:19;1288:8;1278:19;;;;;;;;;;;:25;;;1262:41;;1324:5;;;;;;;;;;:18;;;1343:5;1350:6;1358:5;1324:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1393:6;;;;;;;;;;;:23;;;1425:4;1432:5;1439:8;1393:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1461:21;1473:8;1461:11;:21::i;:::-;1500:37;1505:6;1513:5;1521:8;1531:5;1500:37;;;;;;;;;:::i;:::-;;;;;;;;1160:385;;;1121:424;:::o;3919:92::-;3963:14;3997:6;3990:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:92;:::o;2324:128::-;2380:4;2442:1;2404:40;;:9;:19;2414:8;2404:19;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;;2397:47;;2324:128;;;:::o;2958:454::-;3018:13;3034:9;:19;3044:8;3034:19;;;;;;;;;;;;3018:35;;3064:17;3100:1;3084:6;:13;;;;:17;;;;:::i;:::-;3064:37;;3127:9;3118:5;:18;3114:186;;3152:23;3178:6;3185:9;3178:17;;;;;;;;:::i;:::-;;;;;;;;;;;;3152:43;;3227:9;3210:6;3217:5;3210:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:5;3251:9;:28;3261:9;:17;;;3251:28;;;;;;;;;;;:36;;;;3137:163;3114:186;3321:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:9;:19;3361:8;3351:19;;;;;;;;;;;;3344:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:9;:16;3398:5;3388:16;;;;;;;;;;;3381:23;;;3007:405;;2958:454;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o;3606:474::-;3674:6;3682;3731:2;3719:9;3710:7;3706:23;3702:32;3699:119;;;3737:79;;:::i;:::-;3699:119;3857:1;3882:53;3927:7;3918:6;3907:9;3903:22;3882:53;:::i;:::-;3872:63;;3828:117;3984:2;4010:53;4055:7;4046:6;4035:9;4031:22;4010:53;:::i;:::-;4000:63;;3955:118;3606:474;;;;;:::o;4086:329::-;4145:6;4194:2;4182:9;4173:7;4169:23;4165:32;4162:119;;;4200:79;;:::i;:::-;4162:119;4320:1;4345:53;4390:7;4381:6;4370:9;4366:22;4345:53;:::i;:::-;4335:63;;4291:117;4086:329;;;;:::o;4421:137::-;4511:6;4545:5;4539:12;4529:22;;4421:137;;;:::o;4564:207::-;4686:11;4720:6;4715:3;4708:19;4760:4;4755:3;4751:14;4736:29;;4564:207;;;;:::o;4777:155::-;4867:4;4890:3;4882:11;;4920:4;4915:3;4911:14;4903:22;;4777:155;;;:::o;4938:108::-;5015:24;5033:5;5015:24;:::i;:::-;5010:3;5003:37;4938:108;;:::o;5052:::-;5129:24;5147:5;5129:24;:::i;:::-;5124:3;5117:37;5052:108;;:::o;5222:673::-;5355:4;5350:3;5346:14;5444:4;5437:5;5433:16;5427:23;5463:63;5520:4;5515:3;5511:14;5497:12;5463:63;:::i;:::-;5370:166;5621:4;5614:5;5610:16;5604:23;5640:63;5697:4;5692:3;5688:14;5674:12;5640:63;:::i;:::-;5546:167;5796:4;5789:5;5785:16;5779:23;5815:63;5872:4;5867:3;5863:14;5849:12;5815:63;:::i;:::-;5723:165;5324:571;5222:673;;:::o;5901:271::-;6016:10;6037:92;6125:3;6117:6;6037:92;:::i;:::-;6161:4;6156:3;6152:14;6138:28;;5901:271;;;;:::o;6178:136::-;6271:4;6303;6298:3;6294:14;6286:22;;6178:136;;;:::o;6380:916::-;6545:3;6574:77;6645:5;6574:77;:::i;:::-;6667:109;6769:6;6764:3;6667:109;:::i;:::-;6660:116;;6800:79;6873:5;6800:79;:::i;:::-;6902:7;6933:1;6918:353;6943:6;6940:1;6937:13;6918:353;;;7019:6;7013:13;7046:109;7151:3;7136:13;7046:109;:::i;:::-;7039:116;;7178:83;7254:6;7178:83;:::i;:::-;7168:93;;6978:293;6965:1;6962;6958:9;6953:14;;6918:353;;;6922:14;7287:3;7280:10;;6550:746;;;6380:916;;;;:::o;7302:465::-;7491:4;7529:2;7518:9;7514:18;7506:26;;7578:9;7572:4;7568:20;7564:1;7553:9;7549:17;7542:47;7606:154;7755:4;7746:6;7606:154;:::i;:::-;7598:162;;7302:465;;;;:::o;7773:60::-;7801:3;7822:5;7815:12;;7773:60;;;:::o;7839:142::-;7889:9;7922:53;7940:34;7949:24;7967:5;7949:24;:::i;:::-;7940:34;:::i;:::-;7922:53;:::i;:::-;7909:66;;7839:142;;;:::o;7987:126::-;8037:9;8070:37;8101:5;8070:37;:::i;:::-;8057:50;;7987:126;;;:::o;8119:140::-;8183:9;8216:37;8247:5;8216:37;:::i;:::-;8203:50;;8119:140;;;:::o;8265:159::-;8366:51;8411:5;8366:51;:::i;:::-;8361:3;8354:64;8265:159;;:::o;8430:250::-;8537:4;8575:2;8564:9;8560:18;8552:26;;8588:85;8670:1;8659:9;8655:17;8646:6;8588:85;:::i;:::-;8430:250;;;;:::o;8686:118::-;8773:24;8791:5;8773:24;:::i;:::-;8768:3;8761:37;8686:118;;:::o;8810:222::-;8903:4;8941:2;8930:9;8926:18;8918:26;;8954:71;9022:1;9011:9;9007:17;8998:6;8954:71;:::i;:::-;8810:222;;;;:::o;9038:118::-;9125:24;9143:5;9125:24;:::i;:::-;9120:3;9113:37;9038:118;;:::o;9162:442::-;9311:4;9349:2;9338:9;9334:18;9326:26;;9362:71;9430:1;9419:9;9415:17;9406:6;9362:71;:::i;:::-;9443:72;9511:2;9500:9;9496:18;9487:6;9443:72;:::i;:::-;9525;9593:2;9582:9;9578:18;9569:6;9525:72;:::i;:::-;9162:442;;;;;;:::o;9610:117::-;9719:1;9716;9709:12;9733:102;9774:6;9825:2;9821:7;9816:2;9809:5;9805:14;9801:28;9791:38;;9733:102;;;:::o;9841:180::-;9889:77;9886:1;9879:88;9986:4;9983:1;9976:15;10010:4;10007:1;10000:15;10027:281;10110:27;10132:4;10110:27;:::i;:::-;10102:6;10098:40;10240:6;10228:10;10225:22;10204:18;10192:10;10189:34;10186:62;10183:88;;;10251:18;;:::i;:::-;10183:88;10291:10;10287:2;10280:22;10070:238;10027:281;;:::o;10314:129::-;10348:6;10375:20;;:::i;:::-;10365:30;;10404:33;10432:4;10424:6;10404:33;:::i;:::-;10314:129;;;:::o;10449:307::-;10510:4;10600:18;10592:6;10589:30;10586:56;;;10622:18;;:::i;:::-;10586:56;10660:29;10682:6;10660:29;:::i;:::-;10652:37;;10744:4;10738;10734:15;10726:23;;10449:307;;;:::o;10762:148::-;10860:6;10855:3;10850;10837:30;10901:1;10892:6;10887:3;10883:16;10876:27;10762:148;;;:::o;10916:423::-;10993:5;11018:65;11034:48;11075:6;11034:48;:::i;:::-;11018:65;:::i;:::-;11009:74;;11106:6;11099:5;11092:21;11144:4;11137:5;11133:16;11182:3;11173:6;11168:3;11164:16;11161:25;11158:112;;;11189:79;;:::i;:::-;11158:112;11279:54;11326:6;11321:3;11316;11279:54;:::i;:::-;10999:340;10916:423;;;;;:::o;11358:338::-;11413:5;11462:3;11455:4;11447:6;11443:17;11439:27;11429:122;;11470:79;;:::i;:::-;11429:122;11587:6;11574:20;11612:78;11686:3;11678:6;11671:4;11663:6;11659:17;11612:78;:::i;:::-;11603:87;;11419:277;11358:338;;;;:::o;11702:652::-;11779:6;11787;11836:2;11824:9;11815:7;11811:23;11807:32;11804:119;;;11842:79;;:::i;:::-;11804:119;11990:1;11979:9;11975:17;11962:31;12020:18;12012:6;12009:30;12006:117;;;12042:79;;:::i;:::-;12006:117;12147:62;12201:7;12192:6;12181:9;12177:22;12147:62;:::i;:::-;12137:72;;11933:286;12258:2;12284:53;12329:7;12320:6;12309:9;12305:22;12284:53;:::i;:::-;12274:63;;12229:118;11702:652;;;;;:::o;12360:142::-;12426:9;12459:37;12490:5;12459:37;:::i;:::-;12446:50;;12360:142;;;:::o;12508:163::-;12611:53;12658:5;12611:53;:::i;:::-;12606:3;12599:66;12508:163;;:::o;12677:254::-;12786:4;12824:2;12813:9;12809:18;12801:26;;12837:87;12921:1;12910:9;12906:17;12897:6;12837:87;:::i;:::-;12677:254;;;;:::o;12937:90::-;12971:7;13014:5;13007:13;13000:21;12989:32;;12937:90;;;:::o;13033:109::-;13114:21;13129:5;13114:21;:::i;:::-;13109:3;13102:34;13033:109;;:::o;13148:210::-;13235:4;13273:2;13262:9;13258:18;13250:26;;13286:65;13348:1;13337:9;13333:17;13324:6;13286:65;:::i;:::-;13148:210;;;;:::o;13364:169::-;13448:11;13482:6;13477:3;13470:19;13522:4;13517:3;13513:14;13498:29;;13364:169;;;;:::o;13539:178::-;13679:30;13675:1;13667:6;13663:14;13656:54;13539:178;:::o;13723:366::-;13865:3;13886:67;13950:2;13945:3;13886:67;:::i;:::-;13879:74;;13962:93;14051:3;13962:93;:::i;:::-;14080:2;14075:3;14071:12;14064:19;;13723:366;;;:::o;14095:419::-;14261:4;14299:2;14288:9;14284:18;14276:26;;14348:9;14342:4;14338:20;14334:1;14323:9;14319:17;14312:47;14376:131;14502:4;14376:131;:::i;:::-;14368:139;;14095:419;;;:::o;14520:180::-;14568:77;14565:1;14558:88;14665:4;14662:1;14655:15;14689:4;14686:1;14679:15;14706:194;14746:4;14766:20;14784:1;14766:20;:::i;:::-;14761:25;;14800:20;14818:1;14800:20;:::i;:::-;14795:25;;14844:1;14841;14837:9;14829:17;;14868:1;14862:4;14859:11;14856:37;;;14873:18;;:::i;:::-;14856:37;14706:194;;;;:::o;14906:160::-;15046:12;15042:1;15034:6;15030:14;15023:36;14906:160;:::o;15072:366::-;15214:3;15235:67;15299:2;15294:3;15235:67;:::i;:::-;15228:74;;15311:93;15400:3;15311:93;:::i;:::-;15429:2;15424:3;15420:12;15413:19;;15072:366;;;:::o;15444:419::-;15610:4;15648:2;15637:9;15633:18;15625:26;;15697:9;15691:4;15687:20;15683:1;15672:9;15668:17;15661:47;15725:131;15851:4;15725:131;:::i;:::-;15717:139;;15444:419;;;:::o;15869:180::-;15917:77;15914:1;15907:88;16014:4;16011:1;16004:15;16038:4;16035:1;16028:15;16055:553;16232:4;16270:3;16259:9;16255:19;16247:27;;16284:71;16352:1;16341:9;16337:17;16328:6;16284:71;:::i;:::-;16365:72;16433:2;16422:9;16418:18;16409:6;16365:72;:::i;:::-;16447;16515:2;16504:9;16500:18;16491:6;16447:72;:::i;:::-;16529;16597:2;16586:9;16582:18;16573:6;16529:72;:::i;:::-;16055:553;;;;;;;:::o;16614:442::-;16763:4;16801:2;16790:9;16786:18;16778:26;;16814:71;16882:1;16871:9;16867:17;16858:6;16814:71;:::i;:::-;16895:72;16963:2;16952:9;16948:18;16939:6;16895:72;:::i;:::-;16977;17045:2;17034:9;17030:18;17021:6;16977:72;:::i;:::-;16614:442;;;;;;:::o;17062:332::-;17183:4;17221:2;17210:9;17206:18;17198:26;;17234:71;17302:1;17291:9;17287:17;17278:6;17234:71;:::i;:::-;17315:72;17383:2;17372:9;17368:18;17359:6;17315:72;:::i;:::-;17062:332;;;;;:::o;17400:233::-;17439:3;17462:24;17480:5;17462:24;:::i;:::-;17453:33;;17508:66;17501:5;17498:77;17495:103;;17578:18;;:::i;:::-;17495:103;17625:1;17618:5;17614:13;17607:20;;17400:233;;;:::o;17639:191::-;17679:3;17698:20;17716:1;17698:20;:::i;:::-;17693:25;;17732:20;17750:1;17732:20;:::i;:::-;17727:25;;17775:1;17772;17768:9;17761:16;;17796:3;17793:1;17790:10;17787:36;;;17803:18;;:::i;:::-;17787:36;17639:191;;;;:::o;17836:175::-;17976:27;17972:1;17964:6;17960:14;17953:51;17836:175;:::o;18017:366::-;18159:3;18180:67;18244:2;18239:3;18180:67;:::i;:::-;18173:74;;18256:93;18345:3;18256:93;:::i;:::-;18374:2;18369:3;18365:12;18358:19;;18017:366;;;:::o;18389:419::-;18555:4;18593:2;18582:9;18578:18;18570:26;;18642:9;18636:4;18632:20;18628:1;18617:9;18613:17;18606:47;18670:131;18796:4;18670:131;:::i;:::-;18662:139;;18389:419;;;:::o;18814:171::-;18954:23;18950:1;18942:6;18938:14;18931:47;18814:171;:::o;18991:366::-;19133:3;19154:67;19218:2;19213:3;19154:67;:::i;:::-;19147:74;;19230:93;19319:3;19230:93;:::i;:::-;19348:2;19343:3;19339:12;19332:19;;18991:366;;;:::o;19363:419::-;19529:4;19567:2;19556:9;19552:18;19544:26;;19616:9;19610:4;19606:20;19602:1;19591:9;19587:17;19580:47;19644:131;19770:4;19644:131;:::i;:::-;19636:139;;19363:419;;;:::o;19788:116::-;19858:21;19873:5;19858:21;:::i;:::-;19851:5;19848:32;19838:60;;19894:1;19891;19884:12;19838:60;19788:116;:::o;19910:137::-;19964:5;19995:6;19989:13;19980:22;;20011:30;20035:5;20011:30;:::i;:::-;19910:137;;;;:::o;20053:345::-;20120:6;20169:2;20157:9;20148:7;20144:23;20140:32;20137:119;;;20175:79;;:::i;:::-;20137:119;20295:1;20320:61;20373:7;20364:6;20353:9;20349:22;20320:61;:::i;:::-;20310:71;;20266:125;20053:345;;;;:::o;20404:163::-;20544:15;20540:1;20532:6;20528:14;20521:39;20404:163;:::o;20573:366::-;20715:3;20736:67;20800:2;20795:3;20736:67;:::i;:::-;20729:74;;20812:93;20901:3;20812:93;:::i;:::-;20930:2;20925:3;20921:12;20914:19;;20573:366;;;:::o;20945:419::-;21111:4;21149:2;21138:9;21134:18;21126:26;;21198:9;21192:4;21188:20;21184:1;21173:9;21169:17;21162:47;21226:131;21352:4;21226:131;:::i;:::-;21218:139;;20945:419;;;:::o;21370:553::-;21547:4;21585:3;21574:9;21570:19;21562:27;;21599:71;21667:1;21656:9;21652:17;21643:6;21599:71;:::i;:::-;21680:72;21748:2;21737:9;21733:18;21724:6;21680:72;:::i;:::-;21762;21830:2;21819:9;21815:18;21806:6;21762:72;:::i;:::-;21844;21912:2;21901:9;21897:18;21888:6;21844:72;:::i;:::-;21370:553;;;;;;;:::o;21929:180::-;21977:77;21974:1;21967:88;22074:4;22071:1;22064:15;22098:4;22095:1;22088:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1370200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buy(uint256)": "infinite",
								"cancel(uint256)": "infinite",
								"change(uint256,uint256)": "infinite",
								"erc20()": "infinite",
								"erc721()": "infinite",
								"getAllNFTs()": "infinite",
								"getMyNFTs()": "infinite",
								"getOrderLength()": "2551",
								"isListed(uint256)": "2946",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"orders(uint256)": "infinite",
								"toUint256(bytes,uint256)": "infinite"
							},
							"internal": {
								"removeOrder(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 879,
									"end": 1113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 960,
									"end": 961,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 962,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 942,
									"end": 962,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 942,
									"end": 962,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 942,
									"end": 962,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 942,
									"end": 962,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 934,
									"end": 979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 934,
									"end": 979,
									"name": "tag",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 934,
									"end": 979,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1017,
									"end": 1018,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1019,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 998,
									"end": 1019,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1005,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1019,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 998,
									"end": 1019,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1019,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 990,
									"end": 1036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 990,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1062,
									"end": 1068,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1052,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1052,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1097,
									"end": 1104,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1086,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1080,
									"end": 1086,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 879,
									"end": 1113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1442,
									"end": 1453,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1471,
									"end": 1474,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1464,
									"end": 1483,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1520,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1514,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1507,
									"end": 1521,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1533,
									"end": 1695,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1673,
									"end": 1687,
									"name": "PUSH",
									"source": 15,
									"value": "7A65726F20616464726573730000000000000000000000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1667,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1657,
									"end": 1671,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1650,
									"end": 1688,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1533,
									"end": 1695,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1533,
									"end": 1695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1701,
									"end": 2067,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1701,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1843,
									"end": 1846,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1864,
									"end": 1931,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1928,
									"end": 1930,
									"name": "PUSH",
									"source": 15,
									"value": "C"
								},
								{
									"begin": 1923,
									"end": 1926,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1864,
									"end": 1931,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1864,
									"end": 1931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1864,
									"end": 1931,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1864,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1857,
									"end": 1931,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1857,
									"end": 1931,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1940,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 2029,
									"end": 2032,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1940,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1940,
									"end": 2033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1940,
									"end": 2033,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1940,
									"end": 2033,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2058,
									"end": 2060,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2053,
									"end": 2056,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2049,
									"end": 2061,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2042,
									"end": 2061,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2042,
									"end": 2061,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1701,
									"end": 2067,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1701,
									"end": 2067,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1701,
									"end": 2067,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1701,
									"end": 2067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2073,
									"end": 2492,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2492,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2239,
									"end": 2243,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2279,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2266,
									"end": 2275,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2262,
									"end": 2280,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2254,
									"end": 2280,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2254,
									"end": 2280,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2326,
									"end": 2335,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2320,
									"end": 2324,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2316,
									"end": 2336,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2301,
									"end": 2310,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2297,
									"end": 2314,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2290,
									"end": 2337,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2354,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 2480,
									"end": 2484,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2354,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 2354,
									"end": 2485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2354,
									"end": 2485,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 2354,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2346,
									"end": 2485,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2346,
									"end": 2485,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2073,
									"end": 2492,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2073,
									"end": 2492,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2073,
									"end": 2492,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2073,
									"end": 2492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 4408,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086a6c768910d4c16f0c16c8b8262d052e86b3c0def3d50e8cc7e1f892353cbfb64736f6c634300081a0033",
									".code": [
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "A85C38EF"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "A85C38EF"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "B5CDF924"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "BCA6CE64"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "D96A094A"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "E0391B09"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "FCCE4883"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "150B7A02"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "3A52C7C2"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "40E58EE5"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "629CB2E4"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "785E9E86"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "9D4971B7"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 179,
											"end": 4408,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 2460,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2460,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2460,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1870,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1870,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1553,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1553,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 4019,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 4019,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 205,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 3816,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3816,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 497,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 497,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 3420,
											"end": 3808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 3420,
											"end": 3808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3420,
											"end": 3808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 231,
											"end": 252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 231,
											"end": 252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1121,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 1121,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3919,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3919,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 2324,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2324,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 2324,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2606,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 2619,
											"end": 2623,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2623,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2625,
											"end": 2626,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 2609,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 2609,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2593,
											"end": 2627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2593,
											"end": 2627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2655,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 2638,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 2638,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2725,
											"end": 2732,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2769,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2770,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2752,
											"end": 2800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2832,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "PUSH",
											"source": 14,
											"value": "D5B509E657D5EC37AE4BDCAB658B7340C0453BB630516D26623359A34C1CECF3"
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2883,
											"end": 2890,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 2868,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 313,
											"end": 323,
											"name": "PUSH",
											"source": 14,
											"value": "150B7A02"
										},
										{
											"begin": 2918,
											"end": 2942,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2918,
											"end": 2942,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1940,
											"end": 1954,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1976,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1940,
											"end": 1983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1940,
											"end": 1983,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2012,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 1994,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 1994,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2092,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2093,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2099,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2128,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2129,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2135,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2110,
											"end": 2135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2144,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2144,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2204,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 2179,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2237,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2222,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2228,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2217,
											"end": 2228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2237,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2237,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2237,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "PUSH",
											"source": 14,
											"value": "DAC6AECD066304D15A41E8E590FC5AB5BF93634F43CBA363F743D5E158D79988"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2301,
											"end": 2307,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2255,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2308,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 2316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1621,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1642,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1607,
											"end": 1650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 1661,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 1717,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1717,
											"end": 1773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 1798,
											"end": 1806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1786,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 1786,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "PUSH",
											"source": 14,
											"value": "C0E68D6B69F741C21E955CAD2AE4D505B6F6735C7E7B278251B3F6283A5F07EB"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1853,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1825,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1596,
											"end": 1862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4076,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4088,
											"end": 4111,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4126,
											"end": 4139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4139,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4139,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 4114,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 4114,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4151,
											"end": 4164,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4209,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4203,
											"end": 4216,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4216,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4199,
											"end": 4216,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4261,
											"end": 4271,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4271,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4271,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4241,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4257,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4271,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4271,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4271,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4238,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 4238,
											"end": 4361,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4315,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4309,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4299,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4291,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 4337,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4238,
											"end": 4361,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 4238,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4389,
											"end": 4397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4019,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 224,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 205,
											"end": 224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3890,
											"end": 3903,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 3903,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 3903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 3903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3883,
											"end": 3903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3883,
											"end": 3903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3816,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 497,
											"end": 518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 497,
											"end": 518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3525,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 3517,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3517,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3621,
											"end": 3623,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3612,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 3612,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3608,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3623,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3623,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 3587,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 3587,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 3676,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3751,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3731,
											"end": 3761,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3725,
											"end": 3762,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3713,
											"end": 3762,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3713,
											"end": 3762,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3792,
											"end": 3800,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 231,
											"end": 252,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 231,
											"end": 252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1171,
											"end": 1185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1197,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1206,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1207,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1171,
											"end": 1214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1171,
											"end": 1214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1225,
											"end": 1238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1251,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1225,
											"end": 1251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1225,
											"end": 1251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1296,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1303,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1278,
											"end": 1303,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1303,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1303,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1350,
											"end": 1356,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 1324,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 1324,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 1324,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 1316,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 1316,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1416,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1416,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1416,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 1425,
											"end": 1429,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1437,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1439,
											"end": 1447,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 1393,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 1473,
											"end": 1481,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 1461,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "PUSH",
											"source": 14,
											"value": "424D5E5F0192C7DACDBE646CA31B00299146D883D76A95EF5CDDBAC7CD342EAB"
										},
										{
											"begin": 1505,
											"end": 1511,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1518,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1529,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 1500,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3963,
											"end": 3977,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "tag",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2422,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2444,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 3412,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2958,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3031,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3052,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3081,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3084,
											"end": 3097,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3097,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 3084,
											"end": 3101,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3101,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 3084,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3101,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 3084,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3101,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3136,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3114,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3114,
											"end": 3300,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3184,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 3178,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3195,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 3210,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3282,
											"end": 3287,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3261,
											"end": 3278,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3261,
											"end": 3278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3261,
											"end": 3278,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3279,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3287,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3287,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3287,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3300,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3114,
											"end": 3300,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3114,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 3321,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3403,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3381,
											"end": 3404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3381,
											"end": 3404,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3007,
											"end": 3412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3007,
											"end": 3412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 3412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 3412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2319,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2467,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2413,
											"end": 2530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2616,
											"end": 2638,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2595,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2540,
											"end": 2658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2748,
											"end": 2757,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 2723,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2668,
											"end": 2786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2825,
											"end": 2857,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2873,
											"end": 2903,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 2906,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 3075,
											"end": 3082,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 3019,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2796,
											"end": 3093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3142,
											"end": 3149,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3248,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3171,
											"end": 3249,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 3346,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 3524,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3728,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3729,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3702,
											"end": 3734,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 3737,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 3927,
											"end": 3934,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 3882,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3945,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 4055,
											"end": 4062,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4031,
											"end": 4053,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4010,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4010,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4010,
											"end": 4063,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 4010,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 4073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 4080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4415,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 4086,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4196,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4173,
											"end": 4180,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4169,
											"end": 4192,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4165,
											"end": 4197,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4162,
											"end": 4281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4162,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 4162,
											"end": 4281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4200,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 4200,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 4200,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4200,
											"end": 4279,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 4200,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4162,
											"end": 4281,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 4162,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4381,
											"end": 4387,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4370,
											"end": 4379,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4366,
											"end": 4388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4345,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4345,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4345,
											"end": 4398,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 4345,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4335,
											"end": 4398,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4335,
											"end": 4398,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4291,
											"end": 4408,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4415,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4415,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 4558,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 4421,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4511,
											"end": 4517,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4550,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4539,
											"end": 4551,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 4558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 4558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 4558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 4558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4771,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 4564,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4686,
											"end": 4697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4726,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 4765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4736,
											"end": 4765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4736,
											"end": 4765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4771,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4771,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4777,
											"end": 4932,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 4777,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4882,
											"end": 4893,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4882,
											"end": 4893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4915,
											"end": 4918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 4925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4903,
											"end": 4925,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4903,
											"end": 4925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4777,
											"end": 4932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4777,
											"end": 4932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4777,
											"end": 4932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4777,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4938,
											"end": 5046,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 4938,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 5033,
											"end": 5038,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 5015,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5040,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4938,
											"end": 5046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4938,
											"end": 5046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4938,
											"end": 5046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5052,
											"end": 5160,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5052,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5129,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 5147,
											"end": 5152,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5129,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 5129,
											"end": 5153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5129,
											"end": 5153,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 5129,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5124,
											"end": 5127,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5117,
											"end": 5154,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5052,
											"end": 5160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5052,
											"end": 5160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5052,
											"end": 5160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5895,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 5222,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 5448,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5427,
											"end": 5450,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5463,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5520,
											"end": 5524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5518,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5511,
											"end": 5525,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5497,
											"end": 5509,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5463,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 5463,
											"end": 5526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5463,
											"end": 5526,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5463,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5619,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5610,
											"end": 5626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5702,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5640,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5546,
											"end": 5713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5789,
											"end": 5794,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5785,
											"end": 5801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5815,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5872,
											"end": 5876,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5867,
											"end": 5870,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 5877,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5849,
											"end": 5861,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5815,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5815,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5815,
											"end": 5878,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5815,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5723,
											"end": 5888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5324,
											"end": 5895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 6172,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 5901,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6016,
											"end": 6026,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 6125,
											"end": 6128,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6037,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 6037,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6037,
											"end": 6129,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 6037,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6161,
											"end": 6165,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6152,
											"end": 6166,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6138,
											"end": 6166,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6138,
											"end": 6166,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 6172,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 6172,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 6172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 6172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 6172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6314,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 6178,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6271,
											"end": 6275,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6307,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 6301,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6294,
											"end": 6308,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6286,
											"end": 6308,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6286,
											"end": 6308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6314,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6380,
											"end": 7296,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 6380,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 6645,
											"end": 6650,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6574,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 6574,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6574,
											"end": 6651,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 6574,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6667,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 6769,
											"end": 6775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6764,
											"end": 6767,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6667,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 6667,
											"end": 6776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6667,
											"end": 6776,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 6667,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6660,
											"end": 6776,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6660,
											"end": 6776,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 6873,
											"end": 6878,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 6800,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6902,
											"end": 6909,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6940,
											"end": 6941,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6937,
											"end": 6950,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7013,
											"end": 7026,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 7151,
											"end": 7154,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7136,
											"end": 7149,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 7046,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7155,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 7046,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7155,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7155,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7178,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 7254,
											"end": 7260,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7178,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 7178,
											"end": 7261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7178,
											"end": 7261,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 7178,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7168,
											"end": 7261,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7168,
											"end": 7261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 7271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6965,
											"end": 6966,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6958,
											"end": 6967,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6953,
											"end": 6967,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6953,
											"end": 6967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 6918,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6922,
											"end": 6936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7287,
											"end": 7290,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7280,
											"end": 7290,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7280,
											"end": 7290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6550,
											"end": 7296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6550,
											"end": 7296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6550,
											"end": 7296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6380,
											"end": 7296,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6380,
											"end": 7296,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6380,
											"end": 7296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6380,
											"end": 7296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6380,
											"end": 7296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7767,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 7302,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7491,
											"end": 7495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7527,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7506,
											"end": 7532,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7506,
											"end": 7532,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7578,
											"end": 7587,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7564,
											"end": 7565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7562,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7542,
											"end": 7589,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7606,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 7755,
											"end": 7759,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7606,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 7606,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7606,
											"end": 7760,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 7606,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7598,
											"end": 7760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7598,
											"end": 7760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7767,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7767,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7833,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 7773,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7827,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7833,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7833,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7981,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 7839,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7889,
											"end": 7898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 7940,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 7949,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 7967,
											"end": 7972,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7949,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 7949,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7949,
											"end": 7973,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 7949,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7940,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 7940,
											"end": 7974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7940,
											"end": 7974,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 7940,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7922,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 7922,
											"end": 7975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7922,
											"end": 7975,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 7922,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7909,
											"end": 7975,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7909,
											"end": 7975,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7981,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7981,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7981,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7987,
											"end": 8113,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 7987,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8037,
											"end": 8046,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 8101,
											"end": 8106,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 8070,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 8070,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8057,
											"end": 8107,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8057,
											"end": 8107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7987,
											"end": 8113,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7987,
											"end": 8113,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7987,
											"end": 8113,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7987,
											"end": 8113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8119,
											"end": 8259,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 8119,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8216,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 8216,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8216,
											"end": 8253,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 8216,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8203,
											"end": 8253,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8203,
											"end": 8253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8119,
											"end": 8259,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8119,
											"end": 8259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8119,
											"end": 8259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8119,
											"end": 8259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8265,
											"end": 8424,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 8265,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8366,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 8411,
											"end": 8416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8366,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 8366,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8366,
											"end": 8417,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 8366,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8361,
											"end": 8364,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8354,
											"end": 8418,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8265,
											"end": 8424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8265,
											"end": 8424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8265,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8680,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 8430,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8575,
											"end": 8577,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 8670,
											"end": 8671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8655,
											"end": 8672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 8588,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8673,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 8588,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8680,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8680,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8773,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 8791,
											"end": 8796,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8773,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 8773,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8773,
											"end": 8797,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 8773,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8768,
											"end": 8771,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8761,
											"end": 8798,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8686,
											"end": 8804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 9032,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 8810,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8903,
											"end": 8907,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 8943,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8930,
											"end": 8939,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8926,
											"end": 8944,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8918,
											"end": 8944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8918,
											"end": 8944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 9022,
											"end": 9023,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9020,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9007,
											"end": 9024,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8998,
											"end": 9004,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 8954,
											"end": 9025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9025,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 8954,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 9032,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 9032,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 9032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 9032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 9032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9156,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 9038,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9125,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 9143,
											"end": 9148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9125,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 9125,
											"end": 9149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9125,
											"end": 9149,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 9125,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9120,
											"end": 9123,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9113,
											"end": 9150,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9311,
											"end": 9315,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9351,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9334,
											"end": 9352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9326,
											"end": 9352,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9326,
											"end": 9352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9362,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 9430,
											"end": 9431,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9432,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9406,
											"end": 9412,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9362,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 9362,
											"end": 9433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9362,
											"end": 9433,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 9362,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 9511,
											"end": 9513,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9500,
											"end": 9509,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9487,
											"end": 9493,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 9443,
											"end": 9515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9515,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 9443,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9525,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9525,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 9525,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9525,
											"end": 9597,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 9525,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9610,
											"end": 9727,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 9610,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9719,
											"end": 9720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9709,
											"end": 9721,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9733,
											"end": 9835,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 9733,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9774,
											"end": 9780,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9821,
											"end": 9828,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 9816,
											"end": 9818,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9809,
											"end": 9814,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9805,
											"end": 9819,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9829,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9791,
											"end": 9829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9791,
											"end": 9829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9733,
											"end": 9835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9733,
											"end": 9835,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9733,
											"end": 9835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9733,
											"end": 9835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9841,
											"end": 10021,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 9841,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9889,
											"end": 9966,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9886,
											"end": 9887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9879,
											"end": 9967,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9986,
											"end": 9990,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9976,
											"end": 9991,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10014,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10007,
											"end": 10008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10027,
											"end": 10308,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 10027,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10110,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 10132,
											"end": 10136,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10110,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 10110,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10110,
											"end": 10137,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 10110,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10098,
											"end": 10138,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10228,
											"end": 10238,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10202,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10189,
											"end": 10223,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10186,
											"end": 10248,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10271,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10183,
											"end": 10271,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 10251,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10271,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10183,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10301,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10287,
											"end": 10289,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10280,
											"end": 10302,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10027,
											"end": 10308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10027,
											"end": 10308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10027,
											"end": 10308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10314,
											"end": 10443,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 10314,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10348,
											"end": 10354,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10375,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 10375,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 10375,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10375,
											"end": 10395,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 10375,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10365,
											"end": 10395,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10365,
											"end": 10395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10404,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 10432,
											"end": 10436,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10404,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 10404,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10404,
											"end": 10437,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 10404,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10314,
											"end": 10443,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10314,
											"end": 10443,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10314,
											"end": 10443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10314,
											"end": 10443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10449,
											"end": 10756,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 10449,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10600,
											"end": 10618,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10589,
											"end": 10619,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10586,
											"end": 10642,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10586,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 10586,
											"end": 10642,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 10622,
											"end": 10640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10586,
											"end": 10642,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 10586,
											"end": 10642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10660,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 10682,
											"end": 10688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10660,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 10660,
											"end": 10689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10660,
											"end": 10689,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 10660,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10652,
											"end": 10689,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10652,
											"end": 10689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10744,
											"end": 10748,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10726,
											"end": 10749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10726,
											"end": 10749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10449,
											"end": 10756,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10449,
											"end": 10756,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10449,
											"end": 10756,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10449,
											"end": 10756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10910,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 10762,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10850,
											"end": 10853,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10837,
											"end": 10867,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 10901,
											"end": 10902,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10898,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10887,
											"end": 10890,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10762,
											"end": 10910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10993,
											"end": 10998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11075,
											"end": 11081,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 11034,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 11018,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11083,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 11018,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11009,
											"end": 11083,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11009,
											"end": 11083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11099,
											"end": 11104,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11092,
											"end": 11113,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11144,
											"end": 11148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11142,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11133,
											"end": 11149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11182,
											"end": 11185,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11168,
											"end": 11171,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11164,
											"end": 11180,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11161,
											"end": 11186,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11158,
											"end": 11270,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11158,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 11158,
											"end": 11270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 11189,
											"end": 11268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11158,
											"end": 11270,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 11158,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 11326,
											"end": 11332,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11324,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11316,
											"end": 11319,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 11279,
											"end": 11333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 11333,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 11279,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10999,
											"end": 11339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 11339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11358,
											"end": 11696,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 11358,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11413,
											"end": 11418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11462,
											"end": 11465,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11455,
											"end": 11459,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 11447,
											"end": 11453,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11439,
											"end": 11466,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11470,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 11470,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 11470,
											"end": 11549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11470,
											"end": 11549,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 11470,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11587,
											"end": 11593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11574,
											"end": 11594,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11612,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 11686,
											"end": 11689,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11678,
											"end": 11684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11671,
											"end": 11675,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11669,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11612,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 11612,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11612,
											"end": 11690,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 11612,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11603,
											"end": 11690,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11603,
											"end": 11690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11419,
											"end": 11696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11358,
											"end": 11696,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11358,
											"end": 11696,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11358,
											"end": 11696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11358,
											"end": 11696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11358,
											"end": 11696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 11785,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11793,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11836,
											"end": 11838,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11824,
											"end": 11833,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11822,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11811,
											"end": 11834,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11807,
											"end": 11839,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11804,
											"end": 11923,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11804,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 11804,
											"end": 11923,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11842,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 11842,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 11842,
											"end": 11921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11842,
											"end": 11921,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 11842,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11804,
											"end": 11923,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 11804,
											"end": 11923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11990,
											"end": 11991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11979,
											"end": 11988,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11975,
											"end": 11992,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 11993,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12020,
											"end": 12038,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12012,
											"end": 12018,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12009,
											"end": 12039,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12006,
											"end": 12123,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12006,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 12006,
											"end": 12123,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12042,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 12042,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 12042,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12042,
											"end": 12121,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 12042,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12006,
											"end": 12123,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 12006,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12147,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12201,
											"end": 12208,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12192,
											"end": 12198,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12181,
											"end": 12190,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12147,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 12147,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12147,
											"end": 12209,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12147,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12137,
											"end": 12209,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12137,
											"end": 12209,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11933,
											"end": 12219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12258,
											"end": 12260,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12284,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 12329,
											"end": 12336,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12320,
											"end": 12326,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12309,
											"end": 12318,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12305,
											"end": 12327,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12284,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 12284,
											"end": 12337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12284,
											"end": 12337,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 12284,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12274,
											"end": 12337,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12274,
											"end": 12337,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12229,
											"end": 12347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 12354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12502,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 12360,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12426,
											"end": 12435,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 12490,
											"end": 12495,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 12459,
											"end": 12496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12446,
											"end": 12496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12446,
											"end": 12496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12502,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12502,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12502,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12508,
											"end": 12671,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 12508,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12658,
											"end": 12663,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 12611,
											"end": 12664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12664,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12611,
											"end": 12664,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12606,
											"end": 12609,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12599,
											"end": 12665,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12508,
											"end": 12671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12508,
											"end": 12671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12508,
											"end": 12671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12677,
											"end": 12931,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 12677,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12786,
											"end": 12790,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12824,
											"end": 12826,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12813,
											"end": 12822,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12809,
											"end": 12827,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12801,
											"end": 12827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12801,
											"end": 12827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12919,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12906,
											"end": 12923,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12897,
											"end": 12903,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 12837,
											"end": 12924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12924,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12837,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12677,
											"end": 12931,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12677,
											"end": 12931,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12677,
											"end": 12931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12677,
											"end": 12931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12677,
											"end": 12931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 13027,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 12937,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12978,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13019,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13007,
											"end": 13020,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13000,
											"end": 13021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12989,
											"end": 13021,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12989,
											"end": 13021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 13027,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 13027,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 13027,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12937,
											"end": 13027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13033,
											"end": 13142,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 13033,
											"end": 13142,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13114,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 13129,
											"end": 13134,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13114,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 13114,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13114,
											"end": 13135,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 13114,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13109,
											"end": 13112,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13102,
											"end": 13136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13033,
											"end": 13142,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13033,
											"end": 13142,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13033,
											"end": 13142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13148,
											"end": 13358,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 13148,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13235,
											"end": 13239,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13275,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13262,
											"end": 13271,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13258,
											"end": 13276,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13250,
											"end": 13276,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13250,
											"end": 13276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13286,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 13348,
											"end": 13349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13337,
											"end": 13346,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13333,
											"end": 13350,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13324,
											"end": 13330,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13286,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 13286,
											"end": 13351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13286,
											"end": 13351,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 13286,
											"end": 13351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13148,
											"end": 13358,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13148,
											"end": 13358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13148,
											"end": 13358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13148,
											"end": 13358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13148,
											"end": 13358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13533,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 13364,
											"end": 13533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13448,
											"end": 13459,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13482,
											"end": 13488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13470,
											"end": 13489,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13522,
											"end": 13526,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13513,
											"end": 13527,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13498,
											"end": 13527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13498,
											"end": 13527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13539,
											"end": 13717,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 13539,
											"end": 13717,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13679,
											"end": 13709,
											"name": "PUSH",
											"source": 15,
											"value": "7072696365206D7573742062652067726561746572207468616E203000000000"
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13673,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13663,
											"end": 13677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13656,
											"end": 13710,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13539,
											"end": 13717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13539,
											"end": 13717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 14089,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 13723,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13865,
											"end": 13868,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 13950,
											"end": 13952,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 13945,
											"end": 13948,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13886,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 13886,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13886,
											"end": 13953,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 13886,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13879,
											"end": 13953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13879,
											"end": 13953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13962,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 14051,
											"end": 14054,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13962,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 13962,
											"end": 14055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13962,
											"end": 14055,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 13962,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14080,
											"end": 14082,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14075,
											"end": 14078,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14071,
											"end": 14083,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14064,
											"end": 14083,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14064,
											"end": 14083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 14089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 14089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 14089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 14089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14514,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 14095,
											"end": 14514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14261,
											"end": 14265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14301,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14297,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14284,
											"end": 14302,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14276,
											"end": 14302,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14276,
											"end": 14302,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14348,
											"end": 14357,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14342,
											"end": 14346,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14338,
											"end": 14358,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14334,
											"end": 14335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14323,
											"end": 14332,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14319,
											"end": 14336,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14312,
											"end": 14359,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14376,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 14502,
											"end": 14506,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14376,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 14376,
											"end": 14507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14376,
											"end": 14507,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 14376,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14368,
											"end": 14507,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14368,
											"end": 14507,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14514,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14514,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14520,
											"end": 14700,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 14520,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14568,
											"end": 14645,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14565,
											"end": 14566,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14646,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 14662,
											"end": 14663,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 14655,
											"end": 14670,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14689,
											"end": 14693,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14686,
											"end": 14687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14679,
											"end": 14694,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14900,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 14706,
											"end": 14900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14746,
											"end": 14750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 14784,
											"end": 14785,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14766,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 14766,
											"end": 14786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14766,
											"end": 14786,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 14766,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14761,
											"end": 14786,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14761,
											"end": 14786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 14818,
											"end": 14819,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 14800,
											"end": 14820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14795,
											"end": 14820,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14795,
											"end": 14820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14844,
											"end": 14845,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14841,
											"end": 14842,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14829,
											"end": 14846,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14829,
											"end": 14846,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14868,
											"end": 14869,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14859,
											"end": 14870,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 14873,
											"end": 14891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14900,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14900,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14900,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14900,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14906,
											"end": 15066,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 14906,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15046,
											"end": 15058,
											"name": "PUSH",
											"source": 15,
											"value": "6E6F742073656C6C657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 15042,
											"end": 15043,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15034,
											"end": 15040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15030,
											"end": 15044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15023,
											"end": 15059,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14906,
											"end": 15066,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14906,
											"end": 15066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15072,
											"end": 15438,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 15072,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15214,
											"end": 15217,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15235,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 15294,
											"end": 15297,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15235,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 15235,
											"end": 15302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15235,
											"end": 15302,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 15235,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15228,
											"end": 15302,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15228,
											"end": 15302,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15311,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 15400,
											"end": 15403,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15311,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 15311,
											"end": 15404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15311,
											"end": 15404,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 15311,
											"end": 15404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15429,
											"end": 15431,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15424,
											"end": 15427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15420,
											"end": 15432,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15432,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15432,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15072,
											"end": 15438,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15072,
											"end": 15438,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15072,
											"end": 15438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15072,
											"end": 15438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15444,
											"end": 15863,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 15444,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15610,
											"end": 15614,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15648,
											"end": 15650,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15637,
											"end": 15646,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15633,
											"end": 15651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15651,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15697,
											"end": 15706,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15691,
											"end": 15695,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15687,
											"end": 15707,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15683,
											"end": 15684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15672,
											"end": 15681,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15668,
											"end": 15685,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15661,
											"end": 15708,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15725,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 15851,
											"end": 15855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15725,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 15725,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15725,
											"end": 15856,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 15725,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15717,
											"end": 15856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15717,
											"end": 15856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15444,
											"end": 15863,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15444,
											"end": 15863,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15444,
											"end": 15863,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15444,
											"end": 15863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15869,
											"end": 16049,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 15869,
											"end": 16049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15917,
											"end": 15994,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15907,
											"end": 15995,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16014,
											"end": 16018,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 16004,
											"end": 16019,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16038,
											"end": 16042,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16035,
											"end": 16036,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16028,
											"end": 16043,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16236,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16270,
											"end": 16273,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16259,
											"end": 16268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16255,
											"end": 16274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16247,
											"end": 16274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16247,
											"end": 16274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16284,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 16352,
											"end": 16353,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16350,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16337,
											"end": 16354,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16284,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 16284,
											"end": 16355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16284,
											"end": 16355,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 16284,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 16433,
											"end": 16435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16422,
											"end": 16431,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16409,
											"end": 16415,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 16365,
											"end": 16437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16447,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 16515,
											"end": 16517,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16504,
											"end": 16513,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16500,
											"end": 16518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16491,
											"end": 16497,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16447,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 16447,
											"end": 16519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16447,
											"end": 16519,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 16447,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 16597,
											"end": 16599,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16586,
											"end": 16595,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16582,
											"end": 16600,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16573,
											"end": 16579,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 16529,
											"end": 16601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 16529,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16763,
											"end": 16767,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16801,
											"end": 16803,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16790,
											"end": 16799,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16786,
											"end": 16804,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16778,
											"end": 16804,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16778,
											"end": 16804,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16814,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 16882,
											"end": 16883,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16871,
											"end": 16880,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16867,
											"end": 16884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16858,
											"end": 16864,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16814,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 16814,
											"end": 16885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16814,
											"end": 16885,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 16814,
											"end": 16885,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16895,
											"end": 16967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 16963,
											"end": 16965,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16952,
											"end": 16961,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16948,
											"end": 16966,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16939,
											"end": 16945,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16895,
											"end": 16967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 16895,
											"end": 16967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16895,
											"end": 16967,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 16895,
											"end": 16967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16977,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 17045,
											"end": 17047,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17034,
											"end": 17043,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17030,
											"end": 17048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17021,
											"end": 17027,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16977,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 16977,
											"end": 17049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16977,
											"end": 17049,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 16977,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 17056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17183,
											"end": 17187,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17221,
											"end": 17223,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17210,
											"end": 17219,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17206,
											"end": 17224,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17198,
											"end": 17224,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17198,
											"end": 17224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17234,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 17302,
											"end": 17303,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17300,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17287,
											"end": 17304,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17278,
											"end": 17284,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17234,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 17234,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17234,
											"end": 17305,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 17234,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 17383,
											"end": 17385,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17372,
											"end": 17381,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17368,
											"end": 17386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17359,
											"end": 17365,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 17315,
											"end": 17387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17400,
											"end": 17633,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 17400,
											"end": 17633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17439,
											"end": 17442,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 17480,
											"end": 17485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17462,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 17462,
											"end": 17486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17462,
											"end": 17486,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 17462,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17453,
											"end": 17486,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17453,
											"end": 17486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17508,
											"end": 17574,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17501,
											"end": 17506,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17498,
											"end": 17575,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17495,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 17495,
											"end": 17598,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17578,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 17578,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 17578,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17578,
											"end": 17596,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 17578,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17495,
											"end": 17598,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 17495,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17625,
											"end": 17626,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 17618,
											"end": 17623,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17614,
											"end": 17627,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17607,
											"end": 17627,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17607,
											"end": 17627,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17400,
											"end": 17633,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17400,
											"end": 17633,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17400,
											"end": 17633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17400,
											"end": 17633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17830,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 17639,
											"end": 17830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17679,
											"end": 17682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17698,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 17716,
											"end": 17717,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17698,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 17698,
											"end": 17718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17698,
											"end": 17718,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 17698,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17693,
											"end": 17718,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17693,
											"end": 17718,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17732,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 17750,
											"end": 17751,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17732,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 17732,
											"end": 17752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17732,
											"end": 17752,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 17732,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17727,
											"end": 17752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17727,
											"end": 17752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17775,
											"end": 17776,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17772,
											"end": 17773,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17768,
											"end": 17777,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17761,
											"end": 17777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17761,
											"end": 17777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17796,
											"end": 17799,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17793,
											"end": 17794,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17790,
											"end": 17800,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17787,
											"end": 17823,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17787,
											"end": 17823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 17787,
											"end": 17823,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17803,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 17803,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 17803,
											"end": 17821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17803,
											"end": 17821,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 17803,
											"end": 17821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17787,
											"end": 17823,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 17787,
											"end": 17823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17830,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17830,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17836,
											"end": 18011,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 17836,
											"end": 18011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17976,
											"end": 18003,
											"name": "PUSH",
											"source": 15,
											"value": "4D61726B65743A746F55696E743235365F6F766572666C6F7700000000000000"
										},
										{
											"begin": 17972,
											"end": 17973,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17970,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17960,
											"end": 17974,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17953,
											"end": 18004,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17836,
											"end": 18011,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17836,
											"end": 18011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18017,
											"end": 18383,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 18017,
											"end": 18383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18159,
											"end": 18162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 18244,
											"end": 18246,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 18239,
											"end": 18242,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 18180,
											"end": 18247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18173,
											"end": 18247,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18173,
											"end": 18247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18256,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 18345,
											"end": 18348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18256,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 18256,
											"end": 18349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18256,
											"end": 18349,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 18256,
											"end": 18349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18374,
											"end": 18376,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18369,
											"end": 18372,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18365,
											"end": 18377,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18358,
											"end": 18377,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18358,
											"end": 18377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18017,
											"end": 18383,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18017,
											"end": 18383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18017,
											"end": 18383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18017,
											"end": 18383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18808,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 18389,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18555,
											"end": 18559,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18593,
											"end": 18595,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18582,
											"end": 18591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18578,
											"end": 18596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18570,
											"end": 18596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18570,
											"end": 18596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18642,
											"end": 18651,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18636,
											"end": 18640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18632,
											"end": 18652,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18628,
											"end": 18629,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18617,
											"end": 18626,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18613,
											"end": 18630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18606,
											"end": 18653,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18670,
											"end": 18801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 18796,
											"end": 18800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18670,
											"end": 18801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 18670,
											"end": 18801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18670,
											"end": 18801,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 18670,
											"end": 18801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18662,
											"end": 18801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18662,
											"end": 18801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18808,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18814,
											"end": 18985,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 18814,
											"end": 18985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18954,
											"end": 18977,
											"name": "PUSH",
											"source": 15,
											"value": "746F55696E743235365F6F75744F66426F756E64730000000000000000000000"
										},
										{
											"begin": 18950,
											"end": 18951,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18942,
											"end": 18948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18938,
											"end": 18952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18931,
											"end": 18978,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18814,
											"end": 18985,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18814,
											"end": 18985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18991,
											"end": 19357,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 18991,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19133,
											"end": 19136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19154,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 19218,
											"end": 19220,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 19213,
											"end": 19216,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19154,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 19154,
											"end": 19221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19154,
											"end": 19221,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 19154,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19221,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19230,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 19319,
											"end": 19322,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19230,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 19230,
											"end": 19323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19230,
											"end": 19323,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 19230,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19348,
											"end": 19350,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19346,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19339,
											"end": 19351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19332,
											"end": 19351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19332,
											"end": 19351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18991,
											"end": 19357,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18991,
											"end": 19357,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18991,
											"end": 19357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18991,
											"end": 19357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19782,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 19363,
											"end": 19782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19529,
											"end": 19533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19569,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19556,
											"end": 19565,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19552,
											"end": 19570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19544,
											"end": 19570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19544,
											"end": 19570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19616,
											"end": 19625,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19610,
											"end": 19614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19606,
											"end": 19626,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19602,
											"end": 19603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19591,
											"end": 19600,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19587,
											"end": 19604,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19580,
											"end": 19627,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19644,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 19770,
											"end": 19774,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19644,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 19644,
											"end": 19775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19644,
											"end": 19775,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 19644,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19636,
											"end": 19775,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19636,
											"end": 19775,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19782,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19788,
											"end": 19904,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 19788,
											"end": 19904,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19858,
											"end": 19879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 19873,
											"end": 19878,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19858,
											"end": 19879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 19858,
											"end": 19879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19858,
											"end": 19879,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 19858,
											"end": 19879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19851,
											"end": 19856,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19848,
											"end": 19880,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 19838,
											"end": 19898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 19838,
											"end": 19898,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19894,
											"end": 19895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19891,
											"end": 19892,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19884,
											"end": 19896,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19838,
											"end": 19898,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 19838,
											"end": 19898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19788,
											"end": 19904,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19788,
											"end": 19904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19910,
											"end": 20047,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 19910,
											"end": 20047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19964,
											"end": 19969,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19995,
											"end": 20001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19989,
											"end": 20002,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19980,
											"end": 20002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19980,
											"end": 20002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 20035,
											"end": 20040,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 20011,
											"end": 20041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20041,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 20011,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19910,
											"end": 20047,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19910,
											"end": 20047,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19910,
											"end": 20047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19910,
											"end": 20047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19910,
											"end": 20047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20053,
											"end": 20398,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 20053,
											"end": 20398,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20120,
											"end": 20126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20169,
											"end": 20171,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20157,
											"end": 20166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20148,
											"end": 20155,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20144,
											"end": 20167,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20140,
											"end": 20172,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 20137,
											"end": 20256,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20137,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 20137,
											"end": 20256,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20175,
											"end": 20254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 20175,
											"end": 20254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 20175,
											"end": 20254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20175,
											"end": 20254,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 20175,
											"end": 20254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20137,
											"end": 20256,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 20137,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20295,
											"end": 20296,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20320,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 20373,
											"end": 20380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20364,
											"end": 20370,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20353,
											"end": 20362,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20349,
											"end": 20371,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20320,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 20320,
											"end": 20381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20320,
											"end": 20381,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 20320,
											"end": 20381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20310,
											"end": 20381,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20310,
											"end": 20381,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20266,
											"end": 20391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20053,
											"end": 20398,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20053,
											"end": 20398,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20053,
											"end": 20398,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20053,
											"end": 20398,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20053,
											"end": 20398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20404,
											"end": 20567,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 20404,
											"end": 20567,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20544,
											"end": 20559,
											"name": "PUSH",
											"source": 15,
											"value": "7472616E73666572206661696C00000000000000000000000000000000000000"
										},
										{
											"begin": 20540,
											"end": 20541,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20532,
											"end": 20538,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20528,
											"end": 20542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20521,
											"end": 20560,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20404,
											"end": 20567,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20404,
											"end": 20567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20573,
											"end": 20939,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 20573,
											"end": 20939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20715,
											"end": 20718,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20736,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 20800,
											"end": 20802,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 20795,
											"end": 20798,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20736,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 20736,
											"end": 20803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20736,
											"end": 20803,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 20736,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20729,
											"end": 20803,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20729,
											"end": 20803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20812,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 20901,
											"end": 20904,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20812,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 20812,
											"end": 20905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20812,
											"end": 20905,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 20812,
											"end": 20905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20930,
											"end": 20932,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20925,
											"end": 20928,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20921,
											"end": 20933,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20914,
											"end": 20933,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20914,
											"end": 20933,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20573,
											"end": 20939,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20573,
											"end": 20939,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20573,
											"end": 20939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20573,
											"end": 20939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20945,
											"end": 21364,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 20945,
											"end": 21364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21111,
											"end": 21115,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21149,
											"end": 21151,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21138,
											"end": 21147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21134,
											"end": 21152,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21126,
											"end": 21152,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21126,
											"end": 21152,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21198,
											"end": 21207,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21192,
											"end": 21196,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21188,
											"end": 21208,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21184,
											"end": 21185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21182,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21169,
											"end": 21186,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21162,
											"end": 21209,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21226,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 21352,
											"end": 21356,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21226,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 21226,
											"end": 21357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21226,
											"end": 21357,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 21226,
											"end": 21357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21218,
											"end": 21357,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21218,
											"end": 21357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20945,
											"end": 21364,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20945,
											"end": 21364,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20945,
											"end": 21364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20945,
											"end": 21364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21547,
											"end": 21551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21585,
											"end": 21588,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 21574,
											"end": 21583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21570,
											"end": 21589,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21562,
											"end": 21589,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21562,
											"end": 21589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21599,
											"end": 21670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 21667,
											"end": 21668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21656,
											"end": 21665,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21652,
											"end": 21669,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21643,
											"end": 21649,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 21599,
											"end": 21670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 21599,
											"end": 21670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21599,
											"end": 21670,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 21599,
											"end": 21670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21680,
											"end": 21752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 21748,
											"end": 21750,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21737,
											"end": 21746,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21733,
											"end": 21751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21724,
											"end": 21730,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21680,
											"end": 21752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 21680,
											"end": 21752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21680,
											"end": 21752,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 21680,
											"end": 21752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21762,
											"end": 21834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 21830,
											"end": 21832,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21819,
											"end": 21828,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21815,
											"end": 21833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21806,
											"end": 21812,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21762,
											"end": 21834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 21762,
											"end": 21834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21762,
											"end": 21834,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 21762,
											"end": 21834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21844,
											"end": 21916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 21912,
											"end": 21914,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 21901,
											"end": 21910,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21897,
											"end": 21915,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21888,
											"end": 21894,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21844,
											"end": 21916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 21844,
											"end": 21916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21844,
											"end": 21916,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 21844,
											"end": 21916,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21370,
											"end": 21923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21929,
											"end": 22109,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 21929,
											"end": 22109,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21977,
											"end": 22054,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21974,
											"end": 21975,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21967,
											"end": 22055,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22078,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 22071,
											"end": 22072,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 22064,
											"end": 22079,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22098,
											"end": 22102,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22095,
											"end": 22096,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22088,
											"end": 22103,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/NFTmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy(uint256)": "d96a094a",
							"cancel(uint256)": "40e58ee5",
							"change(uint256,uint256)": "3a52c7c2",
							"erc20()": "785e9e86",
							"erc721()": "bca6ce64",
							"getAllNFTs()": "e0391b09",
							"getMyNFTs()": "629cb2e4",
							"getOrderLength()": "9d4971b7",
							"isListed(uint256)": "fcce4883",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"orders(uint256)": "a85c38ef",
							"toUint256(bytes,uint256)": "b5cdf924"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"CancelOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Deal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousprice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"change\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTmarket.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTmarket.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"isListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"}],\"name\":\"toUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NFTmarket.sol\":\"NFTmarket\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/NFTmarket.sol\":{\"keccak256\":\"0xcf8f5f21ff0466a28a05a7866054ff9ee51a61703efeabff0044bb6125569c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://513728be761c72eed0e1d86a5ea8d6ee2b4e563dc236c77455bca47d79ec7117\",\"dweb:/ipfs/QmcBoua4uZbkinZePo2EFUSLT92Kpg9J8jP9ToJChW3nAS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3414,
								"contract": "src/NFTmarket.sol:NFTmarket",
								"label": "erc20",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 3417,
								"contract": "src/NFTmarket.sol:NFTmarket",
								"label": "erc721",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)1881"
							},
							{
								"astId": 3432,
								"contract": "src/NFTmarket.sol:NFTmarket",
								"label": "IDinOrder",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(Order)3427_storage)"
							},
							{
								"astId": 3436,
								"contract": "src/NFTmarket.sol:NFTmarket",
								"label": "orders",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_struct(Order)3427_storage)dyn_storage"
							},
							{
								"astId": 3440,
								"contract": "src/NFTmarket.sol:NFTmarket",
								"label": "IDofOrder",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Order)3427_storage)dyn_storage": {
								"base": "t_struct(Order)3427_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTmarket.Order[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1881": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Order)3427_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTmarket.Order)",
								"numberOfBytes": "32",
								"value": "t_struct(Order)3427_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Order)3427_storage": {
								"encoding": "inplace",
								"label": "struct NFTmarket.Order",
								"members": [
									{
										"astId": 3422,
										"contract": "src/NFTmarket.sol:NFTmarket",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3424,
										"contract": "src/NFTmarket.sol:NFTmarket",
										"label": "tokenID",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3426,
										"contract": "src/NFTmarket.sol:NFTmarket",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/NFTmarket.sol:75:31:\n   |\n75 |     function onERC721Received(address operator, address from, uint256 tokenID, bytes calldata data) external returns (bytes4) {\n   |                               ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2502,
					"file": "src/NFTmarket.sol",
					"start": 2486
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1957
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 1958,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1957,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1957,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								1957
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1957
						],
						"ERC165": [
							2236
						],
						"ERC721": [
							1764
						],
						"IERC165": [
							2248
						],
						"IERC721": [
							1881
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1927
						],
						"IERC721Receiver": [
							1899
						],
						"Strings": [
							2212
						]
					},
					"id": 1765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1882,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 758,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1881,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1900,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 760,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1899,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1928,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 762,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 1958,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1957,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 2213,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 766,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2212,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 2237,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 768,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2248,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 769,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2236,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1765,
							"sourceUnit": 137,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 771,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1957,
										"src": "804:7:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2236,
										"src": "813:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "821:7:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1927,
										"src": "830:15:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 782,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:4"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1764,
							"linearizedBaseContracts": [
								1764,
								89,
								1927,
								1881,
								2236,
								2248,
								1957
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 786,
									"libraryName": {
										"id": 784,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2212,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 787,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 789,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 793,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 791,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 797,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 795,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 796,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 801,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 808,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1764,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 807,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 806,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 804,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 805,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 816,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 817,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 821,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 825,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1764,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2235,
										2247
									],
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 838,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 837,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1881",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 844,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1927,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1927_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1927_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 843,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1927",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 851,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 849,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1764_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2235,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 835,
												"id": 854,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 832,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 830,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2236,
												"src": "1637:6:4"
											},
											{
												"id": 831,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2248,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 827,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1764,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1806
									],
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 864,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 865,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 871,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 870,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 876,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 879,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 881,
													"indexExpression": {
														"id": 880,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 863,
												"id": 882,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1764,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1814
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 891,
												"id": 895,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1764,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1912
									],
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 903,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 902,
												"id": 904,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1764,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1918
									],
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 912,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 790,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 911,
												"id": 913,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1764,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 927,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 929,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 934,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 932,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 942,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 943,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2025,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 939,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 922,
												"id": 949,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1764,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 956,
												"id": 958,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 954,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1764,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 971,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1567,
															1633
														],
														"referencedDeclaration": 1567,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1764,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1870
									],
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 985,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 984,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 983,
												"id": 991,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1764,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1002,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1001,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1764,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1880
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1019,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1020,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1023,
													"indexExpression": {
														"id": 1022,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1024,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1764,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1846
									],
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1037,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1042,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1048,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1051,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [
														{
															"id": 1054,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1056,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1053,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1064,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1065,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1066,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1063,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1068,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1764,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1836
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1082,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1090,
															1116
														],
														"referencedDeclaration": 1116,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1764,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1826
									],
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1112,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1108,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1764,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1124,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1126,
													"indexExpression": {
														"id": 1125,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1127,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1764,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1137,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1139,
													"indexExpression": {
														"id": 1138,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1140,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1764,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1155,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1161,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1164,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1165,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1163,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1169,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1168,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1171,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1176,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1764,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1189,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1190,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1191,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1188,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1194,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1195,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1210,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1206,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1207,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1205,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1209,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 1211,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 1204,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1201,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1200,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1203,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1764,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 1229,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1223,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1225,
																"indexExpression": {
																	"id": 1224,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1226,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1228,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1219,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1764,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1243,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [
														{
															"id": 1246,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1245,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1249,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1256,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1257,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1258,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1255,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1260,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1263,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1264,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1270,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1274,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1275,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1269,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1567,
																		1633
																	],
																	"referencedDeclaration": 1633,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1281,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 1288,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1282,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1284,
																			"indexExpression": {
																				"id": 1283,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1244,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 1303,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1297,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1299,
																			"indexExpression": {
																				"id": 1298,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1234,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1306,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1308,
														"indexExpression": {
															"id": 1307,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1309,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1313,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1312,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 1318,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1319,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1764,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1336,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1335,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1341,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1345
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1344,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"id": 1347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1346,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1362,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1361,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1367,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1764,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1380,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1379,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1386,
															1412
														],
														"referencedDeclaration": 1412,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1764,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1397,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1408,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1401,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1764,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1425,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1420,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1432,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1433,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1439,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1438,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1441,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1764,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1469,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 1468,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1462,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1461,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1467,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1504,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"arguments": [
														{
															"id": 1473,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1472,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1481,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1482,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1492,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1493,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1502,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 1501,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1496,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1497,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1498,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1495,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1500,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1488,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1487,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1490,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1764,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1515,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1523,
															1549
														],
														"referencedDeclaration": 1549,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1764,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1538,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1541,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1764,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1561,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1562,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1567,
															1633
														],
														"referencedDeclaration": 1633,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1764,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1579,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1580,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1588
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1588,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1624,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1587,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1592,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1589,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1593,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1574,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1594,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1599,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1600,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1574,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1604,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1605,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1574,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1603,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1614,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1613,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1610,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1609,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1612,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1615,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1623,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1622,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1617,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1588,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1618,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1619,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1616,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1789,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1621,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1626,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"id": 1627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1629,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1764,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1643,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1654,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1653,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1650,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1649,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1652,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1655,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1658,
															"indexExpression": {
																"id": 1656,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1659,
														"indexExpression": {
															"id": 1657,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1660,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1664,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1665,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1663,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1764,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1679
												],
												"declarations": [
													{
														"constant": false,
														"id": 1679,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1698,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1678,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1683,
												"initialValue": {
													"arguments": [
														{
															"id": 1681,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1680,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1684,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1695,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1694,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1691,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1690,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1693,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1696,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1679,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1697,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1764,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1711,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1760,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1740,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1733,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1729,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1727,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1730,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1899,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1899_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1731,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1898,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1732,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1739,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1738,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1735,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1704,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1734,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1736,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1737,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1741,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1728,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1727,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1741,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1726,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1757,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1745,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1743,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1746,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1755,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1743,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1743,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1754,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1756,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1753,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1750,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1704,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1749,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1751,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1752,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1758,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1744,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1743,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1758,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1742,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1720,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1722,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1723,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1724,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1704,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1716,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1899,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1899_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1899",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1898,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1759,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1764,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1765,
							"src": "776:16926:4",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2248
						],
						"IERC721": [
							1881
						]
					},
					"id": 1882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 2249,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1767,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2248,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1770,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2248,
										"src": "287:7:5"
									},
									"id": 1771,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1769,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1881,
							"linearizedBaseContracts": [
								1881,
								2248
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1780,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1789,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1798,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1881,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1881,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1881,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1881,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1881,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1881,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1881,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1881,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1881,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1899
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1884,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1899,
							"linearizedBaseContracts": [
								1899
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1899,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1900,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1881
						],
						"IERC721Metadata": [
							1927
						]
					},
					"id": 1928,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1928,
							"sourceUnit": 1882,
							"src": "153:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1902,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1881,
										"src": "161:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1905,
										"name": "IERC721",
										"nameLocations": [
											"357:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "357:7:7"
									},
									"id": 1906,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1904,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1927,
							"linearizedBaseContracts": [
								1927,
								1881,
								2248
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:7"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:7"
									},
									"scope": 1927,
									"src": "434:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:7"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "600:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:7"
									},
									"scope": 1927,
									"src": "559:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:7"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1923,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:7"
									},
									"scope": 1927,
									"src": "716:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1928,
							"src": "328:463:7",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						}
					],
					"src": "127:665:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1957
						]
					},
					"id": 1958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1929,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1957,
							"linearizedBaseContracts": [
								1957
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1935,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1937,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1957,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1944,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1946,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1957,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1952,
												"id": 1954,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1957,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1958,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3302
						],
						"SignedMath": [
							3407
						],
						"Strings": [
							2212
						]
					},
					"id": 2213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2213,
							"sourceUnit": 3303,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1960,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3302,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2213,
							"sourceUnit": 3408,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1962,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3407,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1964,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2212,
							"linearizedBaseContracts": [
								2212
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1967,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1965,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1966,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1970,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1968,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1969,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1977,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 2024,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 2023,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1986
														],
														"declarations": [
															{
																"constant": false,
																"id": 1986,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2023,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1985,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1993,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1989,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1980,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1987,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3302,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3302_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3122,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1995
														],
														"declarations": [
															{
																"constant": false,
																"id": 1995,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2023,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1994,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2000,
														"initialValue": {
															"arguments": [
																{
																	"id": 1998,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1996,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															2002
														],
														"declarations": [
															{
																"constant": false,
																"id": 2002,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 2023,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2003,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1995,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1986,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 2004,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 2019,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 2006,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2002,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2008,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1967,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2002,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1980,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 2009,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1980,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2013,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2014,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1980,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2018,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 2017,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2020,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 2021,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1984,
														"id": 2022,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1982,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 2212,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2045,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2043,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3407,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3407_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3406,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2042,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2033,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2032,
												"id": 2049,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2027,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 2212,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 2069,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2063,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2054,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2061,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3302,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3302_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3244,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2059,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2071,
																	2154,
																	2174
																],
																"referencedDeclaration": 2154,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2058,
														"id": 2068,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 2212,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													2082
												],
												"declarations": [
													{
														"constant": false,
														"id": 2082,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2153,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2084,
												"initialValue": {
													"id": 2083,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2074,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													2086
												],
												"declarations": [
													{
														"constant": false,
														"id": 2086,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2153,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2085,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2095,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2090,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2087,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2096,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2098,
														"indexExpression": {
															"hexValue": "30",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2102,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2104,
														"indexExpression": {
															"hexValue": "31",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 2136,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2122,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2086,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2124,
																	"indexExpression": {
																		"id": 2123,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2125,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2129,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2126,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2131,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2132,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2135,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2116,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2137,
												"initializationExpression": {
													"assignments": [
														2109
													],
													"declarations": [
														{
															"constant": false,
															"id": 2109,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2137,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2108,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2115,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2111,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 2119,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2121,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2138,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2147,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 2146,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2142,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2143,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2141,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2145,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2150,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2148,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2080,
												"id": 2152,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2078,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 2212,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2167,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2157,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2165,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2163,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2170,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2162,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2071,
															2154,
															2174
														],
														"referencedDeclaration": 2154,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2172,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 2212,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2186,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2184,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2179,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2189,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2198,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2177,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2196,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2195,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2204,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2179,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2202,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2201,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2183,
												"id": 2209,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 2212,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2213,
							"src": "251:2847:9",
							"usedErrors": [
								1977
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2236
						],
						"IERC165": [
							2248
						]
					},
					"id": 2237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2237,
							"sourceUnit": 2249,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2215,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2248,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2218,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2248,
										"src": "687:7:10"
									},
									"id": 2219,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2217,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2236,
							"linearizedBaseContracts": [
								2236,
								2248
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2247
									],
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2227,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2229,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2248_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2248_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2228,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2248",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2226,
												"id": 2233,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2221,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 2236,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2237,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2248
						]
					},
					"id": 2249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2238,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2239,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2248,
							"linearizedBaseContracts": [
								2248
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2241,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 2248,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2249,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3302
						]
					},
					"id": 3303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2251,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3302,
							"linearizedBaseContracts": [
								3302
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2254,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2259,
									"members": [
										{
											"id": 2255,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2256,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2257,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2258,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2289,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2272
														],
														"declarations": [
															{
																"constant": false,
																"id": 2272,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2289,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2271,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2276,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2273,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2274,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2284,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2282,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2270,
															"id": 2283,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2286,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2287,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2270,
														"id": 2288,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3302,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2317,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2303,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2294,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2310,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2308,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2302,
															"id": 2309,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2312,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2313,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2296,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2315,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2302,
														"id": 2316,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3302,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2359,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2338,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2336,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2330,
															"id": 2337,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2340
														],
														"declarations": [
															{
																"constant": false,
																"id": 2340,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2359,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2339,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2344,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2324,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2345,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2340,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2346,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2324,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2354,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2352,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2330,
															"id": 2353,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2356,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2340,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2357,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2330,
														"id": 2358,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3302,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2387,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2373,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2380,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2378,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2372,
															"id": 2379,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2382,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2364,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2366,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2385,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2372,
														"id": 2386,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3302,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2415,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2401,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2408,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2406,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2400,
															"id": 2407,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2410,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2411,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2413,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2400,
														"id": 2414,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3302,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2427,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2428,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2422,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2431,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2422,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2430,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2426,
												"id": 2433,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3302,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2445,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2438,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2446,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2440,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2449,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2440,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2448,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2438,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2444,
												"id": 2451,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3302,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2463,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2464,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2458,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2466,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2467,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2468,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2458,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2470,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2462,
												"id": 2474,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3302,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2486,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2481,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2494,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2493,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2489,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2490,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2485,
															"id": 2492,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2495,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2499,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2479,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2502,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2503,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2481,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2485,
												"id": 2508,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3302,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2634,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2523
														],
														"declarations": [
															{
																"constant": false,
																"id": 2523,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2527,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2524,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2525,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2529
														],
														"declarations": [
															{
																"constant": false,
																"id": 2529,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2530,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2529,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2513,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2515,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2531,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2532,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2540,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2539,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2535,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2536,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2521,
																	"id": 2538,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2541,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2542,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2548,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2547,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2544,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2546,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2550
														],
														"declarations": [
															{
																"constant": false,
																"id": 2550,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2551,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2517,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2529,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2529,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2550,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2550,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2550,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2513,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2515,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2552,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2554
														],
														"declarations": [
															{
																"constant": false,
																"id": 2554,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2553,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2561,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2555,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2557,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2559,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2517,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2517,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2523,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2554,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2554,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2554,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2554,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2554,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2562,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2563,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2523,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2564,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2565,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2554,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2568,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2570
														],
														"declarations": [
															{
																"constant": false,
																"id": 2570,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2569,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2577,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2572,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2578,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2580,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2581,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2585,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2586,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2588,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2589,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2593,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2594,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2596,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2597,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2601,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2602,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2604,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2605,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2609,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2610,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2612,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2613,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2617,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2618,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2620,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2621,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2625,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2627,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2628,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2631,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2632,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2521,
														"id": 2633,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2511,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3302,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2678,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2652
												],
												"declarations": [
													{
														"constant": false,
														"id": 2652,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2678,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2658,
												"initialValue": {
													"arguments": [
														{
															"id": 2654,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2655,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2641,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2656,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2643,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2653,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2636,
															2679
														],
														"referencedDeclaration": 2636,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2660,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2646,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2259",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2259",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2659,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3301,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2259_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2663,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2664,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2641,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2665,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2643,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2662,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2675,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2674,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2670,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2652,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2673,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2676,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2652,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2650,
												"id": 2677,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2259",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2645,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2644,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2259,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2259,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2259",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3302,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2693,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2692,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2686,
															"id": 2691,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2695
												],
												"declarations": [
													{
														"constant": false,
														"id": 2695,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2790,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2698,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2682,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2697,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2958,
																			2993
																		],
																		"referencedDeclaration": 2958,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2702,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2789,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2705,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2706,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2707,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2708,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2711,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2715,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2716,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2717,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2718,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2719,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2722,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2726,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2727,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2728,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2729,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2730,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2733,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2737,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2738,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2739,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2740,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2741,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2744,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2748,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2749,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2750,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2751,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2752,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2755,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2759,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2760,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2761,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2762,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2763,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2766,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2770,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2771,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2772,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2773,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2774,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2777,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2781,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2783,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2784,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2682,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2785,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2695,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2782,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2686,
														"id": 2788,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2680,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3302,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2824,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2803
														],
														"declarations": [
															{
																"constant": false,
																"id": 2803,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2824,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2807,
														"initialValue": {
															"arguments": [
																{
																	"id": 2805,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2794,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2804,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2791,
																	2826
																],
																"referencedDeclaration": 2791,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2808,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2810,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2797,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2809,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3301,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2259_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2812,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2813,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2815,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2794,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2821,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2801,
														"id": 2823,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2792,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2259",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2795,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2259,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2259,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2259",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3302,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2957,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2835
												],
												"declarations": [
													{
														"constant": false,
														"id": 2835,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2957,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2837,
												"initialValue": {
													"hexValue": "30",
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2954,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2838,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2852,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2851,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2843,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2846,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2850,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2867,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2866,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2858,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2861,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2882,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2881,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2897,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2896,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2912,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2911,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2903,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2906,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2907,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2910,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2927,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2926,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2918,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2921,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2922,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2925,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2942,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2941,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2933,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2936,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2937,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2940,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2943,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2953,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2952,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2951,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2955,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2835,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2833,
												"id": 2956,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3302,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2992,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2991,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2970
														],
														"declarations": [
															{
																"constant": false,
																"id": 2970,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2991,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2974,
														"initialValue": {
															"arguments": [
																{
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2971,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2958,
																	2993
																],
																"referencedDeclaration": 2958,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2977,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2964,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2976,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3301,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2259_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2981,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2979,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2980,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2970,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2982,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2961,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2988,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2968,
														"id": 2990,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2959,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2259",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2962,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2259,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2259,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2259",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3302,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													3002
												],
												"declarations": [
													{
														"constant": false,
														"id": 3002,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3121,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3004,
												"initialValue": {
													"hexValue": "30",
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 3118,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3005,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3021,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 3020,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3015,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3016,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3019,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3022,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3038,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 3037,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 3031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3027,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3032,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 3035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3033,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3036,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3039,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3055,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 3054,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 3048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3044,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3049,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 3052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3050,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3053,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3056,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3072,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 3071,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3061,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3066,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 3069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3067,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3070,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3073,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3089,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 3088,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3078,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3083,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 3086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3084,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3087,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3090,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3106,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 3105,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3095,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3100,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 3103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3101,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3104,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3117,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 3116,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3112,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3115,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3119,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3002,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3000,
												"id": 3120,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3302,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3156,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 3155,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															3134
														],
														"declarations": [
															{
																"constant": false,
																"id": 3134,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3155,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3133,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3138,
														"initialValue": {
															"arguments": [
																{
																	"id": 3136,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3125,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3135,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3122,
																	3157
																],
																"referencedDeclaration": 3122,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3139,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3134,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3141,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3128,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3140,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3301,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2259_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3143,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3144,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3134,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3146,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3125,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3152,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3132,
														"id": 3154,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3123,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2259",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3126,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2259,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2259,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2259",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3302,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3243,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													3166
												],
												"declarations": [
													{
														"constant": false,
														"id": 3166,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3243,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3168,
												"initialValue": {
													"hexValue": "30",
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3240,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3169,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3160,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3183,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 3182,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 3176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3174,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3177,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 3180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3178,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3181,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3160,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3198,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 3197,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3189,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3192,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 3195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3193,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3196,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3199,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3160,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3213,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3212,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3204,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3207,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3208,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3211,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3160,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3228,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3227,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3219,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3222,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3223,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3226,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3229,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3160,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3239,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3238,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3234,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3237,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3241,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3166,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3164,
												"id": 3242,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 3158,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3302,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3281,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3280,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3256
														],
														"declarations": [
															{
																"constant": false,
																"id": 3256,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3280,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3255,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3260,
														"initialValue": {
															"arguments": [
																{
																	"id": 3258,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3247,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3257,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3244,
																	3282
																],
																"referencedDeclaration": 3244,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3261,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3256,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3263,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3250,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2259",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3262,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3301,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2259_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3265,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3268,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3266,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3256,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3267,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3269,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3271,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3247,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3277,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3254,
														"id": 3279,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3245,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2259",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3248,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2259,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2259,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2259",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3302,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3300,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3293,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3286,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2259",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2259",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3291,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3290,
												"id": 3299,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3283,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3301,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2259",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3284,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2259,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2259,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2259",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3301,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3302,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3303,
							"src": "203:14914:12",
							"usedErrors": [
								2254
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3407
						]
					},
					"id": 3408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3305,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3407,
							"linearizedBaseContracts": [
								3407
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3322,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3315,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3308,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3316,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3319,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3318,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3308,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3314,
												"id": 3321,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3306,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3323,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3307,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3323,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3309,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3323,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3312,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3407,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3333,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3326,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3334,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3337,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3328,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3336,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3326,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3332,
												"id": 3339,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3324,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3325,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3330,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3407,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3384,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3352
												],
												"declarations": [
													{
														"constant": false,
														"id": 3352,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3384,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3351,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3365,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3353,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3344,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3354,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3346,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3356,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3357,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3344,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3358,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3346,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3360,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3363,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3366,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3352,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3371,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3352,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3369,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3367,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3376,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3344,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3377,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3346,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3379,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3381,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3350,
												"id": 3383,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3342,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3344,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3343,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3346,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3345,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3348,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3407,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3405,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3404,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3395,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3388,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3399,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3388,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3398,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3388,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3393,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3392,
														"id": 3403,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3386,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3406,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3387,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3406,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3407,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3408,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"src/NFTmarket.sol": {
				"ast": {
					"absolutePath": "src/NFTmarket.sol",
					"exportedSymbols": {
						"Context": [
							1957
						],
						"ERC165": [
							2236
						],
						"ERC20": [
							651
						],
						"ERC721": [
							1764
						],
						"IERC165": [
							2248
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IERC721": [
							1881
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1927
						],
						"IERC721Receiver": [
							1899
						],
						"NFTmarket": [
							3928
						],
						"Strings": [
							2212
						]
					},
					"id": 3929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3410,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 1765,
							"src": "61:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3929,
							"sourceUnit": 652,
							"src": "120:55:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NFTmarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3928,
							"linearizedBaseContracts": [
								3928
							],
							"name": "NFTmarket",
							"nameLocation": "188:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "785e9e86",
									"id": 3414,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "219:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3928,
									"src": "205:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3413,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3412,
											"name": "IERC20",
											"nameLocations": [
												"205:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "205:6:14"
										},
										"referencedDeclaration": 729,
										"src": "205:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bca6ce64",
									"id": 3417,
									"mutability": "mutable",
									"name": "erc721",
									"nameLocation": "246:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 3928,
									"src": "231:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1881",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 3416,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3415,
											"name": "IERC721",
											"nameLocations": [
												"231:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1881,
											"src": "231:7:14"
										},
										"referencedDeclaration": 1881,
										"src": "231:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1881",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 3420,
									"mutability": "constant",
									"name": "MAGIC_ON_ERC721_RECEIVED",
									"nameLocation": "286:24:14",
									"nodeType": "VariableDeclaration",
									"scope": 3928,
									"src": "261:62:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 3418,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "261:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783135306237613032",
										"id": 3419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:10:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_353073666_by_1",
											"typeString": "int_const 353073666"
										},
										"value": "0x150b7a02"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "NFTmarket.Order",
									"id": 3427,
									"members": [
										{
											"constant": false,
											"id": 3422,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "364:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 3427,
											"src": "356:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3421,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "356:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3424,
											"mutability": "mutable",
											"name": "tokenID",
											"nameLocation": "389:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 3427,
											"src": "381:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3423,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "381:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3426,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "415:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 3427,
											"src": "407:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3425,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "407:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Order",
									"nameLocation": "339:5:14",
									"nodeType": "StructDefinition",
									"scope": 3928,
									"src": "332:96:14",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3432,
									"mutability": "mutable",
									"name": "IDinOrder",
									"nameLocation": "461:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3928,
									"src": "434:36:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
										"typeString": "mapping(uint256 => struct NFTmarket.Order)"
									},
									"typeName": {
										"id": 3431,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3428,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "443:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "434:26:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
											"typeString": "mapping(uint256 => struct NFTmarket.Order)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3430,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3429,
												"name": "Order",
												"nameLocations": [
													"454:5:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3427,
												"src": "454:5:14"
											},
											"referencedDeclaration": 3427,
											"src": "454:5:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
												"typeString": "struct NFTmarket.Order"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a85c38ef",
									"id": 3436,
									"mutability": "mutable",
									"name": "orders",
									"nameLocation": "512:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 3928,
									"src": "497:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
										"typeString": "struct NFTmarket.Order[]"
									},
									"typeName": {
										"baseType": {
											"id": 3434,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3433,
												"name": "Order",
												"nameLocations": [
													"497:5:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3427,
												"src": "497:5:14"
											},
											"referencedDeclaration": 3427,
											"src": "497:5:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
												"typeString": "struct NFTmarket.Order"
											}
										},
										"id": 3435,
										"nodeType": "ArrayTypeName",
										"src": "497:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr",
											"typeString": "struct NFTmarket.Order[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3440,
									"mutability": "mutable",
									"name": "IDofOrder",
									"nameLocation": "554:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3928,
									"src": "525:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3439,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3437,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "534:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "525:28:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "424d5e5f0192c7dacdbe646ca31b00299146d883d76a95ef5cddbac7cd342eab",
									"id": 3450,
									"name": "Deal",
									"nameLocation": "578:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "591:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "583:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "607:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "599:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3446,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "622:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "614:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3448,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "639:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "631:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:63:14"
									},
									"src": "572:74:14"
								},
								{
									"anonymous": false,
									"eventSelector": "d5b509e657d5ec37ae4bdcab658b7340c0453bb630516d26623359a34c1cecf3",
									"id": 3458,
									"name": "NewOrder",
									"nameLocation": "658:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3452,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "675:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "667:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "691:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "683:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "708:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "700:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:48:14"
									},
									"src": "652:63:14"
								},
								{
									"anonymous": false,
									"eventSelector": "dac6aecd066304d15a41e8e590fc5ab5bf93634f43cba363f743d5e158d79988",
									"id": 3468,
									"name": "PriceChanged",
									"nameLocation": "727:12:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3460,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "748:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "740:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "764:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "756:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3464,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousprice",
												"nameLocation": "781:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "773:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3466,
												"indexed": false,
												"mutability": "mutable",
												"name": "newprice",
												"nameLocation": "804:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "796:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:74:14"
									},
									"src": "721:93:14"
								},
								{
									"anonymous": false,
									"eventSelector": "c0e68d6b69f741c21e955cad2ae4d505b6f6735c7e7b278251b3f6283a5f07eb",
									"id": 3474,
									"name": "CancelOrder",
									"nameLocation": "826:11:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3470,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "846:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "838:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3472,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "862:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "854:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:33:14"
									},
									"src": "820:51:14"
								},
								{
									"body": {
										"id": 3513,
										"nodeType": "Block",
										"src": "923:190:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3482,
																"name": "_erc20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3476,
																"src": "942:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "960:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "952:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3483,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "952:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "952:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "942:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472657373",
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "964:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															},
															"value": "zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															}
														],
														"id": 3481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "934:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3490,
												"nodeType": "ExpressionStatement",
												"src": "934:45:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3492,
																"name": "_erc721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3478,
																"src": "998:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1017:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1009:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3493,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1009:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1009:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "998:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472657373",
															"id": 3498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1021:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															},
															"value": "zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															}
														],
														"id": 3491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "990:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3500,
												"nodeType": "ExpressionStatement",
												"src": "990:46:14"
											},
											{
												"expression": {
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3501,
														"name": "erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3414,
														"src": "1047:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3503,
																"name": "_erc20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3476,
																"src": "1062:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3502,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1055:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1055:14:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1047:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 3506,
												"nodeType": "ExpressionStatement",
												"src": "1047:22:14"
											},
											{
												"expression": {
													"id": 3511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3507,
														"name": "erc721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3417,
														"src": "1080:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1881",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3509,
																"name": "_erc721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3478,
																"src": "1097:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3508,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "1089:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 3510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1089:16:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1881",
															"typeString": "contract IERC721"
														}
													},
													"src": "1080:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1881",
														"typeString": "contract IERC721"
													}
												},
												"id": 3512,
												"nodeType": "ExpressionStatement",
												"src": "1080:25:14"
											}
										]
									},
									"id": 3514,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "899:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3514,
												"src": "891:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3478,
												"mutability": "mutable",
												"name": "_erc721",
												"nameLocation": "915:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3514,
												"src": "907:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:33:14"
									},
									"returnParameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:14"
									},
									"scope": 3928,
									"src": "879:234:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3570,
										"nodeType": "Block",
										"src": "1160:385:14",
										"statements": [
											{
												"assignments": [
													3520
												],
												"declarations": [
													{
														"constant": false,
														"id": 3520,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "1179:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3570,
														"src": "1171:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3519,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1171:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3525,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3521,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "1188:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3523,
														"indexExpression": {
															"id": 3522,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "1198:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1188:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1208:6:14",
													"memberName": "seller",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3422,
													"src": "1188:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1171:43:14"
											},
											{
												"assignments": [
													3527
												],
												"declarations": [
													{
														"constant": false,
														"id": 3527,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "1233:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3570,
														"src": "1225:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3526,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1225:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3530,
												"initialValue": {
													"expression": {
														"id": 3528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1241:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1245:6:14",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1241:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1225:26:14"
											},
											{
												"assignments": [
													3532
												],
												"declarations": [
													{
														"constant": false,
														"id": 3532,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1270:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3570,
														"src": "1262:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1262:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3537,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3533,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "1278:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3535,
														"indexExpression": {
															"id": 3534,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "1288:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1278:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"id": 3536,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1298:5:14",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3426,
													"src": "1278:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1262:41:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3541,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3527,
																	"src": "1343:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3542,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3520,
																	"src": "1350:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3543,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3532,
																	"src": "1358:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3539,
																	"name": "erc20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3414,
																	"src": "1324:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1330:12:14",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "1324:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1324:40:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c",
															"id": 3545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																"typeString": "literal_string \"transfer fail\""
															},
															"value": "transfer fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																"typeString": "literal_string \"transfer fail\""
															}
														],
														"id": 3538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1316:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "1316:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3553,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1425:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTmarket_$3928",
																		"typeString": "contract NFTmarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTmarket_$3928",
																		"typeString": "contract NFTmarket"
																	}
																],
																"id": 3552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1417:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1417:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1417:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3555,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "1432:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3556,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "1439:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3548,
															"name": "erc721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3417,
															"src": "1393:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1881",
																"typeString": "contract IERC721"
															}
														},
														"id": 3550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1400:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1836,
														"src": "1393:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3558,
												"nodeType": "ExpressionStatement",
												"src": "1393:55:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3560,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "1473:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3559,
														"name": "removeOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3813,
														"src": "1461:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:21:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3562,
												"nodeType": "ExpressionStatement",
												"src": "1461:21:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3564,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3520,
															"src": "1505:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3565,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "1513:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3566,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "1521:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3567,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3532,
															"src": "1531:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3563,
														"name": "Deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "1500:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3569,
												"nodeType": "EmitStatement",
												"src": "1495:42:14"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 3571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "1130:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1142:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3571,
												"src": "1134:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:18:14"
									},
									"returnParameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:0:14"
									},
									"scope": 3928,
									"src": "1121:424:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3611,
										"nodeType": "Block",
										"src": "1596:266:14",
										"statements": [
											{
												"assignments": [
													3577
												],
												"declarations": [
													{
														"constant": false,
														"id": 3577,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "1615:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3611,
														"src": "1607:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3576,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1607:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3582,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3578,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "1624:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3580,
														"indexExpression": {
															"id": 3579,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "1634:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1624:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"id": 3581,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1644:6:14",
													"memberName": "seller",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3422,
													"src": "1624:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1607:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3584,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1669:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1673:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1669:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3586,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3577,
																"src": "1683:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1669:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073656c6c6572",
															"id": 3588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1691:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															},
															"value": "not seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															}
														],
														"id": 3583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1661:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1661:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3590,
												"nodeType": "ExpressionStatement",
												"src": "1661:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3596,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1749:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTmarket_$3928",
																		"typeString": "contract NFTmarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTmarket_$3928",
																		"typeString": "contract NFTmarket"
																	}
																],
																"id": 3595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1741:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1741:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1741:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3598,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3577,
															"src": "1756:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3599,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "1764:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3591,
															"name": "erc721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3417,
															"src": "1717:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1881",
																"typeString": "contract IERC721"
															}
														},
														"id": 3593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1724:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1836,
														"src": "1717:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:56:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3601,
												"nodeType": "ExpressionStatement",
												"src": "1717:56:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3603,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "1798:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3602,
														"name": "removeOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3813,
														"src": "1786:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:21:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3605,
												"nodeType": "ExpressionStatement",
												"src": "1786:21:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3607,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3577,
															"src": "1837:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3608,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "1845:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3606,
														"name": "CancelOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3474,
														"src": "1825:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1825:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3610,
												"nodeType": "EmitStatement",
												"src": "1820:34:14"
											}
										]
									},
									"functionSelector": "40e58ee5",
									"id": 3612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "1562:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1577:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "1569:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1568:18:14"
									},
									"returnParameters": {
										"id": 3575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:14"
									},
									"scope": 3928,
									"src": "1553:309:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3670,
										"nodeType": "Block",
										"src": "1929:387:14",
										"statements": [
											{
												"assignments": [
													3620
												],
												"declarations": [
													{
														"constant": false,
														"id": 3620,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "1948:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3670,
														"src": "1940:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3619,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1940:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3625,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3621,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "1957:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3623,
														"indexExpression": {
															"id": 3622,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3614,
															"src": "1967:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1957:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"id": 3624,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1977:6:14",
													"memberName": "seller",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3422,
													"src": "1957:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1940:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3627,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2002:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2006:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2002:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3629,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3620,
																"src": "2016:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2002:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073656c6c6572",
															"id": 3631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2024:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															},
															"value": "not seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															}
														],
														"id": 3626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1994:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1994:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3633,
												"nodeType": "ExpressionStatement",
												"src": "1994:43:14"
											},
											{
												"assignments": [
													3635
												],
												"declarations": [
													{
														"constant": false,
														"id": 3635,
														"mutability": "mutable",
														"name": "previousprice",
														"nameLocation": "2058:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 3670,
														"src": "2050:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2050:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3640,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3636,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "2074:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3638,
														"indexExpression": {
															"id": 3637,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3614,
															"src": "2084:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2074:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"id": 3639,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2094:5:14",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3426,
													"src": "2074:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2050:49:14"
											},
											{
												"expression": {
													"id": 3646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3641,
																"name": "IDinOrder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3432,
																"src": "2110:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																	"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
																}
															},
															"id": 3643,
															"indexExpression": {
																"id": 3642,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3614,
																"src": "2120:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2110:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Order_$3427_storage",
																"typeString": "struct NFTmarket.Order storage ref"
															}
														},
														"id": 3644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2130:5:14",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3426,
														"src": "2110:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3645,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3616,
														"src": "2138:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2110:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3647,
												"nodeType": "ExpressionStatement",
												"src": "2110:34:14"
											},
											{
												"assignments": [
													3650
												],
												"declarations": [
													{
														"constant": false,
														"id": 3650,
														"mutability": "mutable",
														"name": "order",
														"nameLocation": "2171:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3670,
														"src": "2157:19:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
															"typeString": "struct NFTmarket.Order"
														},
														"typeName": {
															"id": 3649,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3648,
																"name": "Order",
																"nameLocations": [
																	"2157:5:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3427,
																"src": "2157:5:14"
															},
															"referencedDeclaration": 3427,
															"src": "2157:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																"typeString": "struct NFTmarket.Order"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3656,
												"initialValue": {
													"baseExpression": {
														"id": 3651,
														"name": "orders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "2179:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
															"typeString": "struct NFTmarket.Order storage ref[] storage ref"
														}
													},
													"id": 3655,
													"indexExpression": {
														"baseExpression": {
															"id": 3652,
															"name": "IDofOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "2186:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3654,
														"indexExpression": {
															"id": 3653,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3614,
															"src": "2196:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2186:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2179:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Order_$3427_storage",
														"typeString": "struct NFTmarket.Order storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2157:49:14"
											},
											{
												"expression": {
													"id": 3661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3657,
															"name": "order",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3650,
															"src": "2217:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																"typeString": "struct NFTmarket.Order storage pointer"
															}
														},
														"id": 3659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2223:5:14",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3426,
														"src": "2217:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3660,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3616,
														"src": "2231:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2217:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3662,
												"nodeType": "ExpressionStatement",
												"src": "2217:20:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3664,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3620,
															"src": "2268:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3665,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3614,
															"src": "2276:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3666,
															"name": "previousprice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "2286:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3667,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3616,
															"src": "2301:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3663,
														"name": "PriceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "2255:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 3668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2255:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3669,
												"nodeType": "EmitStatement",
												"src": "2250:58:14"
											}
										]
									},
									"functionSelector": "3a52c7c2",
									"id": 3671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "change",
									"nameLocation": "1879:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1894:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3671,
												"src": "1886:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1912:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3671,
												"src": "1904:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:34:14"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:14"
									},
									"scope": 3928,
									"src": "1870:446:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3688,
										"nodeType": "Block",
										"src": "2386:66:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3678,
																"name": "IDinOrder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3432,
																"src": "2404:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																	"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
																}
															},
															"id": 3680,
															"indexExpression": {
																"id": 3679,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3673,
																"src": "2414:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2404:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Order_$3427_storage",
																"typeString": "struct NFTmarket.Order storage ref"
															}
														},
														"id": 3681,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2424:6:14",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3422,
														"src": "2404:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2442:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2434:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3682,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2434:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 3685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2434:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2404:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3677,
												"id": 3687,
												"nodeType": "Return",
												"src": "2397:47:14"
											}
										]
									},
									"functionSelector": "fcce4883",
									"id": 3689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isListed",
									"nameLocation": "2333:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "2350:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "2342:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:18:14"
									},
									"returnParameters": {
										"id": 3677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "2380:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2380:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2379:6:14"
									},
									"scope": 3928,
									"src": "2324:128:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3753,
										"nodeType": "Block",
										"src": "2582:368:14",
										"statements": [
											{
												"assignments": [
													3703
												],
												"declarations": [
													{
														"constant": false,
														"id": 3703,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2601:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3753,
														"src": "2593:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2593:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3708,
												"initialValue": {
													"arguments": [
														{
															"id": 3705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3697,
															"src": "2619:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"hexValue": "30",
															"id": 3706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2625:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 3704,
														"name": "toUint256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3848,
														"src": "2609:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint256)"
														}
													},
													"id": 3707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2609:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2593:34:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3710,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3703,
																"src": "2646:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2654:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2646:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365206d7573742062652067726561746572207468616e2030",
															"id": 3713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2657:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b",
																"typeString": "literal_string \"price must be greater than 0\""
															},
															"value": "price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27813ec983b1b1db3109d6215226b3556e39f7bfafa50f6b4df63c8e2a2a6e7b",
																"typeString": "literal_string \"price must be greater than 0\""
															}
														],
														"id": 3709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2638:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3715,
												"nodeType": "ExpressionStatement",
												"src": "2638:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3720,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3693,
																	"src": "2719:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3721,
																	"name": "tokenID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3695,
																	"src": "2725:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3722,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3703,
																	"src": "2734:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3719,
																"name": "Order",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3427,
																"src": "2713:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Order_$3427_storage_ptr_$",
																	"typeString": "type(struct NFTmarket.Order storage pointer)"
																}
															},
															"id": 3723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2713:27:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Order_$3427_memory_ptr",
																"typeString": "struct NFTmarket.Order memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Order_$3427_memory_ptr",
																"typeString": "struct NFTmarket.Order memory"
															}
														],
														"expression": {
															"id": 3716,
															"name": "orders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3436,
															"src": "2701:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																"typeString": "struct NFTmarket.Order storage ref[] storage ref"
															}
														},
														"id": 3718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2708:4:14",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2701:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr_$_t_struct$_Order_$3427_storage_$returns$__$attached_to$_t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTmarket.Order storage ref[] storage pointer,struct NFTmarket.Order storage ref)"
														}
													},
													"id": 3724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3725,
												"nodeType": "ExpressionStatement",
												"src": "2701:40:14"
											},
											{
												"expression": {
													"id": 3734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3726,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "2752:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3728,
														"indexExpression": {
															"id": 3727,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3695,
															"src": "2762:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2752:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3730,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3693,
																"src": "2779:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3731,
																"name": "tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3695,
																"src": "2785:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3732,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3703,
																"src": "2794:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3729,
															"name": "Order",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3427,
															"src": "2773:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Order_$3427_storage_ptr_$",
																"typeString": "type(struct NFTmarket.Order storage pointer)"
															}
														},
														"id": 3733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2773:27:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_memory_ptr",
															"typeString": "struct NFTmarket.Order memory"
														}
													},
													"src": "2752:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Order_$3427_storage",
														"typeString": "struct NFTmarket.Order storage ref"
													}
												},
												"id": 3735,
												"nodeType": "ExpressionStatement",
												"src": "2752:48:14"
											},
											{
												"expression": {
													"id": 3743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3736,
															"name": "IDofOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "2811:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3738,
														"indexExpression": {
															"id": 3737,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3695,
															"src": "2821:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2811:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3739,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3436,
																"src": "2832:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																	"typeString": "struct NFTmarket.Order storage ref[] storage ref"
																}
															},
															"id": 3740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2839:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2832:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 3741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2848:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2832:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2811:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3744,
												"nodeType": "ExpressionStatement",
												"src": "2811:38:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3746,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3693,
															"src": "2877:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3747,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3695,
															"src": "2883:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3748,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3703,
															"src": "2892:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3745,
														"name": "NewOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3458,
														"src": "2868:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 3749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3750,
												"nodeType": "EmitStatement",
												"src": "2863:35:14"
											},
											{
												"expression": {
													"id": 3751,
													"name": "MAGIC_ON_ERC721_RECEIVED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3420,
													"src": "2918:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 3701,
												"id": 3752,
												"nodeType": "Return",
												"src": "2911:31:14"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 3754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "2469:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3691,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2494:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "2486:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2512:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "2504:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "2526:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "2518:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2550:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "2535:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2535:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:70:14"
									},
									"returnParameters": {
										"id": 3701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "2574:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3699,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2574:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2573:8:14"
									},
									"scope": 3928,
									"src": "2460:490:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3812,
										"nodeType": "Block",
										"src": "3007:405:14",
										"statements": [
											{
												"assignments": [
													3760
												],
												"declarations": [
													{
														"constant": false,
														"id": 3760,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3026:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3812,
														"src": "3018:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3018:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3764,
												"initialValue": {
													"baseExpression": {
														"id": 3761,
														"name": "IDofOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "3034:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3763,
													"indexExpression": {
														"id": 3762,
														"name": "_tokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3756,
														"src": "3044:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3034:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3018:35:14"
											},
											{
												"assignments": [
													3766
												],
												"declarations": [
													{
														"constant": false,
														"id": 3766,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "3072:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 3812,
														"src": "3064:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3064:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3771,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3767,
															"name": "orders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3436,
															"src": "3084:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																"typeString": "struct NFTmarket.Order storage ref[] storage ref"
															}
														},
														"id": 3768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3091:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3084:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 3769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3100:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3084:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3064:37:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3772,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3760,
														"src": "3118:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3773,
														"name": "lastIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3766,
														"src": "3127:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3118:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3796,
												"nodeType": "IfStatement",
												"src": "3114:186:14",
												"trueBody": {
													"id": 3795,
													"nodeType": "Block",
													"src": "3137:163:14",
													"statements": [
														{
															"assignments": [
																3777
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3777,
																	"mutability": "mutable",
																	"name": "lastOrder",
																	"nameLocation": "3166:9:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 3795,
																	"src": "3152:23:14",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																		"typeString": "struct NFTmarket.Order"
																	},
																	"typeName": {
																		"id": 3776,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 3775,
																			"name": "Order",
																			"nameLocations": [
																				"3152:5:14"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 3427,
																			"src": "3152:5:14"
																		},
																		"referencedDeclaration": 3427,
																		"src": "3152:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																			"typeString": "struct NFTmarket.Order"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3781,
															"initialValue": {
																"baseExpression": {
																	"id": 3778,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3436,
																	"src": "3178:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																		"typeString": "struct NFTmarket.Order storage ref[] storage ref"
																	}
																},
																"id": 3780,
																"indexExpression": {
																	"id": 3779,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3766,
																	"src": "3185:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3178:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Order_$3427_storage",
																	"typeString": "struct NFTmarket.Order storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3152:43:14"
														},
														{
															"expression": {
																"id": 3786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3782,
																		"name": "orders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3436,
																		"src": "3210:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																			"typeString": "struct NFTmarket.Order storage ref[] storage ref"
																		}
																	},
																	"id": 3784,
																	"indexExpression": {
																		"id": 3783,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3760,
																		"src": "3217:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3210:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Order_$3427_storage",
																		"typeString": "struct NFTmarket.Order storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3785,
																	"name": "lastOrder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3777,
																	"src": "3227:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																		"typeString": "struct NFTmarket.Order storage pointer"
																	}
																},
																"src": "3210:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Order_$3427_storage",
																	"typeString": "struct NFTmarket.Order storage ref"
																}
															},
															"id": 3787,
															"nodeType": "ExpressionStatement",
															"src": "3210:26:14"
														},
														{
															"expression": {
																"id": 3793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3788,
																		"name": "IDofOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3440,
																		"src": "3251:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 3791,
																	"indexExpression": {
																		"expression": {
																			"id": 3789,
																			"name": "lastOrder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3777,
																			"src": "3261:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																				"typeString": "struct NFTmarket.Order storage pointer"
																			}
																		},
																		"id": 3790,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3271:7:14",
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3424,
																		"src": "3261:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3251:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3792,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3760,
																	"src": "3282:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3251:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3794,
															"nodeType": "ExpressionStatement",
															"src": "3251:36:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3797,
															"name": "orders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3436,
															"src": "3321:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																"typeString": "struct NFTmarket.Order storage ref[] storage ref"
															}
														},
														"id": 3799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3328:3:14",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "3321:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTmarket.Order storage ref[] storage pointer)"
														}
													},
													"id": 3800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3321:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3801,
												"nodeType": "ExpressionStatement",
												"src": "3321:12:14"
											},
											{
												"expression": {
													"id": 3805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3344:26:14",
													"subExpression": {
														"baseExpression": {
															"id": 3802,
															"name": "IDinOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "3351:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Order_$3427_storage_$",
																"typeString": "mapping(uint256 => struct NFTmarket.Order storage ref)"
															}
														},
														"id": 3804,
														"indexExpression": {
															"id": 3803,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3756,
															"src": "3361:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3351:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage",
															"typeString": "struct NFTmarket.Order storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3806,
												"nodeType": "ExpressionStatement",
												"src": "3344:26:14"
											},
											{
												"expression": {
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3381:23:14",
													"subExpression": {
														"baseExpression": {
															"id": 3807,
															"name": "IDofOrder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "3388:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3809,
														"indexExpression": {
															"id": 3808,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3760,
															"src": "3398:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3388:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3811,
												"nodeType": "ExpressionStatement",
												"src": "3381:23:14"
											}
										]
									},
									"id": 3813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeOrder",
									"nameLocation": "2967:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3756,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "2987:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "2979:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2978:18:14"
									},
									"returnParameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3007:0:14"
									},
									"scope": 3928,
									"src": "2958:454:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3847,
										"nodeType": "Block",
										"src": "3506:302:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3823,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3817,
																	"src": "3525:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3534:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3525:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3826,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3817,
																"src": "3540:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3525:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b65743a746f55696e743235365f6f766572666c6f77",
															"id": 3828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3548:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01",
																"typeString": "literal_string \"Market:toUint256_overflow\""
															},
															"value": "Market:toUint256_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32d61b2371cf1bfc56bf4c5e37ae0eeecd4b4198246aeaeb334ea9c611740c01",
																"typeString": "literal_string \"Market:toUint256_overflow\""
															}
														],
														"id": 3822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3517:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3517:59:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3830,
												"nodeType": "ExpressionStatement",
												"src": "3517:59:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3832,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3815,
																	"src": "3595:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3602:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3595:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3834,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3817,
																	"src": "3612:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3621:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3612:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3595:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e743235365f6f75744f66426f756e6473",
															"id": 3838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3625:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b",
																"typeString": "literal_string \"toUint256_outOfBounds\""
															},
															"value": "toUint256_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b",
																"typeString": "literal_string \"toUint256_outOfBounds\""
															}
														],
														"id": 3831,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3587:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3587:62:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3840,
												"nodeType": "ExpressionStatement",
												"src": "3587:62:14"
											},
											{
												"assignments": [
													3842
												],
												"declarations": [
													{
														"constant": false,
														"id": 3842,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "3668:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 3847,
														"src": "3660:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3841,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3660:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3843,
												"nodeType": "VariableDeclarationStatement",
												"src": "3660:16:14"
											},
											{
												"AST": {
													"nativeSrc": "3698:75:14",
													"nodeType": "YulBlock",
													"src": "3698:75:14",
													"statements": [
														{
															"nativeSrc": "3713:49:14",
															"nodeType": "YulAssignment",
															"src": "3713:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "3739:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3739:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3747:4:14",
																						"nodeType": "YulLiteral",
																						"src": "3747:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3735:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3735:3:14"
																				},
																				"nativeSrc": "3735:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3735:17:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "3754:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3731:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:14"
																		},
																		"nativeSrc": "3731:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:30:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3725:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3725:5:14"
																},
																"nativeSrc": "3725:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3725:37:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "3713:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3713:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3815,
														"isOffset": false,
														"isSlot": false,
														"src": "3739:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3817,
														"isOffset": false,
														"isSlot": false,
														"src": "3754:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3842,
														"isOffset": false,
														"isSlot": false,
														"src": "3713:8:14",
														"valueSize": 1
													}
												],
												"id": 3844,
												"nodeType": "InlineAssembly",
												"src": "3689:84:14"
											},
											{
												"expression": {
													"id": 3845,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3842,
													"src": "3792:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3821,
												"id": 3846,
												"nodeType": "Return",
												"src": "3785:15:14"
											}
										]
									},
									"functionSelector": "b5cdf924",
									"id": 3848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "3429:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3815,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "3452:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "3439:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3439:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3817,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "3468:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "3460:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3460:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:37:14"
									},
									"returnParameters": {
										"id": 3821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "3497:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3496:9:14"
									},
									"scope": 3928,
									"src": "3420:388:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3856,
										"nodeType": "Block",
										"src": "3872:39:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3853,
														"name": "orders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "3890:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
															"typeString": "struct NFTmarket.Order storage ref[] storage ref"
														}
													},
													"id": 3854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3897:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3890:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3852,
												"id": 3855,
												"nodeType": "Return",
												"src": "3883:20:14"
											}
										]
									},
									"functionSelector": "9d4971b7",
									"id": 3857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOrderLength",
									"nameLocation": "3825:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3839:2:14"
									},
									"returnParameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3857,
												"src": "3864:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:9:14"
									},
									"scope": 3928,
									"src": "3816:95:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3866,
										"nodeType": "Block",
										"src": "3979:32:14",
										"statements": [
											{
												"expression": {
													"id": 3864,
													"name": "orders",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3436,
													"src": "3997:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
														"typeString": "struct NFTmarket.Order storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 3863,
												"id": 3865,
												"nodeType": "Return",
												"src": "3990:13:14"
											}
										]
									},
									"functionSelector": "e0391b09",
									"id": 3867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllNFTs",
									"nameLocation": "3928:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3938:2:14"
									},
									"returnParameters": {
										"id": 3863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3867,
												"src": "3963:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTmarket.Order[]"
												},
												"typeName": {
													"baseType": {
														"id": 3860,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3859,
															"name": "Order",
															"nameLocations": [
																"3963:5:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3427,
															"src": "3963:5:14"
														},
														"referencedDeclaration": 3427,
														"src": "3963:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
															"typeString": "struct NFTmarket.Order"
														}
													},
													"id": 3861,
													"nodeType": "ArrayTypeName",
													"src": "3963:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr",
														"typeString": "struct NFTmarket.Order[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3962:16:14"
									},
									"scope": 3928,
									"src": "3919:92:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3926,
										"nodeType": "Block",
										"src": "4077:328:14",
										"statements": [
											{
												"assignments": [
													3878
												],
												"declarations": [
													{
														"constant": false,
														"id": 3878,
														"mutability": "mutable",
														"name": "myOrders",
														"nameLocation": "4103:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 3926,
														"src": "4088:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTmarket.Order[]"
														},
														"typeName": {
															"baseType": {
																"id": 3876,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3875,
																	"name": "Order",
																	"nameLocations": [
																		"4088:5:14"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3427,
																	"src": "4088:5:14"
																},
																"referencedDeclaration": 3427,
																"src": "4088:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																	"typeString": "struct NFTmarket.Order"
																}
															},
															"id": 3877,
															"nodeType": "ArrayTypeName",
															"src": "4088:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr",
																"typeString": "struct NFTmarket.Order[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3886,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3883,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3436,
																"src": "4126:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																	"typeString": "struct NFTmarket.Order storage ref[] storage ref"
																}
															},
															"id": 3884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4133:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4126:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4114:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTmarket.Order memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3880,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3879,
																	"name": "Order",
																	"nameLocations": [
																		"4118:5:14"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3427,
																	"src": "4118:5:14"
																},
																"referencedDeclaration": 3427,
																"src": "4118:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
																	"typeString": "struct NFTmarket.Order"
																}
															},
															"id": 3881,
															"nodeType": "ArrayTypeName",
															"src": "4118:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr",
																"typeString": "struct NFTmarket.Order[]"
															}
														}
													},
													"id": 3885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4114:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTmarket.Order memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4088:52:14"
											},
											{
												"assignments": [
													3888
												],
												"declarations": [
													{
														"constant": false,
														"id": 3888,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "4159:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3926,
														"src": "4151:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4151:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3890,
												"initialValue": {
													"hexValue": "30",
													"id": 3889,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4167:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4151:17:14"
											},
											{
												"body": {
													"id": 3922,
													"nodeType": "Block",
													"src": "4223:149:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3902,
																			"name": "orders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3436,
																			"src": "4241:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																				"typeString": "struct NFTmarket.Order storage ref[] storage ref"
																			}
																		},
																		"id": 3904,
																		"indexExpression": {
																			"id": 3903,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3892,
																			"src": "4248:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4241:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Order_$3427_storage",
																			"typeString": "struct NFTmarket.Order storage ref"
																		}
																	},
																	"id": 3905,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4251:6:14",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3422,
																	"src": "4241:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3906,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4261:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4265:6:14",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4261:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4241:30:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3921,
															"nodeType": "IfStatement",
															"src": "4238:123:14",
															"trueBody": {
																"id": 3920,
																"nodeType": "Block",
																"src": "4272:89:14",
																"statements": [
																	{
																		"expression": {
																			"id": 3915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3909,
																					"name": "myOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3878,
																					"src": "4291:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTmarket.Order memory[] memory"
																					}
																				},
																				"id": 3911,
																				"indexExpression": {
																					"id": 3910,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3888,
																					"src": "4300:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4291:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Order_$3427_memory_ptr",
																					"typeString": "struct NFTmarket.Order memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3912,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3436,
																					"src": "4309:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																						"typeString": "struct NFTmarket.Order storage ref[] storage ref"
																					}
																				},
																				"id": 3914,
																				"indexExpression": {
																					"id": 3913,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3892,
																					"src": "4316:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4309:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Order_$3427_storage",
																					"typeString": "struct NFTmarket.Order storage ref"
																				}
																			},
																			"src": "4291:27:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Order_$3427_memory_ptr",
																				"typeString": "struct NFTmarket.Order memory"
																			}
																		},
																		"id": 3916,
																		"nodeType": "ExpressionStatement",
																		"src": "4291:27:14"
																	},
																	{
																		"expression": {
																			"id": 3918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4337:8:14",
																			"subExpression": {
																				"id": 3917,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3888,
																				"src": "4337:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3919,
																		"nodeType": "ExpressionStatement",
																		"src": "4337:8:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3895,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3892,
														"src": "4199:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3896,
															"name": "orders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3436,
															"src": "4203:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage",
																"typeString": "struct NFTmarket.Order storage ref[] storage ref"
															}
														},
														"id": 3897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4210:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4203:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4199:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3923,
												"initializationExpression": {
													"assignments": [
														3892
													],
													"declarations": [
														{
															"constant": false,
															"id": 3892,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4192:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3923,
															"src": "4184:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3891,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4184:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3894,
													"initialValue": {
														"hexValue": "30",
														"id": 3893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4196:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4184:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4218:4:14",
														"subExpression": {
															"id": 3899,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3892,
															"src": "4218:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3901,
													"nodeType": "ExpressionStatement",
													"src": "4218:4:14"
												},
												"nodeType": "ForStatement",
												"src": "4179:193:14"
											},
											{
												"expression": {
													"id": 3924,
													"name": "myOrders",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3878,
													"src": "4389:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTmarket.Order memory[] memory"
													}
												},
												"functionReturnParameters": 3873,
												"id": 3925,
												"nodeType": "Return",
												"src": "4382:15:14"
											}
										]
									},
									"functionSelector": "629cb2e4",
									"id": 3927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyNFTs",
									"nameLocation": "4028:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4037:2:14"
									},
									"returnParameters": {
										"id": 3873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "4062:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Order_$3427_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTmarket.Order[]"
												},
												"typeName": {
													"baseType": {
														"id": 3870,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3869,
															"name": "Order",
															"nameLocations": [
																"4062:5:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3427,
															"src": "4062:5:14"
														},
														"referencedDeclaration": 3427,
														"src": "4062:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Order_$3427_storage_ptr",
															"typeString": "struct NFTmarket.Order"
														}
													},
													"id": 3871,
													"nodeType": "ArrayTypeName",
													"src": "4062:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Order_$3427_storage_$dyn_storage_ptr",
														"typeString": "struct NFTmarket.Order[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4061:16:14"
									},
									"scope": 3928,
									"src": "4019:386:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3929,
							"src": "179:4229:14",
							"usedErrors": [],
							"usedEvents": [
								3450,
								3458,
								3468,
								3474
							]
						}
					],
					"src": "33:4381:14"
				},
				"id": 14
			}
		}
	}
}